[{"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/index.tsx":"1","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/reportWebVitals.ts":"2","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/client.ts":"3","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/App.tsx":"4","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindowProvider.tsx":"5","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/NotificationProvider.tsx":"6","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/Layout.tsx":"7","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/Notification.tsx":"8","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindow.tsx":"9","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/sidebar/Sidebar.tsx":"10","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/content/Content.tsx":"11","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/logo/Logo.tsx":"12","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/Users.tsx":"13","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/Registry.tsx":"14","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/schedule/Schedule.tsx":"15","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/profile/Profile.tsx":"16","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/PDFConfig.ts":"17","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/styles/selectStyles.ts":"18","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/models/models.ts":"19","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/helpers.ts":"20","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/users.ts":"21","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/register.ts":"22","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classrooms.ts":"23","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/classrooms/Classrooms.tsx":"24","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteClassroom.ts":"25","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/header/Header.tsx":"26","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/button/Button.tsx":"27","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/userProfile/UserProfile.tsx":"28","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/scheduleUnit/ScheduleUnit.tsx":"29","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/constants.ts":"30","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/schedule.ts":"31","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createClassroom.ts":"32","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/departments.ts":"33","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/classroom/Classroom.tsx":"34","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/Caviar.tsx":"35","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/title/Title.tsx":"36","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/instruments/Instruments.tsx":"37","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/ClassroomInfo.tsx":"38","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tag/Tag.tsx":"39","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/Footer.tsx":"40","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/freeClassroom.ts":"41","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantRegistration/OccupantRegistration.tsx":"42","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tooltip/Tooltip.tsx":"43","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantInfo/OccupantInfo.tsx":"44","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/occupyClassroom.ts":"45","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/edit/Edit.tsx":"46","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/add/Add.tsx":"47","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/delete/Delete.tsx":"48","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/HeaderSelect.tsx":"49","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/selectStyles.ts":"50","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/filterClassrooms.ts":"51","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerCheckBox/HeaderCheckbox.tsx":"52","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/dataList/DataList.tsx":"53","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useUsers.ts":"54","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useInstruments.ts":"55","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/instruments.ts":"56","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createInstrument.ts":"57","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteInstrument.ts":"58","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateInstrument.ts":"59","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDepartments.ts":"60","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useFaculties.ts":"61","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/faculties.ts":"62","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDepartment.ts":"63","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDepartment.ts":"64","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDepartment.ts":"65","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteFaculty.ts":"66","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createFaculty.ts":"67","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateFaculty.ts":"68","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDegrees.ts":"69","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDegree.ts":"70","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDegree.ts":"71","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDegree.ts":"72","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/degrees.ts":"73","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useClassrooms.tsx":"74","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/loader/Loader.tsx":"75","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/AdminClassrooms.tsx":"76","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/AdminUsers.tsx":"77","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/AdminFaculties.tsx":"78","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/AdminDegrees.tsx":"79","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/AdminDepartments.tsx":"80","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/admin/Admin.tsx":"81","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/AdminInstruments.tsx":"82","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/createClassroomPopupBody/CreateClassroomPopupBody.tsx":"83","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/browseClassroomPopupBody/BrowseClassroomPopupBody.tsx":"84","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/createFacultyPopupBody/CreateFacultyPopupBody.tsx":"85","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/createDegreePopupBody/CreateDegreePopupBody.tsx":"86","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/browseUserPopupBody/BrowseUserPopupBody.tsx":"87","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/createDepartmentPopupBody/CreateDepartmentPopupBody.tsx":"88","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/createInstrumentPopupBody/CreateInstrumentPopupBody.tsx":"89","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/browseInstrumentPopupBody/BrowseInstrumentPopupBody.tsx":"90","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/login/Login.tsx":"91","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/customInput/CustomInput.tsx":"92","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/login.ts":"93","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useMe.ts":"94","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/mail.js":"95","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/conjugate.ts":"96","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/femail.js":"97","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signUp.ts":"98","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/verifyUser.ts":"99","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useLocal.ts":"100","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/helpers/helpers.ts":"101","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/dashboard/Dashboard.tsx":"102","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/queueRecords.ts":"103","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/generalQueue.ts":"104","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/localize/localize.ts":"105","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/pendingClassrooms.ts":"106","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/freeClassrooms.ts":"107","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/queue/Queue.tsx":"108","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/usersQueue.ts":"109","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/addUserToQueue.ts":"110","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/removeUserFromQueue.ts":"111","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/DisableClassroom.tsx":"112","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/disableClassroom.ts":"113","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/enableClassroom.ts":"114","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/disabledClassrooms.ts":"115","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classroom.ts":"116","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/ConfirmFooter.tsx":"117","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/classrooms.ts":"118","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/CaviarItem.tsx":"119","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/giveOutClassroomKey.ts":"120","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/editUserPopupBody/EditUserPopupBody.tsx":"121","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateClassroom.ts":"122","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createUser.ts":"123","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signupEmployee.ts":"124","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteUser.ts":"125","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/errorHandler/ErrorHandler.tsx":"126"},{"size":1163,"mtime":1630274073330,"results":"127","hashOfConfig":"128"},{"size":425,"mtime":1618351407625,"results":"129","hashOfConfig":"128"},{"size":3231,"mtime":1630273640675,"results":"130","hashOfConfig":"128"},{"size":366,"mtime":1630178305320,"results":"131","hashOfConfig":"128"},{"size":1508,"mtime":1620650430912,"results":"132","hashOfConfig":"128"},{"size":1442,"mtime":1618351407598,"results":"133","hashOfConfig":"128"},{"size":900,"mtime":1626990730315,"results":"134","hashOfConfig":"128"},{"size":2009,"mtime":1618351407597,"results":"135","hashOfConfig":"128"},{"size":1800,"mtime":1618924470936,"results":"136","hashOfConfig":"128"},{"size":5344,"mtime":1629760146642,"results":"137","hashOfConfig":"128"},{"size":2845,"mtime":1629666550693,"results":"138","hashOfConfig":"128"},{"size":1021,"mtime":1618351407597,"results":"139","hashOfConfig":"128"},{"size":5924,"mtime":1629761963573,"results":"140","hashOfConfig":"128"},{"size":4098,"mtime":1618351407619,"results":"141","hashOfConfig":"128"},{"size":2169,"mtime":1629580132204,"results":"142","hashOfConfig":"128"},{"size":2400,"mtime":1629743211309,"results":"143","hashOfConfig":"128"},{"size":2551,"mtime":1618351407617,"results":"144","hashOfConfig":"128"},{"size":1849,"mtime":1620896099497,"results":"145","hashOfConfig":"128"},{"size":6660,"mtime":1630244027747,"results":"146","hashOfConfig":"128"},{"size":6276,"mtime":1629761006092,"results":"147","hashOfConfig":"128"},{"size":1565,"mtime":1630097881297,"results":"148","hashOfConfig":"128"},{"size":553,"mtime":1618351407522,"results":"149","hashOfConfig":"128"},{"size":973,"mtime":1630048015050,"results":"150","hashOfConfig":"128"},{"size":5375,"mtime":1630241359759,"results":"151","hashOfConfig":"128"},{"size":922,"mtime":1630048015042,"results":"152","hashOfConfig":"128"},{"size":240,"mtime":1618351407593,"results":"153","hashOfConfig":"128"},{"size":860,"mtime":1630063524757,"results":"154","hashOfConfig":"128"},{"size":1577,"mtime":1630098153715,"results":"155","hashOfConfig":"128"},{"size":2346,"mtime":1629580039241,"results":"156","hashOfConfig":"128"},{"size":230,"mtime":1630048014966,"results":"157","hashOfConfig":"128"},{"size":362,"mtime":1618351407523,"results":"158","hashOfConfig":"128"},{"size":912,"mtime":1630048015026,"results":"159","hashOfConfig":"128"},{"size":259,"mtime":1630063865094,"results":"160","hashOfConfig":"128"},{"size":5674,"mtime":1630241830013,"results":"161","hashOfConfig":"128"},{"size":597,"mtime":1629549631291,"results":"162","hashOfConfig":"128"},{"size":321,"mtime":1618351407602,"results":"163","hashOfConfig":"128"},{"size":1419,"mtime":1620474079372,"results":"164","hashOfConfig":"128"},{"size":3622,"mtime":1630242538610,"results":"165","hashOfConfig":"128"},{"size":624,"mtime":1618351407601,"results":"166","hashOfConfig":"128"},{"size":10141,"mtime":1629756882381,"results":"167","hashOfConfig":"128"},{"size":877,"mtime":1627337374560,"results":"168","hashOfConfig":"128"},{"size":8279,"mtime":1630273296875,"results":"169","hashOfConfig":"128"},{"size":260,"mtime":1618351407602,"results":"170","hashOfConfig":"128"},{"size":1552,"mtime":1628969892295,"results":"171","hashOfConfig":"128"},{"size":1241,"mtime":1629207980643,"results":"172","hashOfConfig":"128"},{"size":710,"mtime":1619127777030,"results":"173","hashOfConfig":"128"},{"size":339,"mtime":1618781817829,"results":"174","hashOfConfig":"128"},{"size":423,"mtime":1619127814320,"results":"175","hashOfConfig":"128"},{"size":329,"mtime":1618841678420,"results":"176","hashOfConfig":"128"},{"size":1202,"mtime":1618700160684,"results":"177","hashOfConfig":"128"},{"size":1757,"mtime":1630241316425,"results":"178","hashOfConfig":"128"},{"size":406,"mtime":1618858609526,"results":"179","hashOfConfig":"128"},{"size":2156,"mtime":1630273044157,"results":"180","hashOfConfig":"128"},{"size":491,"mtime":1628957607868,"results":"181","hashOfConfig":"128"},{"size":726,"mtime":1629580132210,"results":"182","hashOfConfig":"128"},{"size":351,"mtime":1618932762248,"results":"183","hashOfConfig":"128"},{"size":348,"mtime":1618921707227,"results":"184","hashOfConfig":"128"},{"size":242,"mtime":1627340159100,"results":"185","hashOfConfig":"128"},{"size":400,"mtime":1618930546389,"results":"186","hashOfConfig":"128"},{"size":609,"mtime":1630063934600,"results":"187","hashOfConfig":"128"},{"size":677,"mtime":1619010460893,"results":"188","hashOfConfig":"128"},{"size":220,"mtime":1619004236020,"results":"189","hashOfConfig":"128"},{"size":234,"mtime":1619005104551,"results":"190","hashOfConfig":"128"},{"size":242,"mtime":1627340159111,"results":"191","hashOfConfig":"128"},{"size":286,"mtime":1619008026042,"results":"192","hashOfConfig":"128"},{"size":230,"mtime":1627340159107,"results":"193","hashOfConfig":"128"},{"size":222,"mtime":1619011020952,"results":"194","hashOfConfig":"128"},{"size":271,"mtime":1619011082457,"results":"195","hashOfConfig":"128"},{"size":652,"mtime":1619015029554,"results":"196","hashOfConfig":"128"},{"size":226,"mtime":1627340159095,"results":"197","hashOfConfig":"128"},{"size":218,"mtime":1619014828121,"results":"198","hashOfConfig":"128"},{"size":266,"mtime":1619014919584,"results":"199","hashOfConfig":"128"},{"size":245,"mtime":1619015252188,"results":"200","hashOfConfig":"128"},{"size":781,"mtime":1630237801492,"results":"201","hashOfConfig":"128"},{"size":347,"mtime":1620421410625,"results":"202","hashOfConfig":"128"},{"size":5331,"mtime":1630239810702,"results":"203","hashOfConfig":"128"},{"size":7450,"mtime":1630096900077,"results":"204","hashOfConfig":"128"},{"size":3184,"mtime":1620423480835,"results":"205","hashOfConfig":"128"},{"size":3710,"mtime":1620423480779,"results":"206","hashOfConfig":"128"},{"size":3175,"mtime":1620423480904,"results":"207","hashOfConfig":"128"},{"size":2486,"mtime":1629749035242,"results":"208","hashOfConfig":"128"},{"size":4585,"mtime":1620685695323,"results":"209","hashOfConfig":"128"},{"size":14956,"mtime":1630273206894,"results":"210","hashOfConfig":"128"},{"size":1830,"mtime":1630048015061,"results":"211","hashOfConfig":"128"},{"size":2893,"mtime":1620423480757,"results":"212","hashOfConfig":"128"},{"size":4663,"mtime":1620423480785,"results":"213","hashOfConfig":"128"},{"size":2191,"mtime":1630098300858,"results":"214","hashOfConfig":"128"},{"size":4203,"mtime":1620423480814,"results":"215","hashOfConfig":"128"},{"size":6964,"mtime":1630099618709,"results":"216","hashOfConfig":"128"},{"size":886,"mtime":1620423480736,"results":"217","hashOfConfig":"128"},{"size":4645,"mtime":1630011304648,"results":"218","hashOfConfig":"128"},{"size":1022,"mtime":1620580468650,"results":"219","hashOfConfig":"128"},{"size":515,"mtime":1629236693243,"results":"220","hashOfConfig":"128"},{"size":301,"mtime":1620503582856,"results":"221","hashOfConfig":"128"},{"size":11557,"mtime":1620506932088,"results":"222","hashOfConfig":"128"},{"size":2462,"mtime":1620577995473,"results":"223","hashOfConfig":"128"},{"size":3767,"mtime":1620509383284,"results":"224","hashOfConfig":"128"},{"size":356,"mtime":1618351407518,"results":"225","hashOfConfig":"128"},{"size":432,"mtime":1629742252317,"results":"226","hashOfConfig":"128"},{"size":200,"mtime":1620857621134,"results":"227","hashOfConfig":"128"},{"size":333,"mtime":1620895052014,"results":"228","hashOfConfig":"128"},{"size":5383,"mtime":1629671046384,"results":"229","hashOfConfig":"128"},{"size":285,"mtime":1626729655716,"results":"230","hashOfConfig":"128"},{"size":195,"mtime":1627340270831,"results":"231","hashOfConfig":"128"},{"size":609,"mtime":1629669537126,"results":"232","hashOfConfig":"128"},{"size":396,"mtime":1626875518057,"results":"233","hashOfConfig":"128"},{"size":209,"mtime":1627340270836,"results":"234","hashOfConfig":"128"},{"size":7006,"mtime":1629757614292,"results":"235","hashOfConfig":"128"},{"size":490,"mtime":1629741539181,"results":"236","hashOfConfig":"128"},{"size":374,"mtime":1628974656100,"results":"237","hashOfConfig":"128"},{"size":261,"mtime":1629065143310,"results":"238","hashOfConfig":"128"},{"size":1250,"mtime":1627219687738,"results":"239","hashOfConfig":"128"},{"size":471,"mtime":1628881233956,"results":"240","hashOfConfig":"128"},{"size":469,"mtime":1628881239189,"results":"241","hashOfConfig":"128"},{"size":232,"mtime":1627221873060,"results":"242","hashOfConfig":"128"},{"size":782,"mtime":1630048015049,"results":"243","hashOfConfig":"128"},{"size":640,"mtime":1629062536858,"results":"244","hashOfConfig":"128"},{"size":421,"mtime":1629238841565,"results":"245","hashOfConfig":"128"},{"size":3271,"mtime":1630241982769,"results":"246","hashOfConfig":"128"},{"size":370,"mtime":1629750327361,"results":"247","hashOfConfig":"128"},{"size":8160,"mtime":1630098425486,"results":"248","hashOfConfig":"128"},{"size":963,"mtime":1630048015047,"results":"249","hashOfConfig":"128"},{"size":697,"mtime":1630048015033,"results":"250","hashOfConfig":"128"},{"size":660,"mtime":1630097289413,"results":"251","hashOfConfig":"128"},{"size":274,"mtime":1630068307958,"results":"252","hashOfConfig":"128"},{"size":849,"mtime":1630274314974,"results":"253","hashOfConfig":"128"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12dhxiy",{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"258"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"258"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"258"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"258"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"258"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"258"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"258"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"258"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"258"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"258"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"258"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"258"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"258"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"258"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"258"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"258"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"258"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"258"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"258"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"258"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"258"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"258"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"258"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"468"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"472"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"468"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"258"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"258"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"530"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/index.tsx",["537"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/reportWebVitals.ts",[],["538","539"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/client.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/App.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindowProvider.tsx",["540"],"import React, { createContext, useContext, useReducer, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport PopupWindow from \"./PopupWindow\";\nimport {isBlurredVar, isPassedVar} from \"../../api/client\";\n\ninterface PropTypes {}\n\nexport const PopupWindowContext = createContext({});\n\nconst PopupWindowProvider: React.FC<PropTypes> = ({ children }) => {\n  const [state, dispatch] = useReducer((state: any, action: any) => {\n    switch (action.type) {\n      case \"PUSH_POPUP_WINDOW\": {\n        isBlurredVar(true);\n        return [...state, { ...action.payload }];\n      }\n      case \"POP_POPUP_WINDOW\": {\n        if (state.length <= 1) {\n          isBlurredVar(false);\n          isPassedVar(false);\n        }\n        return [...state.slice(0, state.length - 1)];\n      }\n\n      default:\n        return state;\n    }\n  }, []);\n  return (\n    <PopupWindowContext.Provider value={dispatch}>\n      {state.map((popup: any) => (\n        <PopupWindow\n          key={popup.id}\n          body={popup.body}\n          header={popup.header}\n          footer={popup.footer}\n          isConfirm={popup.isConfirm}\n          dispatch={dispatch}\n        />\n      ))}\n      {children}\n    </PopupWindowContext.Provider>\n  );\n};\n\nexport const usePopupWindow = () => {\n  const dispatch = useContext(PopupWindowContext);\n  return (props: any) => {\n    // @ts-ignore\n    dispatch({\n      type: \"PUSH_POPUP_WINDOW\",\n      payload: {\n        id: v4(),\n        ...props,\n      },\n    });\n  };\n};\n\nexport default PopupWindowProvider;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/NotificationProvider.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/Layout.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/Notification.tsx",["541","542"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./notification.module.css\";\n\ninterface PropTypes {\n  message: string;\n  header: string;\n  dispatch: (value: any) => void;\n  id: string;\n  type?: \"ok\" | \"alert\";\n}\n\nconst Notification: React.FC<PropTypes> = ({\n  message,\n  type = \"default\",\n  dispatch,\n  id,\n  header,\n}) => {\n  const [exit, setExit] = useState(false);\n  const [opacity, setOpacity] = useState(100);\n  const [intervalId, setIntervalId]: any = useState(null);\n\n  const handleStartTimer = () => {\n    const id = setInterval(() => {\n      setOpacity((prevState) => {\n        if (prevState > 95) {\n          return prevState - 0.02;\n        } else if (prevState > 1) {\n          return prevState - 0.5;\n        } else {\n          handleCloseNotification();\n          return prevState;\n        }\n      });\n    }, 10);\n    setIntervalId(id);\n  };\n\n  const handlePauseTimer = () => {\n    clearInterval(intervalId);\n    setOpacity(100);\n  };\n\n  const handleCloseNotification = () => {\n    clearInterval(intervalId);\n    setExit(true);\n    setTimeout(() => {\n      dispatch({\n        type: \"REMOVE_NOTIFICATION\",\n        id: id,\n      });\n    }, 400);\n  };\n\n  useEffect(() => {\n    if (opacity < 1) {\n      handleCloseNotification();\n    }\n  }, [opacity]);\n\n  useEffect(() => {\n    handleStartTimer();\n  }, []);\n\n  return (\n    <div\n      onMouseEnter={handlePauseTimer}\n      onMouseLeave={handleStartTimer}\n      className={[styles.notification, exit ? styles.exit : \"\"].join(\" \")}\n      style={{ opacity: `${opacity / 100}` }}\n    >\n      <span\n        className={styles.notificationClose}\n        onClick={handleCloseNotification}\n      />\n      <p\n        className={[\n          type === \"ok\"\n            ? styles.ok\n            : type === \"alert\"\n            ? styles.alert\n            : styles.default\n        , styles.header].join(\" \")}\n      >\n        {header}\n      </p>\n      <p className={styles.message}>{message}</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindow.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/sidebar/Sidebar.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/content/Content.tsx",["543"],"import React from \"react\";\r\nimport styles from \"./content.module.css\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Registry from \"../../../pages/registry/Registry\";\r\nimport Schedule from \"../../../pages/schedule/Schedule\";\r\nimport Users from \"../../../pages/users/Users\";\r\nimport Profile from \"../../../pages/profile/Profile\";\r\nimport AdminClassrooms from \"../../../pages/admin/classrooms/AdminClassrooms\";\r\nimport AdminUsers from \"../../../pages/admin/users/AdminUsers\";\r\nimport Admin from \"../../../pages/admin/admin/Admin\";\r\nimport Classrooms from \"../../../pages/classrooms/Classrooms\";\r\nimport AdminInstruments from \"../../../pages/admin/instruments/AdminInstruments\";\r\nimport AdminDepartments from \"../../../pages/admin/departments/AdminDepartments\";\r\nimport AdminFaculties from \"../../../pages/admin/faculties/AdminFaculties\";\r\nimport AdminDegrees from \"../../../pages/admin/degrees/AdminDegrees\";\r\nimport Login from \"../../../pages/login/Login\";\r\nimport Dashboard from \"../../../pages/dashboard/Dashboard\";\r\nimport Queue from \"../../../pages/queue/Queue\";\r\nimport {User, UserTypes} from \"../../../models/models\";\r\n\r\ninterface PropTypes {\r\n  isLogged: boolean;\r\n}\r\n\r\nconst Content: React.FC<PropTypes> = ({isLogged}) => {\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n\r\n    return (\r\n      <div className={styles.content}>\r\n        {!isLogged\r\n          ? <Switch>\r\n            <Route path=\"/\" component={Login}/>\r\n          </Switch>\r\n\r\n          : user && (user.type === UserTypes.ADMIN || user.type === UserTypes.DISPATCHER) ? (\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Classrooms}/>\r\n              <Route path=\"/classrooms/:classroomName?\" component={Classrooms}/>\r\n              <Route path=\"/registry/:userId?\" component={Registry}/>\r\n              <Route path=\"/schedule\" component={Schedule}/>\r\n              <Route path=\"/users:userId?\" component={Users}/>\r\n              <Route path=\"/profile\" component={Profile}/>\r\n              <Route path=\"/admin\" component={Admin}/>\r\n              <Route path=\"/adminClassrooms\" component={AdminClassrooms}/>\r\n              <Route path=\"/adminUsers\" component={AdminUsers}/>\r\n              <Route path=\"/adminInstruments\" component={AdminInstruments}/>\r\n              <Route path=\"/adminDepartments\" component={AdminDepartments}/>\r\n              <Route path=\"/adminFaculties\" component={AdminFaculties}/>\r\n              <Route path=\"/adminDegrees\" component={AdminDegrees}/>\r\n              <Route path=\"/dashboard\" component={Dashboard}/>\r\n              <Route path=\"/queue\" component={Queue}/>\r\n            </Switch>\r\n          ) : (\r\n            <Switch>\r\n              <Route path=\"/dashboard\" component={Dashboard}/>\r\n            </Switch>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n;\r\n\r\nexport default Content;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/logo/Logo.tsx",["544"],"import React from \"react\";\nimport styles from \"./logo.module.css\";\n\ninterface PropTypes {\n  title: string;\n  description: string;\n  size?: \"small\" | \"default\";\n}\n\nconst Logo: React.FC<PropTypes> = ({\n  title,\n  description,\n  size = \"default\",\n}) => {\n  const style = {};\n  return (\n    <div className={styles.logoWrapper}>\n      <div\n        className={\n          size === \"default\"\n            ? styles.logo\n            : size === \"small\"\n            ? styles.smallLogo\n            : styles.logo\n        }\n      >\n        <div className={styles.logoText}>\n          <h1\n            className={\n              size === \"default\"\n                ? styles.logoTitle\n                : size === \"small\"\n                ? styles.smallLogoTitle\n                : styles.logoTitle\n            }\n          >\n            {title}\n          </h1>\n          {size !== \"small\" && (\n            <h2 className={styles.logoDescription}>{description}</h2>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/Users.tsx",["545","546","547","548","549"],"import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport mainStyles from \"./../../styles/main.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport {ACCESS_RIGHTS, StudentAccountStatus, User, UserTypeColors, UserTypes, UserTypesUa} from \"../../models/models\";\r\nimport {checkVerified, fullName, showNotification} from \"../../helpers/helpers\";\r\nimport {usePopupWindow} from \"../../components/popupWindow/PopupWindowProvider\";\r\nimport {CategoryType} from \"../../styles/selectStyles\";\r\nimport Edit from \"../../components/icons/edit/Edit\";\r\nimport HeaderSelect from \"../../components/headerSelect/HeaderSelect\";\r\nimport DataList from \"../../components/dataList/DataList\";\r\nimport useUsers from \"../../hooks/useUsers\";\r\nimport {useLocal} from \"../../hooks/useLocal\";\r\nimport {isAvailableAccess} from \"./helpers/helpers\";\r\nimport BrowseUserPopupBody from \"../admin/users/browseUserPopupBody/BrowseUserPopupBody\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {useMutation} from \"@apollo/client\";\r\nimport {VERIFY_USER} from \"../../api/operations/mutations/verifyUser\";\r\nimport {useNotification} from \"../../components/notification/NotificationProvider\";\r\nimport CountUp from \"react-countup\";\r\nimport {client} from \"../../api/client\";\r\nimport {GET_USER_BY_ID} from \"../../api/operations/queries/users\";\r\n\r\nconst categories: CategoryType[] = [\r\n  {\r\n    value: 'ALL',\r\n    label: 'Всі',\r\n    accessRights: ACCESS_RIGHTS.USER\r\n  },\r\n  {\r\n    value: UserTypes.TEACHER,\r\n    label: 'Викладачі',\r\n    accessRights: ACCESS_RIGHTS.USER\r\n  },\r\n  {\r\n    value: UserTypes.STUDENT,\r\n    label: 'Студенти',\r\n    accessRights: ACCESS_RIGHTS.DISPATCHER\r\n  },\r\n  {\r\n    value: UserTypes.POST_GRADUATE,\r\n    label: 'Аистенти/Аспіранти',\r\n    accessRights: ACCESS_RIGHTS.DISPATCHER\r\n  },\r\n  {\r\n    value: UserTypes.CONCERTMASTER,\r\n    label: 'Концертмейстери',\r\n    accessRights: ACCESS_RIGHTS.USER\r\n  },\r\n  {\r\n    value: UserTypes.ILLUSTRATOR,\r\n    label: 'Іллюстратори',\r\n    accessRights: ACCESS_RIGHTS.USER\r\n  }\r\n];\r\n\r\nconst listHeader = ['ID', 'П.І.Б.', 'Статус'];\r\n\r\nconst Users = () => {\r\n  const users = useUsers();\r\n  const dispatchPopupWindow = usePopupWindow();\r\n  const dispatchNotification = useNotification();\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [filteredUsers, setFilteredUsers] = useState<User[]>(users);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const {data: {accessRights}} = useLocal('accessRights');\r\n  const [verifyUser] = useMutation(VERIFY_USER);\r\n\r\n  useEffect(() => {\r\n    const onlyExisting = users.filter(user => !user.nameTemp && isAvailableAccess(accessRights, user));\r\n    setFilteredUsers(onlyExisting);\r\n  }, [users]);\r\n\r\n  const handleClick = (user: User) => {\r\n    dispatchPopupWindow({\r\n      header: <h1>{fullName(user)}</h1>,\r\n      body: <BrowseUserPopupBody user={user}/>,\r\n      footer: !checkVerified(user) && <Button onClick={() => verify(user.id)}>Верифікувати</Button>\r\n    });\r\n  };\r\n\r\n  const verify = async (userId: number) => {\r\n    try {\r\n      const result = await verifyUser({variables: {input: {userId}}});\r\n      if (result.data.verifyUser.userErrors.length) {\r\n        result.data.verifyUser.userErrors.forEach(({message}: any) => {\r\n          showNotification(dispatchNotification, ['Помилка!', message, 'alert']);\r\n        })\r\n      } else {\r\n        showNotification(dispatchNotification, ['Успішно!', 'Користувача верифіковано', 'ok']);\r\n      }\r\n    } catch (e) {\r\n      showNotification(dispatchNotification, ['Помилка!', e.message.slice(0, 100), 'alert']);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e: any) => {\r\n    setSearchValue(e.target.value.toLowerCase());\r\n    if (e.target.value) {\r\n      const filter = users.filter(user => !user.nameTemp && isAvailableAccess(accessRights, user))\r\n        .filter((user: User) => (fullName(user) + user.id).toLowerCase()\r\n          .includes(e.target.value.toLowerCase()));\r\n\r\n      setFilteredUsers(filter);\r\n      setIsSearching(true);\r\n    } else {\r\n      setFilteredUsers(users.filter((user: User) => isAvailableAccess(accessRights, user)));\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  const handleSelectCategory = (e: any) => {\r\n    const filter = users.filter((user: User) => user.type === e.value\r\n      && isAvailableAccess(accessRights, user));\r\n    if (e.value !== 'ALL') {\r\n      setFilteredUsers(filter);\r\n    } else {\r\n      setFilteredUsers(users.filter((user: User) => isAvailableAccess(accessRights, user)));\r\n    }\r\n  };\r\n\r\n  const listData = filteredUsers?.map((user: User) => <>\r\n    <span className={styles.centerText}>{user.id}</span>\r\n    <span onClick={() => handleClick(user)}>\r\n        {fullName(user)}\r\n      {!checkVerified(user) && <span className={styles.unverified}>Не верифіковано</span>}\r\n    </span>\r\n    <span className={styles.userType} style={{backgroundColor: UserTypeColors[user.type as UserTypes]}}>\r\n        {UserTypesUa[user.type as UserTypes]}\r\n      </span>\r\n  </>);\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <h1>Користувачі</h1>\r\n        <input\r\n          type=\"text\"\r\n          value={searchValue}\r\n          onChange={handleSearch}\r\n          placeholder=\"Пошук за П.І.Б або ID\"\r\n          className={mainStyles.headerInput}\r\n        />\r\n        <HeaderSelect\r\n          options={categories\r\n            .filter((item) => (item.accessRights as ACCESS_RIGHTS) <= accessRights)}\r\n          onChange={handleSelectCategory}/>\r\n        {accessRights === ACCESS_RIGHTS.ADMIN && <Edit path='/adminUsers'/>}\r\n      </Header>\r\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'auto 3fr 200px'}\r\n                isSearching={isSearching}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/Registry.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/schedule/Schedule.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/profile/Profile.tsx",["550","551","552"],"import React, {useState} from \"react\";\r\nimport styles from \"./profile.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport useUsers from \"../../hooks/useUsers\";\r\nimport {StudentAccountStatus, User, UserTypes, UserTypesUa} from \"../../models/models\";\r\nimport {fullName} from \"../../helpers/helpers\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {isLoggedVar} from \"../../api/client\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useMe} from \"../../hooks/useMe\";\r\nimport Edit from \"../../components/icons/edit/Edit\";\r\n\r\nconst Profile = () => {\r\n  const me = useMe();\r\n  const history = useHistory();\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const handleLogout = () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm('Ви бажаете вийти?')) {\r\n      isLoggedVar(false);\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('token');\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <h1>Мій профіль</h1>\r\n        <Button color='red' onClick={handleLogout}>Вийти</Button>\r\n        {!editMode && <Edit onClick={handleEdit}/>}\r\n      </Header>\r\n      <div className={styles.wrapper}>\r\n        {me && <div className={styles.profileData}>\r\n            <div><span>П.І.Б.:</span><span>{fullName(me)}</span></div>\r\n            <div><span>ID:</span><span>{me.id}</span></div>\r\n          {me.studentInfo.accountStatus === StudentAccountStatus.UNVERIFIED && <div><span>Верифіковано:</span><span>Ні</span></div>}\r\n            <div><span>Тип:</span><span>{UserTypesUa[me.type as UserTypes]}</span></div>\r\n          {me.department && <div><span>Кафедра:</span><span>{me.department.name}</span></div>}\r\n            <div><span>Тел.:</span><span>{me.phoneNumber}</span></div>\r\n          {me.extraPhoneNumbers && <div><span>Інші тел.:</span><span>\r\n                <ul>\r\n                  {JSON.parse(me.extraPhoneNumbers as string).map((item: string) => (<li>{item}</li>))}\r\n                </ul>\r\n            </span></div>}\r\n            <div><span>Дата закінчення</span><span>{me.expireDate}</span></div>\r\n            <div><span>Email:</span><span>{me.email}</span></div>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/PDFConfig.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/styles/selectStyles.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/models/models.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/helpers.ts",["553"],"import {HOUR, MINUTE, TIME_SNIPPETS, WORKING_DAY_END, WORKING_DAY_START,} from \"./constants\";\nimport {\n  ACCESS_RIGHTS,\n  OccupiedInfo,\n  OccupiedState,\n  ScheduleUnitType,\n  StudentAccountStatus,\n  User,\n  UserTypes,\n} from \"../models/models\";\nimport moment from \"moment\";\nimport {ReactElement} from \"react\";\nimport {accessRightsVar} from \"../api/client\";\n\nexport const getScheduleTimeline = (start: number, end: number): string[] => {\n  let timeSnippets: string[] = [];\n  for (let hour = start; hour <= end; hour++) {\n    if (hour === end) {\n      timeSnippets.push(hour + \":00\");\n    } else {\n      TIME_SNIPPETS.forEach((minutes) => {\n        timeSnippets.push(hour + minutes);\n      });\n    }\n  }\n  return timeSnippets;\n};\n\nconst getScheduleTimeInMilliseconds = (scheduleUnitTime: any) => {\n  return scheduleUnitTime\n    .split(\":\")\n    .map((el: any, index: number) => {\n      return index === 0 ? Number(el) * HOUR : Number(el) * MINUTE;\n    })\n    .reduce((acc: any, curr: any) => acc + curr);\n};\n\nexport const getPossiblyOccupied = (schedule: Array<any>) => {\n  const current =\n    new Date().getHours() * HOUR + new Date().getMinutes() * MINUTE;\n  const timeSnippets = schedule.map((el: any) => {\n    return {\n      from: getScheduleTimeInMilliseconds(el.from),\n      to: getScheduleTimeInMilliseconds(el.to),\n    };\n  });\n  return timeSnippets\n    .map((el: any) => {\n      return current >= el.from && current <= el.to;\n    })\n    .some((el: any) => el === true);\n};\n\nexport const getTimeHHMM = (date: Date) => {\n  return date.getHours() + \":\" + formatMinutesToMM(date.getMinutes());\n};\n\nexport const getScheduleUnitRowLength = (\n  schedule: Array<ScheduleUnitType>,\n  units: string\n) =>\n  schedule\n    .map((scheduleUnit: ScheduleUnitType) => {\n      return parseInt(scheduleUnit.to) - parseInt(scheduleUnit.from) + units;\n    })\n    .join(\" \");\n\nexport const formatMinutesToMM = (value: number) => {\n  if (value <= 9) return `0${value}`;\n  else return value;\n};\n\nexport const fullName = (user: User, withInitials = false) => {\n  if (user) {\n    if (user.nameTemp) return user.nameTemp\n    if (withInitials) {\n      return `${user.lastName} ${user.firstName.charAt(0)}. ${\n        user.patronymic ? user.patronymic.charAt(0) + \".\" : \"\"\n      }`;\n    } else {\n      return `${user.lastName} ${user.firstName} ${\n        user.patronymic ? user.patronymic : \"\"\n      }`;\n    }\n  }\n  return \"\";\n};\n\nexport const typeStyle = (occupied: OccupiedInfo) => {\n  const student = {backgroundColor: \"rgba(46,40,124)\", color: \"#fff\"};\n  const employee = {backgroundColor: \"#ffc000\", color: \"#fff\"};\n  const vacant = {\n    backgroundColor: \"transparent\",\n    color: \"#000\",\n  };\n  if (occupied !== null) {\n    switch (occupied.user?.type) {\n      case UserTypes.STUDENT:\n        return student;\n      case UserTypes.POST_GRADUATE:\n        return student;\n      default:\n        return employee;\n    }\n  }\n  return vacant;\n};\n\n//get int from time unit. ex: \"9:15\" -> 36 where each 15 min == 1; ex: \"00:15\" -> 1, \"10:00\" ->40\nconst simpleIntFromScheduleUnit = (time: string) => {\n  const reducer = (accumulator: any, currentValue: any) =>\n    accumulator + currentValue;\n  return time\n    .split(\":\")\n    .map((el: string, index: number) => {\n      if (index === 0) {\n        return parseInt(el) * 4;\n      } else {\n        switch (parseInt(el)) {\n          case 0:\n            return 0;\n          case 15:\n            return 1;\n          case 30:\n            return 2;\n          case 45:\n            return 3;\n        }\n      }\n    })\n    .reduce(reducer);\n};\n\n//get schedule units size in fr units for grids\nexport const getScheduleUnitSize = (\n  units: Array<ScheduleUnitType>,\n  fillEmpty = true\n) => {\n  const items = [];\n  if (fillEmpty) {\n    items.push(parseInt(units[0].from) - WORKING_DAY_START);\n  }\n  for (let item of units) {\n    const from = simpleIntFromScheduleUnit(item.from);\n    const to = simpleIntFromScheduleUnit(item.to);\n    items.push((to as number) - (from as number));\n  }\n  if (fillEmpty) {\n    items.push(WORKING_DAY_END - parseInt(units[units.length - 1].to));\n  }\n\n  return items.map((item) => `${item}fr`).join(\" \");\n};\n\nexport const ISODateString = (d: Date) => {\n  function pad(n: any) {\n    return n < 10 ? \"0\" + n : n;\n  }\n\n  return (\n    d.getUTCFullYear() +\n    \"-\" +\n    pad(d.getUTCMonth() + 1) +\n    \"-\" +\n    pad(d.getUTCDate())\n    // +\n    // \"T\" +\n    // pad(d.getUTCHours()) +\n    // \":\" +\n    // pad(d.getUTCMinutes()) +\n    // \":\" +\n    // pad(d.getUTCSeconds()) +\n    // \"Z\"\n  );\n};\n\nexport const scheduleUnitToDate = (item: ScheduleUnitType) => {\n  const from = item.from.split(':');\n  const to = item.to.split(':');\n  const fromHours = +from[0];\n  const fromMinutes = +from[1];\n  const toHours = +to[0];\n  const toMinutes = +to[1];\n  const fromDate = moment({hours: fromHours, minutes: fromMinutes, seconds: 0, milliseconds: 0});\n  const toDate = moment({hours: toHours, minutes: toMinutes, seconds: 0, milliseconds: 0});\n\n  return {\n    from: fromDate,\n    to: toDate\n  };\n};\n\nexport const isOccupiedOnSchedule = (scheduleUnits: ScheduleUnitType[]) => {\n  const result: any = [];\n\n  scheduleUnits.forEach(item => result.push(scheduleUnitToDate(item)));\n\n  return result.some((item: { from: Date, to: Date }) => {\n    const current = moment();\n\n    return current.isAfter(item.from) && current.isBefore(item.to);\n  });\n};\n\nexport const showNotification = (dispatcher: any, data: string[] | HTMLElement[] | ReactElement[]) => {\n  dispatcher({\n    header: data[0],\n    message: data[1],\n    type: data[2],\n  });\n};\n\nexport const setAccessRights = (user: User) => {\n  let accessRights = ACCESS_RIGHTS.USER;\n\n  if (user && user?.type) {\n    switch (user.type) {\n      case UserTypes.ADMIN:\n        accessRights = ACCESS_RIGHTS.ADMIN;\n        break;\n      case UserTypes.DISPATCHER:\n        accessRights = ACCESS_RIGHTS.DISPATCHER;\n        break;\n      default:\n        accessRights = ACCESS_RIGHTS.USER;\n    }\n  }\n\n  accessRightsVar(accessRights);\n};\n\n\nexport const isClassroomNotFree = (occupied: OccupiedInfo) => {\n  return occupied.state !== OccupiedState.FREE;\n};\n\nexport const checkVerified = (user: User) => {\n  if (!user.studentInfo) return true;\n  return user.studentInfo.accountStatus !== StudentAccountStatus.UNVERIFIED;\n};","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/users.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/register.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/classrooms/Classrooms.tsx",["554"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/header/Header.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/button/Button.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/userProfile/UserProfile.tsx",["555"],"import React from \"react\";\r\nimport styles from \"./userProfile.module.css\";\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {GET_USER_BY_ID} from \"../../api/operations/queries/users\";\r\nimport Title from \"../title/Title\";\r\nimport {UserTypes, UserTypesUa} from \"../../models/models\";\r\nimport Button from \"../button/Button\";\r\nimport moment from \"moment\";\r\n\r\ninterface PropTypes {\r\n  userId: number;\r\n}\r\n\r\nconst UserProfile: React.FC<PropTypes> = ({userId}) => {\r\n  const {data, loading, error} = useQuery(GET_USER_BY_ID, {\r\n    variables: {\r\n      where: {\r\n        id: userId,\r\n      }\r\n    },\r\n  });\r\n\r\n  if (!loading && !error)\r\n    return (\r\n      <div>\r\n        <Title title=\"Персональний номер\"/>\r\n        <p>{data.user.id}</p>\r\n        <Title title=\"Статус\"/>\r\n        <p>{UserTypesUa[data.user.type as UserTypes]}</p>\r\n        {data.user.department && (\r\n          <>\r\n            <Title title=\"Кафедра\"/>\r\n            <p>{data.user.department.name}</p>\r\n          </>\r\n        )}\r\n        <Title title=\"E-mail\"/>\r\n        <p>\r\n          <Button>\r\n            <a className={styles.link} href={`mailto:${data.user.email}`}>\r\n              {data.user.email}\r\n            </a>\r\n          </Button>\r\n        </p>\r\n        <Title title=\"Телефон\"/>\r\n        <p>\r\n          <Button>\r\n            <a className={styles.link} href={`tel:${data.user.phoneNumber}`}>\r\n              {data.user.phoneNumber}\r\n            </a>\r\n          </Button>\r\n        </p>\r\n      </div>\r\n    );\r\n  return <p>Loading...</p>;\r\n};\r\n\r\nexport default UserProfile;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/scheduleUnit/ScheduleUnit.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/constants.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/schedule.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/departments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/classroom/Classroom.tsx",["556","557"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/Caviar.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/title/Title.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/instruments/Instruments.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/ClassroomInfo.tsx",["558"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tag/Tag.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/Footer.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/freeClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantRegistration/OccupantRegistration.tsx",["559","560"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tooltip/Tooltip.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantInfo/OccupantInfo.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/occupyClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/edit/Edit.tsx",["561"],"import React from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport editIcon from \"../../../assets/images/edit.svg\";\nimport styles from \"./edit.module.css\";\n\ninterface PropTypes {\n  path?: string;\n  onClick?: (value?: any) => void;\n  dark?: boolean;\n}\n\nconst Edit: React.FC<PropTypes> = ({\n   path,\n   onClick,\n   dark = false\n}) => {\n  const history = useHistory();\n\n  return (\n    <img\n      src={editIcon}\n      className={[styles.editIcon, dark ? styles.dark : styles.light].join(' ')}\n      onClick={path ? (e) => {\n        e.stopPropagation();\n        history.push(path)\n      } : (e) => {\n        e.stopPropagation();\n        onClick && onClick();\n      }}\n    />\n  );\n}\n\nexport default Edit;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/add/Add.tsx",["562"],"import React from 'react';\nimport addIcon from \"../../../assets/images/add.svg\";\nimport styles from \"./add.module.css\";\n\ninterface PropTypes {\n  onClick: (value?: any) => void;\n}\n\nconst Add: React.FC<PropTypes> = ({onClick}) => {\n\n  return (\n    <img src={addIcon} className={styles.addIcon} onClick={onClick}/>\n  );\n}\n\nexport default Add;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/delete/Delete.tsx",["563"],"import React from 'react';\nimport deleteIcon from \"../../../assets/images/delete.svg\";\nimport styles from \"./delete.module.css\";\n\ninterface PropTypes {\n  onClick?: (value?: any) => void;\n}\n\nconst Delete: React.FC<PropTypes> = ({onClick}) => {\n\n  return (\n    <img src={deleteIcon} className={styles.deleteIcon} onClick={(e) => {\n      e.stopPropagation();\n      onClick && onClick();\n    }}/>\n  );\n}\n\nexport default Delete;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/HeaderSelect.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/selectStyles.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/filterClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerCheckBox/HeaderCheckbox.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/dataList/DataList.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useUsers.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useInstruments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/instruments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createInstrument.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteInstrument.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateInstrument.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDepartments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useFaculties.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/faculties.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDepartment.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDepartment.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDepartment.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteFaculty.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createFaculty.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateFaculty.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDegrees.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDegree.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDegree.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDegree.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/degrees.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useClassrooms.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/loader/Loader.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/AdminClassrooms.tsx",["564","565"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/AdminUsers.tsx",["566","567","568","569","570","571","572"],"import React, {useEffect, useState} from 'react';\nimport Header from '../../../components/header/Header';\nimport styles from './adminUsers.module.css';\nimport {ACCESS_RIGHTS, StudentAccountStatus, User, UserTypes, UserTypesUa} from \"../../../models/models\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {checkVerified, fullName, showNotification} from \"../../../helpers/helpers\";\nimport mainStyles from \"../../../styles/main.module.css\";\nimport Select from \"react-select\";\nimport {CategoryType, selectStyles} from \"../../../styles/selectStyles\";\nimport {useHistory} from \"react-router-dom\";\nimport UserProfile from \"../../../components/userProfile/UserProfile\";\nimport Add from \"../../../components/icons/add/Add\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport BrowseUserPopupBody from \"./browseUserPopupBody/BrowseUserPopupBody\";\nimport Button from \"../../../components/button/Button\";\nimport {VERIFY_USER} from \"../../../api/operations/mutations/verifyUser\";\nimport {useLocal} from \"../../../hooks/useLocal\";\nimport EditUserPopupBody from \"./editUserPopupBody/EditUserPopupBody\";\nimport {client} from \"../../../api/client\";\nimport {DELETE_USER} from \"../../../api/operations/mutations/deleteUser\";\n\nconst categories: CategoryType[] = [\n  {\n    value: 'ALL',\n    label: 'Всі',\n  },\n  {\n    value: UserTypes.TEACHER,\n    label: 'Викладачі'\n  },\n  {\n    value: UserTypes.STUDENT,\n    label: 'Студенти'\n  },\n  {\n    value: UserTypes.POST_GRADUATE,\n    label: 'Аистенти/Аспіранти'\n  },\n  {\n    value: UserTypes.CONCERTMASTER,\n    label: 'Концертмейстери'\n  },\n  {\n    value: UserTypes.ILLUSTRATOR,\n    label: 'Іллюстратори'\n  }\n];\n\nconst listHeader = ['ID', 'П.І.Б.', '', 'Статус']\n\nconst AdminUsers = () => {\n  const {data, loading, error} = useQuery(GET_USERS);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [searchValue, setSearchValue] = useState('');\n  const [filteredUsers, setFilteredUsers] = useState<User[]>([]);\n  const [listData, setListData] = useState<any[]>([]);\n  const [verifyUser] = useMutation(VERIFY_USER);\n  const {data: {accessRights}} = useLocal('accessRights');\n  const user = (user: User) => <>\n    <span className={styles.alignText}>{user.id}</span>\n    <span>{fullName(user)}</span>\n    <span>{user.studentInfo?.accountStatus === StudentAccountStatus.UNVERIFIED && (\n      <Button color='red' onClick={() => verify(user.id)}>Верифікувати</Button>\n    )}\n    </span>\n    <span className={styles.alignText}>{UserTypesUa[user.type as UserTypes]}</span>\n    {accessRights === ACCESS_RIGHTS.ADMIN && <Delete onClick={() => handleDelete(user.id)}/>}\n  </>;\n\n  useEffect(() => {\n    setFilteredUsers(data?.users)\n  }, [data]);\n\n  useEffect(() => {\n    setListData(filteredUsers?.map(item => user(item)));\n  }, [filteredUsers]);\n\n  const handleClick = (user: User) => {\n    dispatchPopupWindow({\n      header: <h1>{fullName(user)}</h1>,\n      body: <UserProfile userId={user.id as number}/>,\n    });\n  };\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n        <p>{e.extraInfo}</p>\n        <pre>{e.stack}</pre>\n      </>,\n      footer: ''\n    });\n  };\n\n  const handleDelete = async (userId: number) => {\n    const confirmDelete = window.confirm('Ви дійсно бажаєте видалити всі дані про користувача?')\n    if (confirmDelete) {\n      try {\n        const result = await client.mutate({\n          mutation: DELETE_USER,\n          variables: {\n            where: {\n              id: userId\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Користувача видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e);\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline'}}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleCreate = (user: User) => {\n    dispatchPopupWindow({\n      header: <h1>Створити новий аккаунт співробітника</h1>,\n      //@ts-ignore\n      body: <EditUserPopupBody user={user} dispatchNotification={dispatchNotification}\n                               dispatchPopupWindow={dispatchPopupWindow}/>,\n      footer: null\n    });\n  };\n\n  const handleSearch = (e: any) => {\n    setSearchValue(e.target.value);\n    if (e.target.value) {\n      const filter = data.users\n        .filter((user: User) => (fullName(user).toLowerCase() + user.id)\n          .includes(e.target.value.toLowerCase()));\n\n      setFilteredUsers(filter);\n    } else {\n      setFilteredUsers(data.users);\n    }\n  };\n\n  const handleSelectCategory = (e: any) => {\n    const filter = data.users.filter((user: User) => user.type === e.value);\n    if (e.value !== 'ALL') {\n      setFilteredUsers(filter);\n    } else {\n      setFilteredUsers(data.users);\n    }\n  }\n\n  const verify = async (userId: number) => {\n    try {\n      const result = await verifyUser({variables: {input: {userId}}});\n      if (result.data.verifyUser.userErrors.length) {\n        result.data.verifyUser.userErrors.forEach(({message}: any) => {\n          showNotification(dispatchNotification, ['Помилка!', message, 'alert']);\n        })\n      } else {\n        showNotification(dispatchNotification, ['Успішно!', 'Користувача верифіковано', 'ok']);\n      }\n\n    } catch (e) {\n      showNotification(dispatchNotification, ['Помилка!', e.message.slice(0, 100), 'alert']);\n    }\n  };\n\n  const handleItemClick = (id: number) => {\n    const user = data.users?.find((item: User) => item.id === id);\n\n    dispatchPopupWindow({\n      header: <h1>{fullName(user)}</h1>,\n      body: <BrowseUserPopupBody user={user}/>,\n      footer: !checkVerified(user) && <Button onClick={() => verify(user.id)}>Верифікувати</Button>\n    });\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління користувачами</h1>\n        <input\n          type=\"text\"\n          value={searchValue}\n          onChange={handleSearch}\n          placeholder=\"Пошук за П.І.Б або ID\"\n          className={mainStyles.headerInput}\n        />\n        <Select\n          options={categories}\n          defaultValue={categories[0]}\n          onChange={handleSelectCategory}\n          styles={selectStyles}/>\n        {accessRights === ACCESS_RIGHTS.ADMIN && <Add onClick={handleCreate}/>}\n      </Header>\n      <DataList header={listHeader} data={listData} handleItemClick={handleItemClick}\n                gridTemplateColumns='40px 1fr 100px 200px 40px 40px'/>\n    </div>\n  );\n}\n\nexport default AdminUsers;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/AdminFaculties.tsx",["573"],"import React, {useEffect, useState} from 'react';\nimport Header from \"../../../components/header/Header\";\nimport Add from \"../../../components/icons/add/Add\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {Faculty} from \"../../../models/models\";\nimport styles from \"../departments/adminDepartments.module.css\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport useFaculties from \"../../../hooks/useFaculties\";\nimport Button from \"../../../components/button/Button\";\nimport CreateFacultyPopupBody from \"./createFacultyPopupBody/CreateFacultyPopupBody\";\nimport {DELETE_FACULTY} from \"../../../api/operations/mutations/deleteFaculty\";\n\nconst listHeader = ['ID', 'Назва'];\n\nconst AdminFaculties = () => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [updateList, setUpdateList] = useState(false);\n  const faculties = useFaculties(updateList);\n  const [deleteFaculty] = useMutation(DELETE_FACULTY);\n  const dispatchNotification = useNotification();\n  const [listData, setListData] = useState<any>([]);\n  const dataItem = (item: Faculty) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span>{item.name}</span>\n    <Edit dark onClick={() => handleAdd(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = faculties.map(item => dataItem(item));\n\n    setListData(data);\n  }, [faculties]);\n\n  const handleAdd = (item: Faculty | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування факультету' : 'Створити факультет'}</h1>,\n      body: <CreateFacultyPopupBody setUpdateList={setUpdateList}\n                                       dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createFaculty'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити факультет?');\n\n    if (confirm) {\n      try {\n        await deleteFaculty({variables: {where: {id}}});\n        setUpdateList(prevState => !prevState);\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Факультет видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління факультетами</h1>\n        <Add onClick={() => handleAdd()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'40px 1fr 40px 40px'}/>\n    </div>\n  );\n};\n\nexport default AdminFaculties;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/AdminDegrees.tsx",["574"],"import React, {useEffect, useState} from 'react';\nimport Header from \"../../../components/header/Header\";\nimport Add from \"../../../components/icons/add/Add\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {Degree} from \"../../../models/models\";\nimport styles from \"../departments/adminDepartments.module.css\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport Button from \"../../../components/button/Button\";\nimport CreateDegreePopupBody from \"./createDegreePopupBody/CreateDegreePopupBody\";\nimport useDegrees from \"../../../hooks/useDegrees\";\nimport {DELETE_DEGREE} from \"../../../api/operations/mutations/deleteDegree\";\n\nconst listHeader = ['ID', 'Назва'];\n\nconst AdminDegrees = () => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [updateList, setUpdateList] = useState(false);\n  const degrees = useDegrees(updateList);\n  const [deleteFaculty] = useMutation(DELETE_DEGREE);\n  const dispatchNotification = useNotification();\n  const [listData, setListData] = useState<any>([]);\n  const dataItem = (item: Degree) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span>{item.name}</span>\n    <Edit dark onClick={() => handleAdd(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = degrees.map(item => dataItem(item));\n\n    setListData(data);\n  }, [degrees]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n        <p>{e.extraInfo}</p>\n        <pre>{e.stack}</pre>\n      </>,\n      footer: ''\n    });\n  };\n\n  const handleAdd = (item: Degree | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування учбового ступеню' : 'Створити учбовий ступінь'}</h1>,\n      body: <CreateDegreePopupBody setUpdateList={setUpdateList} handleErrorDetails={handleErrorDetails}\n                                       dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createDegree'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити учбовий ступінь?');\n\n    if (confirm) {\n      try {\n        await deleteFaculty({variables: {where: {id}}});\n        setUpdateList(prevState => !prevState);\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Учбовий ступінь видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління учбовими ступенями</h1>\n        <Add onClick={() => handleAdd()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'40px 1fr 40px 40px'}/>\n    </div>\n  );\n};\n\nexport default AdminDegrees;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/AdminDepartments.tsx",["575"],"import React, {useEffect, useState} from 'react';\nimport Header from \"../../../components/header/Header\";\nimport Add from \"../../../components/icons/add/Add\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport CreateDepartmentPopupBody from \"./createDepartmentPopupBody/CreateDepartmentPopupBody\";\nimport Button from \"../../../components/button/Button\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport useDepartments from \"../../../hooks/useDepartments\";\nimport {Department} from \"../../../models/models\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport styles from './adminDepartments.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {DELETE_DEPARTMENT} from \"../../../api/operations/mutations/deleteDepartment\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\n\nconst listHeader = ['ID', 'Назва'];\n\nconst AdminDepartments = () => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [updateList, setUpdateList] = useState(false);\n  const departments = useDepartments(updateList);\n  const [deleteDepartment] = useMutation(DELETE_DEPARTMENT);\n  const dispatchNotification = useNotification();\n  const [listData, setListData] = useState<any>([]);\n  const dataItem = (item: Department) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span>{item.name}</span>\n    <Edit dark onClick={() => handleAdd(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = departments.map(item => dataItem(item));\n    setListData(data);\n  }, [departments]);\n\n  const handleAdd = (item: Department | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування кафедри' : 'Створити кафедру'}</h1>,\n      body: <CreateDepartmentPopupBody setUpdateList={setUpdateList}\n              dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createDepartment'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити кафедру?');\n\n    if (confirm) {\n      try {\n        await deleteDepartment({variables: {where: {id}}});\n        setUpdateList(prevState => !prevState);\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Кафедру видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління кафедрами</h1>\n        <Add onClick={() => handleAdd()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'40px 1fr 40px 40px'}/>\n    </div>\n  );\n}\n\nexport default AdminDepartments;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/admin/Admin.tsx",["576","577","578"],"import React, {useEffect, useState} from \"react\";\nimport styles from \"./admin.module.css\";\nimport Header from \"../../../components/header/Header\";\nimport {NavLink, useHistory} from \"react-router-dom\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {ACCESS_RIGHTS, StudentAccountStatus, User} from \"../../../models/models\";\nimport CountUp from \"react-countup\";\nimport {useLocal} from \"../../../hooks/useLocal\";\nimport Button from \"../../../components/button/Button\";\nimport {isLoggedVar} from \"../../../api/client\";\n\nconst Admin = () => {\n    const {data, loading, error} = useQuery(GET_USERS);\n    const [unverifiedCounter, setUnverifiedCounter] = useState(0);\n    const {data: {accessRights}} = useLocal('accessRights');\n    const history = useHistory();\n\n    useEffect(() => {\n      setUnverifiedCounter(0);\n      if (data) {\n        data.users.forEach(({studentInfo}: User) => {\n          studentInfo?.accountStatus === StudentAccountStatus.UNVERIFIED\n          && setUnverifiedCounter(prevState => prevState + 1);\n        });\n      }\n    }, [data]);\n\n    const handleLogout = () => {\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      isLoggedVar(false);\n    };\n\n    return (\n      <div>\n        <Header><h1>Налаштування</h1></Header>\n        <ul className={styles.list}>\n          {accessRights === ACCESS_RIGHTS.ADMIN && <li><NavLink to='/adminClassrooms'>Аудиторії</NavLink>\n          </li>}\n          <li><NavLink to='/adminUsers'>Користувачі\n            {unverifiedCounter !== 0 && <span className={styles.unverified} title=\"Неверифіковані\">\n            <CountUp end={unverifiedCounter} duration={1}/></span>}\n          </NavLink></li>\n          {accessRights === ACCESS_RIGHTS.ADMIN && <>\n              <li><NavLink to='/adminInstruments'>Інструменти</NavLink></li>\n              <li><NavLink to='/adminDepartments'>Кафедри</NavLink></li>\n              <li><NavLink to='/adminFaculties'>Факультети</NavLink></li>\n              <li><NavLink to='/adminDegrees'>Навчальні ступені</NavLink></li>\n            {/*<li><NavLink to='/adminSchedule'>Розклад</NavLink></li>*/}\n          </>}\n        </ul>\n        <div className={styles.settings}>\n          <Button onClick={handleLogout}>Вийти з профілю</Button>\n        </div>\n      </div>\n    );\n  }\n;\n\nexport default Admin;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/AdminInstruments.tsx",["579","580","581"],"import React, {useEffect, useState} from 'react';\nimport useInstruments from \"../../../hooks/useInstruments\";\nimport Header from \"../../../components/header/Header\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport styles from './adminInstruments.module.css';\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport Add from \"../../../components/icons/add/Add\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport CreateInstrumentPopupBody from \"./createInstrumentPopupBody/CreateInstrumentPopupBody\";\nimport Button from \"../../../components/button/Button\";\nimport {useMutation} from \"@apollo/client\";\nimport {DELETE_INSTRUMENT} from \"../../../api/operations/mutations/deleteInstrument\";\nimport {ClassroomType, InstrumentType} from \"../../../models/models\";\nimport BrowseClassroomPopupBody from \"../classrooms/browseClassroomPopupBody/BrowseClassroomPopupBody\";\nimport BrowseInstrumentPopupBody from \"./browseInstrumentPopupBody/BrowseInstrumentPopupBody\";\n\nconst dataHeader = ['ID', 'Назва', 'Рейтинг', 'Ауд.', 'Інв. номер'];\n\nconst AdminInstruments = () => {\n  const [updateList, setUpdateList] = useState(false);\n  const instruments = useInstruments(updateList);\n  const [listData, setListData] = useState<Array<any>>([]);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [deleteInstrument] = useMutation(DELETE_INSTRUMENT);\n  const instrument = (item: InstrumentType) => <>\n    <span className={styles.alignText}>{item.id}</span>\n    <span>{item.name}</span>\n    <span className={styles.alignText}>{item.rate.toFixed(1)}</span>\n    <span className={styles.alignText}>{item.classroom?.name}</span>\n    <span className={styles.alignText}>{item.persNumber}</span>\n    <Edit dark onClick={() => handleAdd(item, true)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    setListData(instruments?.map((item) => instrument(item)));\n  }, [instruments]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n      </>,\n      footer: ''\n    })\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити інструмент?');\n\n    if (confirm) {\n      try {\n        await deleteInstrument({variables: {where: {id}}});\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Інструмент видалено.`,\n          type: \"ok\",\n        });\n        setUpdateList(prevState => !prevState);\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleUpdate = () => {\n    setUpdateList(prevState => !prevState);\n  };\n\n  const handleAdd = (item: InstrumentType | null = null, isEditMode = false) => {\n    dispatchPopupWindow({\n      header: <h1>{isEditMode ? 'Редагувати інструмент' : 'Створити інструмент'}</h1>,\n      body: <CreateInstrumentPopupBody dispatchNotification={dispatchNotification} onUpdate={handleUpdate}\n          addInstrument={addInstrument} instrument={item} isEditMode={isEditMode}\n          handleErrorDetails={handleErrorDetails}\n      />,\n      footer: <Button type='submit' form='createInstrument'>\n        {isEditMode ? 'Зберегти зміни' : 'Створити'}\n      </Button>,\n    });\n  };\n\n  const handleItemClick = (id: number) => {\n    const instrument = instruments?.find(item => item.id === id);\n    dispatchPopupWindow({\n      header: <h1>{instrument?.name}</h1>,\n      body: <BrowseInstrumentPopupBody instrument={instrument as InstrumentType}/>,\n      footer: ''\n    });\n  };\n\n  const addInstrument = (item: InstrumentType) => {\n    setListData(prevState => [...prevState, instrument(item)]);\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління інструментами</h1>\n        <Add onClick={handleAdd}/>\n      </Header>\n      <DataList header={dataHeader} data={listData}\n                gridTemplateColumns={'40px 250px 100px 100px 1fr 30px 30px'}\n                handleItemClick={handleItemClick}\n      />\n    </div>\n  );\n}\n\nexport default AdminInstruments;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/createClassroomPopupBody/CreateClassroomPopupBody.tsx",["582","583","584"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/browseClassroomPopupBody/BrowseClassroomPopupBody.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/createFacultyPopupBody/CreateFacultyPopupBody.tsx",["585"],"import React from 'react';\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {useForm} from \"react-hook-form\";\nimport {FormData} from \"../../instruments/models\";\nimport {Faculty} from \"../../../../models/models\";\nimport {CREATE_FACULTY} from \"../../../../api/operations/mutations/createFaculty\";\nimport {UPDATE_FACULTY} from \"../../../../api/operations/mutations/updateFaculty\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Faculty | null\n}\n\nconst CreateFacultyPopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n                                                          item}) => {\n  const [createFaculty] = useMutation(CREATE_FACULTY);\n  const [updateFaculty] = useMutation(UPDATE_FACULTY);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateFaculty({\n          variables: {\n            data: {\n              name: {set: e.name},\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createFaculty({\n          variables: {\n            data: {\n              name: e.name,\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Факультет створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <form id='createFaculty' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n    </form>\n  );\n}\n\nexport default CreateFacultyPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/createDegreePopupBody/CreateDegreePopupBody.tsx",["586"],"import React from 'react';\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {useForm} from \"react-hook-form\";\nimport {Degree} from \"../../../../models/models\";\nimport {CREATE_DEGREE} from \"../../../../api/operations/mutations/createDegree\";\nimport {UPDATE_DEGREE} from \"../../../../api/operations/mutations/updateDegree\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Degree | null;\n  handleErrorDetails?: (error: any) => void;\n}\n\nconst CreateDegreePopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n    handleErrorDetails, item}) => {\n  const [createDegree] = useMutation(CREATE_DEGREE);\n  const [updateDegree] = useMutation(UPDATE_DEGREE);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<any>();\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateDegree({\n          variables: {\n            data: {\n              name: {set: e.name},\n              startMonth: {set: Number(e.startMonth)},\n              startDay: {set: Number(e.startDay)},\n              durationMonths: {set: Number(e.durationMonths)},\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createDegree({\n          variables: {\n            data: {\n              name: e.name,\n              startMonth: Number(e.startMonth),\n              startDay: Number(e.startDay),\n              durationMonths: Number(e.durationMonths),\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Учбовий ступінь створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <form id='createDegree' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Місяць початку\n        <input className={mainStyles.input} type=\"number\" min={1} max={12}\n               defaultValue={item ? item?.startMonth : 9}\n               {...register(\"startMonth\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        День початку\n        <input className={mainStyles.input} type=\"number\" min={1} max={31}\n               defaultValue={item ? item?.startDay : 1}\n               {...register(\"startDay\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Триваліть (міс.)\n        <input className={mainStyles.input} type=\"number\" min={1}\n               defaultValue={item ? item?.durationMonths : 12}\n               {...register(\"durationMonths\", {required: true})}/>\n      </label>\n    </form>\n  );\n}\n\nexport default CreateDegreePopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/browseUserPopupBody/BrowseUserPopupBody.tsx",["587"],"import React from 'react';\nimport styles from \"./browseUserPopupBody.module.css\";\nimport {\n  EmploymentTypes,\n  EmploymentTypesUa,\n  StudentAccountStatus,\n  User,\n  UserTypes,\n  UserTypesUa\n} from \"../../../../models/models\";\nimport {fullName} from \"../../../../helpers/helpers\";\nimport Title from \"../../../../components/title/Title\";\nimport moment from \"moment\";\n\ninterface PropTypes {\n  user: User;\n};\n\nconst BrowseUserPopupBody: React.FC<PropTypes> = ({user}) => {\n  return (\n    <div>\n      {user.studentInfo?.accountStatus === StudentAccountStatus.UNVERIFIED && <div className={styles.verification}>\n          <h2>Користувача не верифіковано!</h2>\n          <p>Перед верифікацією користувача звірте правильність даних з офіційном документом.</p>\n      </div>}\n      <div className={styles.list}>\n        <div><span>ID: </span><span>{user.id}</span></div>\n        <div><span>П.І.Б.: </span><span>{fullName(user)}</span></div>\n        <div><span>Статус: </span><span>{UserTypesUa[user.type as UserTypes]}</span></div>\n        {user.expireDate && (\n          <div>\n            <span>\n              Термін дії аккаунту:\n            </span>\n            <span>\n              {moment(user.expireDate).format('DD.MM.YYYY')}\n            </span>\n          </div>\n        )}\n        {user.studentInfo && <div><span>Ступінь: </span><span>{user.studentInfo.degree.name}</span></div>}\n        {user.employeeInfo && <div><span>Зайнятість: </span>\n            <span>{EmploymentTypesUa[user.employeeInfo.employmentType as EmploymentTypes]}</span></div>}\n        <div><span>Кафедра: </span><span>{user.department ? user.department.name : 'Немає'}</span></div>\n        <div><span>E-mail: </span><span>{user.email}</span></div>\n        <div><span>Тел.: </span><span>{user.phoneNumber}</span></div>\n        {user?.extraPhoneNumbers && <div><span>Інші тел.: </span>\n            <ul>{JSON.parse(user.extraPhoneNumbers).map((item: string) => <li>{item}</li>)}</ul>\n        </div>}\n      </div>\n    </div>\n  );\n}\n\nexport default BrowseUserPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/createDepartmentPopupBody/CreateDepartmentPopupBody.tsx",["588","589"],"import React, {useEffect, useState} from 'react';\nimport Select from \"react-select\";\nimport useFaculties from \"../../../../hooks/useFaculties\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {CREATE_DEPARTMENT} from \"../../../../api/operations/mutations/createDepartment\";\nimport {useForm} from \"react-hook-form\";\nimport {FormData} from \"../../instruments/models\";\nimport {UPDATE_DEPARTMENT} from \"../../../../api/operations/mutations/updateDepartment\";\nimport {Department, Faculty} from \"../../../../models/models\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Department | null\n}\n\nconst CreateDepartmentPopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n        item}) => {\n  const faculties = useFaculties();\n  const [createDepartment] = useMutation(CREATE_DEPARTMENT);\n  const [updateDepartment] = useMutation(UPDATE_DEPARTMENT);\n  const [selectValue, setSelectValue] = useState({value: -1, label: ''});\n  const [options, setOptions] = useState<any>(selectValue);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n\n  useEffect(() => {\n    const data = faculties.map(item => ({value: item.id, label: item.name}));\n    if (item) {\n      const faculty: Faculty | undefined = faculties.find(f => f.id === item?.faculty.id);\n\n      setSelectValue({value: faculty?.id as number, label: faculty?.name as string});\n    } else {\n      setSelectValue(data[0]);\n    }\n    setOptions(data);\n  }, [faculties]);\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateDepartment({\n          variables: {\n            data: {\n              name: {set: e.name},\n              faculty: item ? {connect: {id: selectValue.value}} : undefined\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createDepartment({\n          variables: {\n            data: {\n              name: e.name,\n              faculty: {\n                connect: {id: selectValue.value}\n              }\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Кафедру створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleSelect = (e: any) => {\n    setSelectValue(e);\n  };\n\n  return (\n    <form id='createDepartment' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n      <label>\n        Факультет\n        {/*@ts-ignore*/}\n        <Select options={options} styles={selectLightStyles} menuPortalTarget={document.body}\n                placeholder='Виберіть факультет' defaultValue={selectValue} value={selectValue}\n                onChange={handleSelect}\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default CreateDepartmentPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/createInstrumentPopupBody/CreateInstrumentPopupBody.tsx",["590","591","592","593"],"import React, {useEffect, useState} from 'react';\nimport {useMutation} from \"@apollo/client\";\nimport {CREATE_INSTRUMENT} from \"../../../../api/operations/mutations/createInstrument\";\nimport {UPDATE_INSTRUMENT} from \"../../../../api/operations/mutations/updateInstrument\";\nimport {useForm} from \"react-hook-form\";\nimport styles from './createInstrumentPopupBody.module.css';\nimport mainStyles from '../../../../styles/main.module.css';\nimport useClassrooms from \"../../../../hooks/useClassrooms\";\nimport {FormData} from '../models';\nimport {SelectData} from '../models';\nimport Select from \"react-select\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport {ClassroomType, InstrumentType} from \"../../../../models/models\";\n\nconst instrumentTypes = [\n  {value: 'UpRightPiano', label: 'Фортепіано'},\n  {value: 'GrandPiano', label: 'Рояль'}\n];\n\ninterface PropTypes {\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  handleErrorDetails?: (error: any) => void;\n  onUpdate: () => void;\n  addInstrument: (item: InstrumentType) => void;\n  instrument: InstrumentType | null;\n  isEditMode: boolean;\n}\n\nconst CreateInstrumentPopupBody: React.FC<PropTypes> = ({\n                                                          dispatchNotification, isEditMode,\n                                                          dispatch, addInstrument, instrument, onUpdate,\n                                                          handleErrorDetails\n                                                        }) => {\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n  const [classrooms, subscribeToMore]: [ClassroomType[], any] = useClassrooms();\n  const [classroomsData, setClassroomsData] = useState<SelectData[]>([{\n    value: instrument?.classroom ? String(instrument?.classroom?.id) : '',\n    label: instrument?.classroom ? String(instrument?.classroom?.name) : ''\n  }]);\n  const [createInstrument] = useMutation(CREATE_INSTRUMENT);\n  const [updateInstrument] = useMutation(UPDATE_INSTRUMENT);\n  const [classroomValue, setClassroomValue] = useState(classroomsData[0]);\n  const [selectedInstrumentType, setSelectedInstrumentType] = useState(instrumentTypes[0]);\n\n  useEffect(() => {\n    const data = classrooms.map(item => ({value: item.id, label: item.name}));\n    const emptyItem = ({value: '', label: 'Немає'});\n    setClassroomsData([emptyItem, ...data as unknown as SelectData[]]);\n  }, [classrooms]);\n\n  useEffect(() => {\n    if (isEditMode) {\n      const item = classroomsData.find(item => Number(item.value) === instrument?.classroom?.id);\n      if (item) setClassroomValue(item as SelectData);\n    } else {\n      setClassroomValue(classroomsData[0]);\n    }\n  }, [classroomsData, instrument]);\n\n  const handleSelect = (e: any) => {\n    setClassroomValue(e);\n  };\n\n  const onSubmit = async (data: FormData) => {\n    const {name, type, persNumber, rate} = data;\n    const classroomId = classroomValue?.value;\n    const classroomName = classroomValue ? classroomValue.label : instrument?.classroom.name;\n\n    try {\n      if (isEditMode) {\n        await updateInstrument({\n          variables: {\n            data: {\n              name: {set: name},\n              type: {set: selectedInstrumentType.value},\n              persNumber: {set: persNumber},\n              rate: {set: Number(rate)},\n              classroom: classroomId ? {connect: {id: classroomId}} : undefined\n            },\n            where: {\n              id: Number(instrument?.id)\n            }\n          }\n        });\n        onUpdate();\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані змінені.`,\n          type: \"ok\",\n        });\n      } else {\n        const result = await createInstrument({\n          variables: {\n            data: {\n              name, type: selectedInstrumentType.value, persNumber, rate: Number(rate),\n              classroom: classroomId ? {connect: {id: classroomId}} : undefined\n            }\n          }\n        });\n        onUpdate();\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Інструмент ${name}  створений.`,\n          type: \"ok\",\n        });\n        addInstrument({\n          ...result.data.createOneInstrument,\n          classroom: {name: classroomId ? classroomName : ''}\n        });\n      }\n\n      dispatch && dispatch({\n        type: \"POP_POPUP_WINDOW\",\n      });\n    } catch (e) {\n      console.log(e)\n      dispatchNotification({\n        header: \"Помилка!\",\n        message: <><span>Щось пішло не так.</span><br/>\n          <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline'}}\n                onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n        type: \"alert\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)} className={styles.container} id='createInstrument'>\n        {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>\n          Назва\n          <input className={mainStyles.input} type='text' placeholder='Наприклад: \"Україна\"'\n                 defaultValue={isEditMode ? instrument?.name : undefined}\n                 {...register(\"name\", {required: true})}/>\n        </label>\n        {errors.type && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>Тип\n          <Select\n            value={selectedInstrumentType}\n            onChange={(e) => setSelectedInstrumentType(e)}\n            options={instrumentTypes}\n            //@ts-ignore\n            styles={selectLightStyles}\n            menuPortalTarget={document.body}\n            placeholder='Виберіть тип інструменту'\n          />\n        </label>\n        {errors.persNumber && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>\n          Інв. номер\n          <input className={mainStyles.input}\n                 type='text' placeholder='Наприклад: \"3242234\"'\n                 defaultValue={isEditMode ? instrument?.persNumber : undefined}\n                 {...register(\"persNumber\", {required: true})}/>\n        </label>\n        <label>\n          Рейтинг\n          <input className={mainStyles.input}\n                 defaultValue={isEditMode && instrument ? instrument.rate : 1} step='.1'\n                 type='number' min='1' max='10' placeholder='Рейтинг' {...register(\"rate\")}/>\n        </label>\n        <label>\n          Аудиторія\n          <Select options={classroomsData} styles={selectLightStyles} menuPortalTarget={document.body}\n                  placeholder='Аудиторія' value={classroomValue} onChange={handleSelect}/>\n        </label>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateInstrumentPopupBody;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/browseInstrumentPopupBody/BrowseInstrumentPopupBody.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/login/Login.tsx",["594"],"import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./login.module.css\";\r\nimport Logo from \"../../components/logo/Logo\";\r\nimport CustomInput from \"../../components/customInput/CustomInput\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {useNotification} from \"../../components/notification/NotificationProvider\";\r\nimport {useMutation} from \"@apollo/client\";\r\nimport {LOGIN} from \"../../api/operations/mutations/login\";\r\nimport {ErrorCodes, ErrorCodesUa, UserTypes} from \"../../models/models\";\r\nimport {isLoggedVar} from \"../../api/client\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {setAccessRights} from \"../../helpers/helpers\";\r\n\r\nconst Login = () => {\r\n  const dispatchNotification = useNotification();\r\n  const [login] = useMutation(LOGIN);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [loginValue, setLoginValue] = useState('');\r\n  const [passwordValue, setPasswordValue] = useState('');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (loginValue.length && passwordValue.length) {\r\n      setDisabled(false);\r\n    } else {\r\n      setDisabled(true);\r\n    }\r\n  }, [loginValue, passwordValue]);\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    let result: any;\r\n\r\n    if (e.target.login.value && e.target.password.value) {\r\n      try {\r\n        result = await login({\r\n          variables: {\r\n            input: {\r\n              email: e.target.login.value,\r\n              password: e.target.password.value\r\n            }\r\n          }\r\n        });\r\n        if (result?.data.login.userErrors?.length) {\r\n          localStorage.removeItem('token')\r\n          dispatchNotification({\r\n            header: 'Помилка!',\r\n            message: ErrorCodesUa[result?.data.login.userErrors[0].code as ErrorCodes],\r\n            type: 'alert'\r\n          });\r\n        } else {\r\n          const user = result?.data.login.user;\r\n          const token = result?.data.login.token;\r\n\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          localStorage.setItem('token', token);\r\n          dispatchNotification({\r\n            header: 'Вітаємо!',\r\n            message: 'Авторизація успішна!',\r\n            type: 'ok'\r\n          });\r\n          isLoggedVar(true);\r\n          setAccessRights(user);\r\n          if (user.type === UserTypes.ADMIN || user.type === UserTypes.DISPATCHER) {\r\n            history.push('/classrooms');\r\n          }\r\n          else {\r\n            history.push('/dashboard')\r\n          }\r\n        }\r\n      } catch (e) {\r\n        dispatchNotification({\r\n          header: 'Помилка!',\r\n          message: e.message,\r\n          type: 'alert'\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.name === 'login') {\r\n      setLoginValue(e.target.value);\r\n    } else {\r\n      setPasswordValue(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.loginContainer}>\r\n        <Logo\r\n          title=\"Auditorium\"\r\n          description=\"Система управління видачею аудиторій\"\r\n        />\r\n        <div>\r\n          <p className={styles.loginTip}>\r\n            Увійдіть в систему або зареєструйтесь\r\n          </p>\r\n          <form className={styles.loginForm} onSubmit={handleSubmit} id=\"loginForm\">\r\n            <CustomInput\r\n              label=\"E-mail або логін:\"\r\n              name=\"login\"\r\n              id=\"login\"\r\n              placeholder=\"Наприклад: aud1@knmau.ua\"\r\n              value={loginValue}\r\n              onChange={handleChange}\r\n            />\r\n            <CustomInput\r\n              label=\"Пароль:\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={passwordValue}\r\n              onChange={handleChange}\r\n            />\r\n            <Button type={\"submit\"} disabled={disabled} form='loginForm' color=\"blue\"\r\n                    style={{marginTop: 32, height: 42}}\r\n            >\r\n              Увійти\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <footer className={styles.loginFooter}>\r\n          <a href=\"#\">\r\n            Національна Музична Академія України ім. П. і. Чайковського\r\n          </a>\r\n          <p>\r\n            Auditorium &copy; 2021 | v 1.0.4 Ivan Piatovolenko & Vladislav\r\n            Nazarenko\r\n          </p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/customInput/CustomInput.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/login.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useMe.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/mail.js",[],["595","596"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/conjugate.ts",["597"],"import {mailNames} from \"../assets/mail\";\nimport {femaleNames} from \"../assets/femail\";\n\nexport const conjugate = (name: string) => {\n    const lowerName = name.toLowerCase();\n    const mail = mailNames;\n    const female = femaleNames;\n    const vowels = ['а', 'о', 'у', 'и', 'і', 'є', 'е', 'ї', 'я', 'ю'];\n    const hissings = ['щ', 'ж', 'ч'];\n    const GGKH = ['г', 'ґ', 'к', 'х'];\n\n    const isLastYa = name.charAt(name.length-1) === 'я';\n    const isLastA = name.charAt(name.length-1) === 'а';\n    const isLastYe = name.charAt(name.length-1) === 'й';\n    const isLastSoftSign = name.charAt(name.length-1) === 'ь';\n    const isVowelBeforeLast = vowels.includes(lowerName.charAt(lowerName.length-2));\n    const isLastO = name.charAt(name.length-1) === 'о';\n    const isLastGGKH = GGKH.includes(lowerName.charAt(lowerName.length-1));\n    const isApostropheBeforeLast = lowerName.charAt(lowerName.length-2) === \"'\"\n      || lowerName.charAt(lowerName.length-2) === \"`\";\n    let sex = undefined;\n\n    if (mail.find(name => name.toLowerCase() === lowerName)) {\n        sex = 'MAIL';\n    }\n    if (female.find(name => name.toLowerCase() === lowerName)) {\n        sex = 'FEMALE';\n    }\n\n    if (sex === 'MAIL' || sex === 'FEMALE') {\n        if (lowerName === 'олег') return 'Олеже';\n\n        if (isLastYa && (isVowelBeforeLast || isApostropheBeforeLast)) {\n                return name.slice(0, lowerName.length - 2) + 'іє';\n        }\n        if (isLastYa && (!isVowelBeforeLast || !isApostropheBeforeLast)) {\n            return name.slice(0, lowerName.length - 1) + 'е';\n        }\n\n        if (sex === 'MAIL' && isLastGGKH) {\n            return name.slice(0, lowerName.length - 1) + 'у';\n        }\n        if (sex === 'MAIL' && (isLastYe || isLastSoftSign) && (!isVowelBeforeLast && !isApostropheBeforeLast)) {\n            return name.slice(0, lowerName.length - 1) + 'ю';\n        }\n\n        if (sex === 'MAIL' && isLastYe && (isVowelBeforeLast || isApostropheBeforeLast)) {\n            return name.slice(0, lowerName.length - 1) + 'є';\n        }\n\n        if (sex === 'MAIL' && !isLastYe && !isLastGGKH && !isLastYa && !isLastA) {\n            return name + 'e';\n        }\n        if (sex === 'FEMALE' && isLastA) {\n            return name.slice(0, name.length-1) + 'o';\n        }\n        if (sex === 'MAIL' && isLastO) {\n            return name.slice(0, name.length - 1) + 'e';\n        }\n    } else {\n        return name;\n    }\n}",["598","599"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/femail.js",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signUp.ts",[],["600","601"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/verifyUser.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useLocal.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/helpers/helpers.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/dashboard/Dashboard.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/queueRecords.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/generalQueue.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/localize/localize.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/pendingClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/freeClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/queue/Queue.tsx",["602"],"import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./queue.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  ClassroomType,\r\n  DisabledState,\r\n  EnqueuedBy,\r\n  QueueType,\r\n  StudentAccountStatus,\r\n  User,\r\n  UserTypes\r\n} from \"../../models/models\";\r\nimport {fullName} from \"../../helpers/helpers\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {client} from \"../../api/client\";\r\nimport {GET_USERS_FOR_QUEUE} from \"../../api/operations/queries/usersQueue\";\r\nimport {REMOVE_USER_FROM_QUEUE} from \"../../api/operations/mutations/removeUserFromQueue\";\r\nimport {useNotification} from \"../../components/notification/NotificationProvider\";\r\nimport useClassrooms from \"../../hooks/useClassrooms\";\r\nimport {ADD_USER_TO_QUEUE} from \"../../api/operations/mutations/addUserToQueue\";\r\nimport moment from \"moment\";\r\n\r\nconst Queue = () => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [classrooms, subscribeToMore]: [ClassroomType[], any] = useClassrooms();\r\n  const [withInstrument, setWithInstrument] = useState(false);\r\n  const [chosenUser, setChosenUser] = useState({label: '', value: -1, queueLength: -1});\r\n  const dispatchNotification = useNotification();\r\n\r\n  useEffect(() => {\r\n    client.query({\r\n      query: GET_USERS_FOR_QUEUE\r\n    }).then(data => {\r\n      setUsers(data.data.users);\r\n    });\r\n  }, []);\r\n\r\n  const handleChose = (e: any) => {\r\n    const chosenUser = (users as unknown as Array<User>)?.find(user => user.id === e.value);\r\n\r\n    setChosenUser({\r\n      label: chosenUser?.id as number + \": \" + fullName(chosenUser),\r\n      value: chosenUser?.id as number,\r\n      queueLength: chosenUser?.queue.length as number\r\n    });\r\n  };\r\n\r\n  const removeFromLine = async () => {\r\n    setDisabled(true);\r\n    try {\r\n      await client.mutate({\r\n        mutation: REMOVE_USER_FROM_QUEUE,\r\n        variables: {\r\n          input: {\r\n            userId: chosenUser.value\r\n          }\r\n        }\r\n      });\r\n      dispatchNotification({\r\n        header: \"Успішно!\",\r\n        message: `Користувача видалено з черги.`,\r\n        type: \"ok\",\r\n      });\r\n      client.query({\r\n        query: GET_USERS_FOR_QUEUE,\r\n        fetchPolicy: 'network-only'\r\n      }).then(data => {\r\n        setUsers(data.data.users);\r\n        setChosenUser(prevState => ({...prevState, queueLength: 0}));\r\n        setDisabled(false);\r\n      });\r\n    } catch (e) {\r\n      dispatchNotification({\r\n        header: \"Помилка\",\r\n        message: `Користувача не видалено з черги.`,\r\n        type: \"alert\",\r\n      });\r\n      setDisabled(false);\r\n    }\r\n  };\r\n\r\n  const getInLine = async () => {\r\n    setDisabled(true);\r\n    const data = classrooms\r\n      .filter(classroom => !classroom.isHidden && classroom.disabled.state === DisabledState.NOT_DISABLED)\r\n      .filter(classroom => withInstrument ? classroom.instruments.length : true)\r\n      .map(({id}) => ({\r\n        classroomId: id,\r\n        type: QueueType.MINIMAL,\r\n      }));\r\n\r\n    try {\r\n      const result = await client.mutate({\r\n        mutation: ADD_USER_TO_QUEUE, variables: {\r\n          input: {\r\n            userId: chosenUser.value,\r\n            data,\r\n            enqueuedBy: EnqueuedBy.DISPATCHER\r\n          }\r\n        }\r\n      });\r\n      if (result.data.addUserToQueue.userErrors.length) {\r\n        result.data.addUserToQueue.userErrors.forEach(({message}: any) => {\r\n          dispatchNotification({\r\n            header: \"Помилка\",\r\n            message,\r\n            type: \"alert\",\r\n          });\r\n        })\r\n      } else {\r\n        dispatchNotification({\r\n          header: \"Успішно!\",\r\n          message: `Користувача записано в чергу.`,\r\n          type: \"ok\",\r\n        });\r\n      }\r\n      client.query({\r\n        query: GET_USERS_FOR_QUEUE,\r\n        fetchPolicy: 'network-only'\r\n      }).then(data => {\r\n        setUsers(data.data.users);\r\n        setChosenUser(prevState => ({...prevState, queueLength: 1}));\r\n        setDisabled(false);\r\n      });\r\n    } catch (e) {\r\n      dispatchNotification({\r\n        header: \"Помилка\",\r\n        message: `Користувача не записано в чергу.`,\r\n        type: \"alert\",\r\n      });\r\n      setDisabled(false);\r\n    }\r\n  };\r\n\r\n  const sanctions = chosenUser.value !== -1 && users\r\n    .find(({id}) => chosenUser.value === id).queueInfo.sanctionedUntil;\r\n\r\n  const renderSanction = () => {\r\n    if (sanctions) return (\r\n      <>\r\n        <p className={styles.sanctions}>\r\n          {`Неможливо поставити в чергу. Користувач знаходиться під санкціями до ${\r\n            moment(sanctions).format('DD-MM-YYYY HH:mm')}`}\r\n        </p>\r\n      </>\r\n    );\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <h1>Черга</h1>\r\n      </Header>\r\n      <div className={styles.wrapper}>\r\n        <form\r\n          id=\"userQueueForm\"\r\n          className={styles.userSearch}\r\n        >\r\n          <p>Виберіть студента, щоб додати або видалити з черги:</p>\r\n          <Select\r\n            placeholder=\"Користувачі\"\r\n            options={users.filter(user => {\r\n              return !user.occupiedClassrooms.length\r\n                && (user.type === UserTypes.POST_GRADUATE || user.type === UserTypes.STUDENT) &&\r\n                user.studentInfo.accountStatus === StudentAccountStatus.ACTIVE\r\n            }).map((user: User) => ({\r\n                label: user.id + \": \" + fullName(user),\r\n                value: user.id as number,\r\n                queueLength: user?.queue.length as number\r\n              })\r\n            )}\r\n            value={chosenUser}\r\n            styles={{menuPortal: base => ({...base, zIndex: 9999})}}\r\n            menuPortalTarget={document.body}\r\n            onChange={handleChose}\r\n            isDisabled={disabled}\r\n          />\r\n          {chosenUser.queueLength === 0 && (\r\n            <label htmlFor=\"instrumentCheckbox\" className={styles.checkboxInstrument}>\r\n              <input type='checkbox' name='instrument' id='instrumentCheckbox' checked={withInstrument}\r\n                     onChange={(e) => setWithInstrument(e.target.checked)}\r\n                     disabled={disabled}\r\n              />\r\n              З фортепіано\r\n            </label>)\r\n          }\r\n          {chosenUser.queueLength !== -1 && (\r\n            <Button onClick={chosenUser.queueLength > 0 ? removeFromLine : getInLine}\r\n                    disabled={disabled || (chosenUser.queueLength === 0 && !!sanctions)}\r\n            >\r\n              {chosenUser.queueLength > 0 ? 'Видалити з черги' : 'Поставити в чергу'}\r\n            </Button>\r\n          )}\r\n        </form>\r\n        {renderSanction()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Queue;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/usersQueue.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/addUserToQueue.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/removeUserFromQueue.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/DisableClassroom.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/disableClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/enableClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/disabledClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/ConfirmFooter.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/classrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/CaviarItem.tsx",["603","604"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/giveOutClassroomKey.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/editUserPopupBody/EditUserPopupBody.tsx",["605"],"import React, {useEffect, useState} from 'react';\nimport {\n  Department,\n  EmployeeAccountStatus,\n  EmploymentTypes,\n  EmploymentTypesUa,\n  User,\n  UserTypes,\n  UserTypesUa\n} from \"../../../../models/models\";\nimport styles from './../../classrooms/createClassroomPopupBody/createClassroomPopupBody.module.css';\nimport {client} from \"../../../../api/client\";\nimport {SIGNUP_EMPLOYEE} from \"../../../../api/operations/mutations/signupEmployee\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport Button from \"../../../../components/button/Button\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_DEPARTMENTS} from \"../../../../api/operations/queries/departments\";\nimport {GET_USERS} from \"../../../../api/operations/queries/users\";\n\ninterface PropTypes {\n  user: User;\n}\n\nconst userTypesData = [\n  {value: UserTypes.STAFF, label: UserTypesUa.STAFF},\n  {value: UserTypes.ILLUSTRATOR, label: UserTypesUa.ILLUSTRATOR},\n  {value: UserTypes.CONCERTMASTER, label: UserTypesUa.CONCERTMASTER},\n  {value: UserTypes.TEACHER, label: UserTypesUa.TEACHER},\n  {value: UserTypes.PIANO_TUNER, label: UserTypesUa.PIANO_TUNER},\n  {value: UserTypes.OTHER, label: UserTypesUa.OTHER},\n  {value: UserTypes.ADMIN, label: UserTypesUa.ADMIN},\n];\n\nconst employmentTypesData = [\n  {value: EmploymentTypes.FULL_TIME, label: EmploymentTypesUa.FULL_TIME},\n  {value: EmploymentTypes.PART_TIME, label: EmploymentTypesUa.PART_TIME},\n  {value: EmploymentTypes.HOURLY, label: EmploymentTypesUa.HOURLY},\n];\n\nconst EditUserPopupBody: React.FC<PropTypes> = ({\n                                                  user, dispatch, dispatchNotification,\n                                                  dispatchPopupWindow\n                                                }: any) => {\n  const {data, loading, error} = useQuery(GET_DEPARTMENTS);\n  const [departmentsData, setDepartmentsData] = useState([{value: -1, label: ''}]);\n  const [selectedDepartment, setSelectedDepartment] = useState(departmentsData[0]);\n  const [selectedUserType, setSelectedUserType] = useState(userTypesData[0]);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [withDateLimit, setWithDateLimit] = useState(true);\n  const [expireDate, setExpireDate] = useState('');\n  const [selectedEmploymentType, setSelectedEmploymentType] = useState(employmentTypesData[0]);\n\n  useEffect(() => {\n    if (!loading && !error) {\n      const mappedDepartments = data.departments.map((department: Department) => {\n        return ({value: department.id, label: department.name});\n      });\n      setDepartmentsData(mappedDepartments);\n      setSelectedDepartment(mappedDepartments[0]);\n    }\n  }, [data]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: (\n        <>\n          <p>{e.message}</p>\n          <p>{e.extraInfo}</p>\n          <pre>{e.stack}</pre>\n        </>\n      ),\n      footer: ''\n    });\n  };\n\n  const handleSignUpEmployee = async (e: any) => {\n    e.preventDefault();\n    try {\n      const result = await client.mutate({\n        mutation: SIGNUP_EMPLOYEE,\n        variables: {\n          input: {\n            firstName,\n            patronymic,\n            lastName,\n            type: selectedUserType.value,\n            department: (\n              selectedUserType.value === UserTypes.TEACHER\n              || selectedUserType.value === UserTypes.CONCERTMASTER\n              || selectedUserType.value === UserTypes.ILLUSTRATOR\n            ) ? {\n              connect: {\n                id: selectedDepartment.value\n              }\n            } : undefined,\n            employeeInfo: {\n              create: {\n                employmentType: selectedEmploymentType.value,\n                accountStatus: EmployeeAccountStatus.ACTIVE\n              }\n            },\n            expireDate: !withDateLimit ? moment(expireDate).toISOString() : undefined\n          }\n        }\n      });\n      if (result.data.signupEmployee.userErrors?.length) {\n        result.data.signupEmployee.userErrors.forEach(({message}: any) => {\n          dispatchNotification({\n            header: \"Помилка\",\n            message,\n            type: \"alert\",\n          });\n        })\n      } else {\n        await client.query({\n          query: GET_USERS,\n          fetchPolicy: 'network-only'\n        })\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Новий аккаунт співробітника створено.`,\n          type: \"ok\",\n        });\n        dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      dispatchNotification({\n        header: \"Помилка!\",\n        message: <><span>Щось пішло не так.</span><br/>\n          <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline'}}\n                onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n        type: \"alert\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div className={styles.wrapper}>\n        <form className={styles.container}>\n          <label>Прізвище\n            <input\n              placeholder=\"Прізвище\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n          </label>\n          <label>Ім'я\n            <input\n              placeholder=\"Ім'я\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n          </label>\n          <label>По-батькові\n            <input\n              placeholder=\"По-батькові\"\n              onChange={(e) => setPatronymic(e.target.value)}\n            />\n          </label>\n          <label>Тип аккаунту\n            <Select\n              value={selectedUserType}\n              onChange={e => setSelectedUserType(e)}\n              options={userTypesData}\n              //@ts-ignore\n              styles={selectLightStyles}\n              menuPortalTarget={document.body}\n              isSearchable\n              placeholder='Виберіть тип'\n            />\n          </label>\n          <label>Тип занятості\n            <Select\n              value={selectedEmploymentType}\n              onChange={e => setSelectedEmploymentType(e)}\n              options={employmentTypesData}\n              //@ts-ignore\n              styles={selectLightStyles}\n              menuPortalTarget={document.body}\n              isSearchable\n              placeholder='Виберіть тип зайнятість'\n            />\n          </label>\n          <label>Безстроковий термін дії\n            <input type=\"checkbox\" checked={withDateLimit}\n                   onChange={() => setWithDateLimit(prevState => !prevState)}\n            />\n          </label>\n          {!withDateLimit && (\n            <label>Термін дії\n              <input type=\"date\" value={expireDate}\n                     onChange={e => setExpireDate(e.target.value)}\n              />\n            </label>\n          )}\n          {(selectedUserType.value === UserTypes.TEACHER\n            || selectedUserType.value === UserTypes.CONCERTMASTER\n            || selectedUserType.value === UserTypes.ILLUSTRATOR\n          ) && (\n            <label>Кафедра\n              <Select\n                value={selectedDepartment}\n                onChange={e => setSelectedDepartment(e)}\n                options={departmentsData}\n                //@ts-ignore\n                styles={selectLightStyles}\n                menuPortalTarget={document.body}\n                isSearchable\n                placeholder='Виберіть кафедру'\n              />\n            </label>\n          )}\n          <Button onClick={handleSignUpEmployee} style={{marginTop: 16, height: 40}}\n                  disabled={!firstName || !lastName || !patronymic}>\n            Створити новий аккаунт\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default EditUserPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createUser.ts",[],["606","607"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signupEmployee.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteUser.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/errorHandler/ErrorHandler.tsx",[],{"ruleId":"608","severity":1,"message":"609","line":10,"column":9,"nodeType":"610","messageId":"611","endLine":10,"endColumn":22},{"ruleId":"612","replacedBy":"613"},{"ruleId":"614","replacedBy":"615"},{"ruleId":"608","severity":1,"message":"616","line":1,"column":56,"nodeType":"610","messageId":"611","endLine":1,"endColumn":64},{"ruleId":"617","severity":1,"message":"618","line":59,"column":6,"nodeType":"619","endLine":59,"endColumn":15,"suggestions":"620"},{"ruleId":"617","severity":1,"message":"621","line":63,"column":6,"nodeType":"619","endLine":63,"endColumn":8,"suggestions":"622"},{"ruleId":"608","severity":1,"message":"623","line":3,"column":9,"nodeType":"610","messageId":"611","endLine":3,"endColumn":17},{"ruleId":"608","severity":1,"message":"624","line":15,"column":9,"nodeType":"610","messageId":"611","endLine":15,"endColumn":14},{"ruleId":"608","severity":1,"message":"625","line":5,"column":24,"nodeType":"610","messageId":"611","endLine":5,"endColumn":44},{"ruleId":"608","severity":1,"message":"626","line":20,"column":8,"nodeType":"610","messageId":"611","endLine":20,"endColumn":15},{"ruleId":"608","severity":1,"message":"627","line":21,"column":9,"nodeType":"610","messageId":"611","endLine":21,"endColumn":15},{"ruleId":"608","severity":1,"message":"628","line":22,"column":9,"nodeType":"610","messageId":"611","endLine":22,"endColumn":23},{"ruleId":"617","severity":1,"message":"629","line":72,"column":6,"nodeType":"619","endLine":72,"endColumn":13,"suggestions":"630"},{"ruleId":"608","severity":1,"message":"631","line":4,"column":8,"nodeType":"610","messageId":"611","endLine":4,"endColumn":16},{"ruleId":"608","severity":1,"message":"632","line":5,"column":31,"nodeType":"610","messageId":"611","endLine":5,"endColumn":35},{"ruleId":"608","severity":1,"message":"633","line":16,"column":20,"nodeType":"610","messageId":"611","endLine":16,"endColumn":31},{"ruleId":"634","severity":1,"message":"635","line":115,"column":38,"nodeType":"636","messageId":"637","endLine":115,"endColumn":40},{"ruleId":"617","severity":1,"message":"638","line":89,"column":6,"nodeType":"619","endLine":89,"endColumn":8,"suggestions":"639"},{"ruleId":"608","severity":1,"message":"640","line":8,"column":8,"nodeType":"610","messageId":"611","endLine":8,"endColumn":14},{"ruleId":"608","severity":1,"message":"641","line":30,"column":70,"nodeType":"610","messageId":"611","endLine":30,"endColumn":78},{"ruleId":"617","severity":1,"message":"642","line":70,"column":6,"nodeType":"619","endLine":70,"endColumn":32,"suggestions":"643"},{"ruleId":"617","severity":1,"message":"644","line":47,"column":6,"nodeType":"619","endLine":47,"endColumn":8,"suggestions":"645"},{"ruleId":"646","severity":1,"message":"647","line":59,"column":91,"nodeType":"648","messageId":"649","endLine":59,"endColumn":93},{"ruleId":"646","severity":1,"message":"647","line":60,"column":89,"nodeType":"648","messageId":"649","endLine":60,"endColumn":91},{"ruleId":"650","severity":1,"message":"651","line":20,"column":5,"nodeType":"652","endLine":30,"endColumn":7},{"ruleId":"650","severity":1,"message":"651","line":12,"column":5,"nodeType":"652","endLine":12,"endColumn":70},{"ruleId":"650","severity":1,"message":"651","line":12,"column":5,"nodeType":"652","endLine":15,"endColumn":9},{"ruleId":"608","severity":1,"message":"653","line":5,"column":8,"nodeType":"610","messageId":"611","endLine":5,"endColumn":21},{"ruleId":"617","severity":1,"message":"654","line":47,"column":6,"nodeType":"619","endLine":47,"endColumn":18,"suggestions":"655"},{"ruleId":"608","severity":1,"message":"656","line":13,"column":9,"nodeType":"610","messageId":"611","endLine":13,"endColumn":19},{"ruleId":"608","severity":1,"message":"657","line":16,"column":8,"nodeType":"610","messageId":"611","endLine":16,"endColumn":12},{"ruleId":"608","severity":1,"message":"658","line":57,"column":16,"nodeType":"610","messageId":"611","endLine":57,"endColumn":23},{"ruleId":"608","severity":1,"message":"659","line":57,"column":25,"nodeType":"610","messageId":"611","endLine":57,"endColumn":30},{"ruleId":"617","severity":1,"message":"660","line":82,"column":6,"nodeType":"619","endLine":82,"endColumn":21,"suggestions":"661"},{"ruleId":"608","severity":1,"message":"662","line":84,"column":9,"nodeType":"610","messageId":"611","endLine":84,"endColumn":20},{"ruleId":"608","severity":1,"message":"663","line":107,"column":15,"nodeType":"610","messageId":"611","endLine":107,"endColumn":21},{"ruleId":"617","severity":1,"message":"654","line":37,"column":6,"nodeType":"619","endLine":37,"endColumn":17,"suggestions":"664"},{"ruleId":"617","severity":1,"message":"654","line":37,"column":6,"nodeType":"619","endLine":37,"endColumn":15,"suggestions":"665"},{"ruleId":"617","severity":1,"message":"654","line":36,"column":6,"nodeType":"619","endLine":36,"endColumn":19,"suggestions":"666"},{"ruleId":"608","severity":1,"message":"658","line":14,"column":18,"nodeType":"610","messageId":"611","endLine":14,"endColumn":25},{"ruleId":"608","severity":1,"message":"659","line":14,"column":27,"nodeType":"610","messageId":"611","endLine":14,"endColumn":32},{"ruleId":"608","severity":1,"message":"667","line":17,"column":11,"nodeType":"610","messageId":"611","endLine":17,"endColumn":18},{"ruleId":"608","severity":1,"message":"668","line":15,"column":9,"nodeType":"610","messageId":"611","endLine":15,"endColumn":22},{"ruleId":"608","severity":1,"message":"669","line":16,"column":8,"nodeType":"610","messageId":"611","endLine":16,"endColumn":32},{"ruleId":"617","severity":1,"message":"670","line":40,"column":6,"nodeType":"619","endLine":40,"endColumn":19,"suggestions":"671"},{"ruleId":"608","severity":1,"message":"672","line":44,"column":44,"nodeType":"610","messageId":"611","endLine":44,"endColumn":49},{"ruleId":"617","severity":1,"message":"673","line":51,"column":6,"nodeType":"619","endLine":51,"endColumn":23,"suggestions":"674"},{"ruleId":"617","severity":1,"message":"673","line":75,"column":6,"nodeType":"619","endLine":75,"endColumn":8,"suggestions":"675"},{"ruleId":"608","severity":1,"message":"672","line":21,"column":34,"nodeType":"610","messageId":"611","endLine":21,"endColumn":39},{"ruleId":"608","severity":1,"message":"672","line":21,"column":34,"nodeType":"610","messageId":"611","endLine":21,"endColumn":39},{"ruleId":"608","severity":1,"message":"676","line":12,"column":8,"nodeType":"610","messageId":"611","endLine":12,"endColumn":13},{"ruleId":"608","severity":1,"message":"672","line":27,"column":34,"nodeType":"610","messageId":"611","endLine":27,"endColumn":39},{"ruleId":"617","severity":1,"message":"673","line":39,"column":6,"nodeType":"619","endLine":39,"endColumn":17,"suggestions":"677"},{"ruleId":"608","severity":1,"message":"672","line":35,"column":34,"nodeType":"610","messageId":"611","endLine":35,"endColumn":39},{"ruleId":"608","severity":1,"message":"678","line":36,"column":22,"nodeType":"610","messageId":"611","endLine":36,"endColumn":37},{"ruleId":"617","severity":1,"message":"679","line":59,"column":6,"nodeType":"619","endLine":59,"endColumn":34,"suggestions":"680"},{"ruleId":"608","severity":1,"message":"681","line":66,"column":18,"nodeType":"610","messageId":"611","endLine":66,"endColumn":22},{"ruleId":"682","severity":1,"message":"683","line":126,"column":11,"nodeType":"652","endLine":126,"endColumn":23},{"ruleId":"612","replacedBy":"684"},{"ruleId":"614","replacedBy":"685"},{"ruleId":"608","severity":1,"message":"686","line":9,"column":11,"nodeType":"610","messageId":"611","endLine":9,"endColumn":19},{"ruleId":"612","replacedBy":"684"},{"ruleId":"614","replacedBy":"685"},{"ruleId":"612","replacedBy":"687"},{"ruleId":"614","replacedBy":"688"},{"ruleId":"608","severity":1,"message":"678","line":27,"column":22,"nodeType":"610","messageId":"611","endLine":27,"endColumn":37},{"ruleId":"617","severity":1,"message":"689","line":21,"column":6,"nodeType":"619","endLine":21,"endColumn":8,"suggestions":"690"},{"ruleId":"617","severity":1,"message":"691","line":29,"column":19,"nodeType":"692","endLine":29,"endColumn":65},{"ruleId":"617","severity":1,"message":"693","line":65,"column":6,"nodeType":"619","endLine":65,"endColumn":12,"suggestions":"694"},{"ruleId":"612","replacedBy":"695"},{"ruleId":"614","replacedBy":"696"},"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["697"],"no-negated-in-lhs",["698"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCloseNotification'. Either include it or remove the dependency array.","ArrayExpression",["699"],"React Hook useEffect has a missing dependency: 'handleStartTimer'. Either include it or remove the dependency array.",["700"],"'Redirect' is defined but never used.","'style' is assigned a value but never used.","'StudentAccountStatus' is defined but never used.","'CountUp' is defined but never used.","'client' is defined but never used.","'GET_USER_BY_ID' is defined but never used.","React Hook useEffect has a missing dependency: 'accessRights'. Either include it or remove the dependency array.",["701"],"'useUsers' is defined but never used.","'User' is defined but never used.","'setEditMode' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'subscribeToMore'. Either include it or remove the dependency array.",["702"],"'moment' is defined but never used.","'schedule' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'classroom.occupied.until', 'defineStatus', 'defineStatusStiles', 'defineStyle', and 'occupied.state'. Either include them or remove the dependency array.",["703"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["704"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useClassrooms' is defined but never used.","React Hook useEffect has a missing dependency: 'dataItem'. Either include it or remove the dependency array.",["705"],"'useHistory' is defined but never used.","'Edit' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["706"],"'handleClick' is assigned a value but never used.","'result' is assigned a value but never used.",["707"],["708"],["709"],"'history' is assigned a value but never used.","'ClassroomType' is defined but never used.","'BrowseClassroomPopupBody' is defined but never used.","React Hook useEffect has a missing dependency: 'instrument'. Either include it or remove the dependency array.",["710"],"'watch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["711"],["712"],"'Title' is defined but never used.",["713"],"'subscribeToMore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isEditMode'. Either include it or remove the dependency array.",["714"],"'type' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["697"],["698"],"'hissings' is assigned a value but never used.",["697"],["698"],"React Hook useEffect has a missing dependency: 'timeout'. Either include it or remove the dependency array.",["715"],"Assignments to the 'timeout' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has missing dependencies: 'error' and 'loading'. Either include them or remove the dependency array.",["716"],["697"],["698"],"no-global-assign","no-unsafe-negation",{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},{"desc":"735","fix":"736"},{"desc":"737","fix":"738"},{"desc":"739","fix":"740"},{"desc":"741","fix":"742"},{"desc":"743","fix":"744"},{"desc":"745","fix":"746"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},"Update the dependencies array to be: [handleCloseNotification, opacity]",{"range":"753","text":"754"},"Update the dependencies array to be: [handleStartTimer]",{"range":"755","text":"756"},"Update the dependencies array to be: [accessRights, users]",{"range":"757","text":"758"},"Update the dependencies array to be: [subscribeToMore]",{"range":"759","text":"760"},"Update the dependencies array to be: [classroom.occupied.state, classroom.occupied.until, defineStatus, defineStatusStiles, defineStyle, occupied.state]",{"range":"761","text":"762"},"Update the dependencies array to be: [id]",{"range":"763","text":"764"},"Update the dependencies array to be: [classrooms, dataItem]",{"range":"765","text":"766"},"Update the dependencies array to be: [filteredUsers, user]",{"range":"767","text":"768"},"Update the dependencies array to be: [dataItem, faculties]",{"range":"769","text":"770"},"Update the dependencies array to be: [dataItem, degrees]",{"range":"771","text":"772"},"Update the dependencies array to be: [dataItem, departments]",{"range":"773","text":"774"},"Update the dependencies array to be: [instrument, instruments]",{"range":"775","text":"776"},"Update the dependencies array to be: [departmentsData, item]",{"range":"777","text":"778"},"Update the dependencies array to be: [item]",{"range":"779","text":"780"},"Update the dependencies array to be: [faculties, item]",{"range":"781","text":"782"},"Update the dependencies array to be: [classroomsData, instrument, isEditMode]",{"range":"783","text":"784"},"Update the dependencies array to be: [timeout]",{"range":"785","text":"786"},"Update the dependencies array to be: [data, error, loading]",{"range":"787","text":"788"},[1274,1283],"[handleCloseNotification, opacity]",[1336,1338],"[handleStartTimer]",[2742,2749],"[accessRights, users]",[3217,3219],"[subscribeToMore]",[2317,2343],"[classroom.occupied.state, classroom.occupied.until, defineStatus, defineStatusStiles, defineStyle, occupied.state]",[1537,1539],"[id]",[2279,2291],"[classrooms, dataItem]",[3179,3194],"[filteredUsers, user]",[1662,1673],"[dataItem, faculties]",[1642,1651],"[dataItem, degrees]",[1687,1700],"[dataItem, departments]",[2140,2153],"[instrument, instruments]",[2466,2483],"[departmentsData, item]",[3354,3356],"[item]",[1691,1702],"[faculties, item]",[2737,2765],"[classroomsData, instrument, isEditMode]",[784,786],"[timeout]",[2811,2817],"[data, error, loading]"]