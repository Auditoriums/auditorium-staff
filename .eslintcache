[{"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/index.tsx":"1","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/reportWebVitals.ts":"2","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/client.ts":"3","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/App.tsx":"4","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindowProvider.tsx":"5","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/NotificationProvider.tsx":"6","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/Layout.tsx":"7","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/Notification.tsx":"8","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindow.tsx":"9","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/sidebar/Sidebar.tsx":"10","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/content/Content.tsx":"11","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/logo/Logo.tsx":"12","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/home/Home.tsx":"13","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/Users.tsx":"14","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/Registry.tsx":"15","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/schedule/Schedule.tsx":"16","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/profile/Profile.tsx":"17","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/PDFConfig.ts":"18","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/styles/selectStyles.ts":"19","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/models/models.ts":"20","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/helpers.ts":"21","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/users.ts":"22","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/register.ts":"23","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classrooms.ts":"24","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/classrooms/Classrooms.tsx":"25","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteClassroom.ts":"26","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/header/Header.tsx":"27","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/button/Button.tsx":"28","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/userProfile/UserProfile.tsx":"29","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/scheduleUnit/ScheduleUnit.tsx":"30","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/constants.ts":"31","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/schedule.ts":"32","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createClassroom.ts":"33","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/departments.ts":"34","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/classroom/Classroom.tsx":"35","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/Caviar.tsx":"36","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/title/Title.tsx":"37","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/instruments/Instruments.tsx":"38","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/ClassroomInfo.tsx":"39","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tag/Tag.tsx":"40","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/Footer.tsx":"41","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/freeClassroom.ts":"42","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantRegistration/OccupantRegistration.tsx":"43","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tooltip/Tooltip.tsx":"44","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantInfo/OccupantInfo.tsx":"45","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/occupyClassroom.ts":"46","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/edit/Edit.tsx":"47","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/add/Add.tsx":"48","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/delete/Delete.tsx":"49","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/HeaderSelect.tsx":"50","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/selectStyles.ts":"51","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/filterClassrooms.ts":"52","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerCheckBox/HeaderCheckbox.tsx":"53","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/dataList/DataList.tsx":"54","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useUsers.ts":"55","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useInstruments.ts":"56","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/instruments.ts":"57","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createInstrument.ts":"58","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteInstrument.ts":"59","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateInstrument.ts":"60","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDepartments.ts":"61","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useFaculties.ts":"62","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/faculties.ts":"63","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDepartment.ts":"64","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDepartment.ts":"65","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDepartment.ts":"66","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteFaculty.ts":"67","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createFaculty.ts":"68","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateFaculty.ts":"69","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDegrees.ts":"70","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDegree.ts":"71","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDegree.ts":"72","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDegree.ts":"73","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/degrees.ts":"74","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useClassrooms.tsx":"75","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/loader/Loader.tsx":"76","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/AdminClassrooms.tsx":"77","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/AdminUsers.tsx":"78","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/AdminFaculties.tsx":"79","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/AdminDegrees.tsx":"80","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/AdminDepartments.tsx":"81","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/admin/Admin.tsx":"82","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/AdminInstruments.tsx":"83","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/createClassroomPopupBody/CreateClassroomPopupBody.tsx":"84","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/browseClassroomPopupBody/BrowseClassroomPopupBody.tsx":"85","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/createFacultyPopupBody/CreateFacultyPopupBody.tsx":"86","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/createDegreePopupBody/CreateDegreePopupBody.tsx":"87","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/browseUserPopupBody/BrowseUserPopupBody.tsx":"88","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/createDepartmentPopupBody/CreateDepartmentPopupBody.tsx":"89","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/createInstrumentPopupBody/CreateInstrumentPopupBody.tsx":"90","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/browseInstrumentPopupBody/BrowseInstrumentPopupBody.tsx":"91","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/login/Login.tsx":"92","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/customInput/CustomInput.tsx":"93","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/registration/Registration.tsx":"94","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/login.ts":"95","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useMe.ts":"96","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/mail.js":"97","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/conjugate.ts":"98","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/femail.js":"99","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signUp.ts":"100"},{"size":1045,"mtime":1619293464579,"results":"101","hashOfConfig":"102"},{"size":425,"mtime":1618351407625,"results":"103","hashOfConfig":"102"},{"size":1179,"mtime":1620643913214,"results":"104","hashOfConfig":"102"},{"size":252,"mtime":1619295814082,"results":"105","hashOfConfig":"102"},{"size":1467,"mtime":1618924364958,"results":"106","hashOfConfig":"102"},{"size":1442,"mtime":1618351407598,"results":"107","hashOfConfig":"102"},{"size":959,"mtime":1620644061185,"results":"108","hashOfConfig":"102"},{"size":2009,"mtime":1618351407597,"results":"109","hashOfConfig":"102"},{"size":1800,"mtime":1618924470936,"results":"110","hashOfConfig":"102"},{"size":5205,"mtime":1620496599185,"results":"111","hashOfConfig":"102"},{"size":2223,"mtime":1620494307292,"results":"112","hashOfConfig":"102"},{"size":1021,"mtime":1618351407597,"results":"113","hashOfConfig":"102"},{"size":2438,"mtime":1620579692015,"results":"114","hashOfConfig":"102"},{"size":3596,"mtime":1620641999948,"results":"115","hashOfConfig":"102"},{"size":4098,"mtime":1618351407619,"results":"116","hashOfConfig":"102"},{"size":1873,"mtime":1618351407622,"results":"117","hashOfConfig":"102"},{"size":2285,"mtime":1620581447238,"results":"118","hashOfConfig":"102"},{"size":2551,"mtime":1618351407617,"results":"119","hashOfConfig":"102"},{"size":1202,"mtime":1618700160684,"results":"120","hashOfConfig":"102"},{"size":4135,"mtime":1620404664221,"results":"121","hashOfConfig":"102"},{"size":4396,"mtime":1620503582853,"results":"122","hashOfConfig":"102"},{"size":1024,"mtime":1619816996850,"results":"123","hashOfConfig":"102"},{"size":553,"mtime":1618351407522,"results":"124","hashOfConfig":"102"},{"size":711,"mtime":1619272880249,"results":"125","hashOfConfig":"102"},{"size":2827,"mtime":1620643719728,"results":"126","hashOfConfig":"102"},{"size":223,"mtime":1618351407516,"results":"127","hashOfConfig":"102"},{"size":240,"mtime":1618351407593,"results":"128","hashOfConfig":"102"},{"size":855,"mtime":1618351407589,"results":"129","hashOfConfig":"102"},{"size":1474,"mtime":1620404664218,"results":"130","hashOfConfig":"102"},{"size":2335,"mtime":1620404664215,"results":"131","hashOfConfig":"102"},{"size":191,"mtime":1618351407603,"results":"132","hashOfConfig":"102"},{"size":362,"mtime":1618351407523,"results":"133","hashOfConfig":"102"},{"size":215,"mtime":1618351407514,"results":"134","hashOfConfig":"102"},{"size":305,"mtime":1619003952241,"results":"135","hashOfConfig":"102"},{"size":3011,"mtime":1620644145736,"results":"136","hashOfConfig":"102"},{"size":2207,"mtime":1618351407590,"results":"137","hashOfConfig":"102"},{"size":321,"mtime":1618351407602,"results":"138","hashOfConfig":"102"},{"size":1419,"mtime":1620474079372,"results":"139","hashOfConfig":"102"},{"size":1681,"mtime":1620643913192,"results":"140","hashOfConfig":"102"},{"size":624,"mtime":1618351407601,"results":"141","hashOfConfig":"102"},{"size":2057,"mtime":1620644061179,"results":"142","hashOfConfig":"102"},{"size":669,"mtime":1618351407517,"results":"143","hashOfConfig":"102"},{"size":5656,"mtime":1620643913198,"results":"144","hashOfConfig":"102"},{"size":260,"mtime":1618351407602,"results":"145","hashOfConfig":"102"},{"size":1530,"mtime":1620404664208,"results":"146","hashOfConfig":"102"},{"size":957,"mtime":1618351407518,"results":"147","hashOfConfig":"102"},{"size":710,"mtime":1619127777030,"results":"148","hashOfConfig":"102"},{"size":339,"mtime":1618781817829,"results":"149","hashOfConfig":"102"},{"size":423,"mtime":1619127814320,"results":"150","hashOfConfig":"102"},{"size":329,"mtime":1618841678420,"results":"151","hashOfConfig":"102"},{"size":1202,"mtime":1618700160684,"results":"152","hashOfConfig":"102"},{"size":1038,"mtime":1618859674193,"results":"153","hashOfConfig":"102"},{"size":406,"mtime":1618858609526,"results":"154","hashOfConfig":"102"},{"size":1932,"mtime":1620642369956,"results":"155","hashOfConfig":"102"},{"size":671,"mtime":1618870531919,"results":"156","hashOfConfig":"102"},{"size":971,"mtime":1618956040613,"results":"157","hashOfConfig":"102"},{"size":351,"mtime":1618932762248,"results":"158","hashOfConfig":"102"},{"size":348,"mtime":1618921707227,"results":"159","hashOfConfig":"102"},{"size":227,"mtime":1618920326354,"results":"160","hashOfConfig":"102"},{"size":400,"mtime":1618930546389,"results":"161","hashOfConfig":"102"},{"size":704,"mtime":1619000457521,"results":"162","hashOfConfig":"102"},{"size":677,"mtime":1619010460893,"results":"163","hashOfConfig":"102"},{"size":220,"mtime":1619004236020,"results":"164","hashOfConfig":"102"},{"size":234,"mtime":1619005104551,"results":"165","hashOfConfig":"102"},{"size":227,"mtime":1619006223161,"results":"166","hashOfConfig":"102"},{"size":286,"mtime":1619008026042,"results":"167","hashOfConfig":"102"},{"size":215,"mtime":1619011568181,"results":"168","hashOfConfig":"102"},{"size":222,"mtime":1619011020952,"results":"169","hashOfConfig":"102"},{"size":271,"mtime":1619011082457,"results":"170","hashOfConfig":"102"},{"size":652,"mtime":1619015029554,"results":"171","hashOfConfig":"102"},{"size":211,"mtime":1619014858590,"results":"172","hashOfConfig":"102"},{"size":218,"mtime":1619014828121,"results":"173","hashOfConfig":"102"},{"size":266,"mtime":1619014919584,"results":"174","hashOfConfig":"102"},{"size":245,"mtime":1619015252188,"results":"175","hashOfConfig":"102"},{"size":1065,"mtime":1620404734460,"results":"176","hashOfConfig":"102"},{"size":347,"mtime":1620421410625,"results":"177","hashOfConfig":"102"},{"size":4393,"mtime":1620423480752,"results":"178","hashOfConfig":"102"},{"size":4738,"mtime":1620423939212,"results":"179","hashOfConfig":"102"},{"size":3184,"mtime":1620423480835,"results":"180","hashOfConfig":"102"},{"size":3710,"mtime":1620423480779,"results":"181","hashOfConfig":"102"},{"size":3175,"mtime":1620423480904,"results":"182","hashOfConfig":"102"},{"size":3054,"mtime":1620634498564,"results":"183","hashOfConfig":"102"},{"size":4574,"mtime":1620423480915,"results":"184","hashOfConfig":"102"},{"size":7468,"mtime":1620423480790,"results":"185","hashOfConfig":"102"},{"size":1320,"mtime":1620423480945,"results":"186","hashOfConfig":"102"},{"size":2893,"mtime":1620423480757,"results":"187","hashOfConfig":"102"},{"size":4663,"mtime":1620423480785,"results":"188","hashOfConfig":"102"},{"size":1431,"mtime":1620423480742,"results":"189","hashOfConfig":"102"},{"size":4203,"mtime":1620423480814,"results":"190","hashOfConfig":"102"},{"size":6278,"mtime":1620423480875,"results":"191","hashOfConfig":"102"},{"size":886,"mtime":1620423480736,"results":"192","hashOfConfig":"102"},{"size":4790,"mtime":1620581586887,"results":"193","hashOfConfig":"102"},{"size":1022,"mtime":1620580468650,"results":"194","hashOfConfig":"102"},{"size":4265,"mtime":1620634607854,"results":"195","hashOfConfig":"102"},{"size":515,"mtime":1618351407517,"results":"196","hashOfConfig":"102"},{"size":301,"mtime":1620503582856,"results":"197","hashOfConfig":"102"},{"size":11557,"mtime":1620506932088,"results":"198","hashOfConfig":"102"},{"size":2462,"mtime":1620577995473,"results":"199","hashOfConfig":"102"},{"size":3767,"mtime":1620509383284,"results":"200","hashOfConfig":"102"},{"size":356,"mtime":1618351407518,"results":"201","hashOfConfig":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"205"},"12dhxiy",{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"205"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"205"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"205"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"205"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"205"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"205"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"205"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"205"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"205"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"205"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"205"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"205"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"205"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"205"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"205"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"205"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"205"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"205"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"205"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"205"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"205"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"432"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"432"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/index.tsx",["440"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { client } from \"./api/client\";\nimport PopupWindowProvider from \"./components/popupWindow/PopupWindowProvider\";\nimport NotificationProvider from \"./components/notification/NotificationProvider\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <ApolloProvider client={client}>\n        <PopupWindowProvider>\n          <NotificationProvider>\n            <App />\n          </NotificationProvider>\n        </PopupWindowProvider>\n      </ApolloProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["441","442"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/reportWebVitals.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/client.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/App.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindowProvider.tsx",["443"],"import React, { createContext, useContext, useReducer, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport PopupWindow from \"./PopupWindow\";\nimport { isBlurredVar } from \"../../api/client\";\n\ninterface PropTypes {}\n\nexport const PopupWindowContext = createContext({});\n\nconst PopupWindowProvider: React.FC<PropTypes> = ({ children }) => {\n  const [state, dispatch] = useReducer((state: any, action: any) => {\n    switch (action.type) {\n      case \"PUSH_POPUP_WINDOW\": {\n        isBlurredVar(true);\n        return [...state, { ...action.payload }];\n      }\n      case \"POP_POPUP_WINDOW\": {\n        if (state.length <= 1) {\n          isBlurredVar(false);\n        }\n        return [...state.slice(0, state.length - 1)];\n      }\n\n      default:\n        return state;\n    }\n  }, []);\n  return (\n    <PopupWindowContext.Provider value={dispatch}>\n      {state.map((popup: any) => (\n        <PopupWindow\n          key={popup.id}\n          body={popup.body}\n          header={popup.header}\n          footer={popup.footer}\n          isConfirm={popup.isConfirm}\n          dispatch={dispatch}\n        />\n      ))}\n      {children}\n    </PopupWindowContext.Provider>\n  );\n};\n\nexport const usePopupWindow = () => {\n  const dispatch = useContext(PopupWindowContext);\n  return (props: any) => {\n    // @ts-ignore\n    dispatch({\n      type: \"PUSH_POPUP_WINDOW\",\n      payload: {\n        id: v4(),\n        ...props,\n      },\n    });\n  };\n};\n\nexport default PopupWindowProvider;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/NotificationProvider.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/Layout.tsx",["444"],"import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./layout.module.css\";\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\nimport Content from \"./content/Content\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport {isLoggedVar} from \"../../api/client\";\r\n\r\nconst Layout = () => {\r\n  const { data: isBlurred } = useQuery(gql`\r\n    query isBlurred {\r\n      isBlurred @client\r\n    }\r\n  `);\r\n  const { data: isLogged } = useQuery(gql`\r\n    query isLogged {\r\n      isLogged @client\r\n    }\r\n  `);\r\n\r\n  useEffect(()=> {\r\n    isLoggedVar(!!JSON.parse(localStorage.getItem('user') as string));\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={[\r\n        styles.layout,\r\n        isBlurred.isBlurred ? styles.blurred : \"\",\r\n      ].join(\" \")}\r\n    >\r\n      {isLogged.isLogged && <nav>\r\n        <Sidebar/>\r\n      </nav>}\r\n      <main>\r\n        <Content isLogged={isLogged.isLogged}/>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/Notification.tsx",["445","446"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./notification.module.css\";\n\ninterface PropTypes {\n  message: string;\n  header: string;\n  dispatch: (value: any) => void;\n  id: string;\n  type?: \"ok\" | \"alert\";\n}\n\nconst Notification: React.FC<PropTypes> = ({\n  message,\n  type = \"default\",\n  dispatch,\n  id,\n  header,\n}) => {\n  const [exit, setExit] = useState(false);\n  const [opacity, setOpacity] = useState(100);\n  const [intervalId, setIntervalId]: any = useState(null);\n\n  const handleStartTimer = () => {\n    const id = setInterval(() => {\n      setOpacity((prevState) => {\n        if (prevState > 95) {\n          return prevState - 0.02;\n        } else if (prevState > 1) {\n          return prevState - 0.5;\n        } else {\n          handleCloseNotification();\n          return prevState;\n        }\n      });\n    }, 10);\n    setIntervalId(id);\n  };\n\n  const handlePauseTimer = () => {\n    clearInterval(intervalId);\n    setOpacity(100);\n  };\n\n  const handleCloseNotification = () => {\n    clearInterval(intervalId);\n    setExit(true);\n    setTimeout(() => {\n      dispatch({\n        type: \"REMOVE_NOTIFICATION\",\n        id: id,\n      });\n    }, 400);\n  };\n\n  useEffect(() => {\n    if (opacity < 1) {\n      handleCloseNotification();\n    }\n  }, [opacity]);\n\n  useEffect(() => {\n    handleStartTimer();\n  }, []);\n\n  return (\n    <div\n      onMouseEnter={handlePauseTimer}\n      onMouseLeave={handleStartTimer}\n      className={[styles.notification, exit ? styles.exit : \"\"].join(\" \")}\n      style={{ opacity: `${opacity / 100}` }}\n    >\n      <span\n        className={styles.notificationClose}\n        onClick={handleCloseNotification}\n      />\n      <p\n        className={[\n          type === \"ok\"\n            ? styles.ok\n            : type === \"alert\"\n            ? styles.alert\n            : styles.default\n        , styles.header].join(\" \")}\n      >\n        {header}\n      </p>\n      <p className={styles.message}>{message}</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindow.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/sidebar/Sidebar.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/content/Content.tsx",["447","448"],"import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./content.module.css\";\r\nimport Home from \"../../../pages/home/Home\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Registry from \"../../../pages/registry/Registry\";\r\nimport Schedule from \"../../../pages/schedule/Schedule\";\r\nimport Users from \"../../../pages/users/Users\";\r\nimport Profile from \"../../../pages/profile/Profile\";\r\nimport AdminClassrooms from \"../../../pages/admin/classrooms/AdminClassrooms\";\r\nimport AdminUsers from \"../../../pages/admin/users/AdminUsers\";\r\nimport Admin from \"../../../pages/admin/admin/Admin\";\r\nimport Classrooms from \"../../../pages/classrooms/Classrooms\";\r\nimport AdminInstruments from \"../../../pages/admin/instruments/AdminInstruments\";\r\nimport AdminDepartments from \"../../../pages/admin/departments/AdminDepartments\";\r\nimport AdminFaculties from \"../../../pages/admin/faculties/AdminFaculties\";\r\nimport AdminDegrees from \"../../../pages/admin/degrees/AdminDegrees\";\r\nimport Login from \"../../../pages/login/Login\";\r\n\r\ninterface PropTypes {\r\n  isLogged: boolean;\r\n}\r\n\r\nconst Content: React.FC<PropTypes> = ({isLogged}) => {\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      {!isLogged\r\n      ? <Switch>\r\n          <Route path=\"/\" component={Login} />\r\n        </Switch>\r\n      : <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/classrooms/:classroomName?\" component={Classrooms} />\r\n        <Route path=\"/registry/:userId?\" component={Registry} />\r\n        <Route path=\"/schedule\" component={Schedule} />\r\n        <Route path=\"/users:userId?\" component={Users} />\r\n        <Route path=\"/profile\" component={Profile} />\r\n        <Route path=\"/admin\" component={Admin} />\r\n        <Route path=\"/adminClassrooms\" component={AdminClassrooms} />\r\n        <Route path=\"/adminUsers\" component={AdminUsers} />\r\n        <Route path=\"/adminInstruments\" component={AdminInstruments} />\r\n        <Route path=\"/adminDepartments\" component={AdminDepartments} />\r\n        <Route path=\"/adminFaculties\" component={AdminFaculties} />\r\n        <Route path=\"/adminDegrees\" component={AdminDegrees} />\r\n      </Switch>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/logo/Logo.tsx",["449"],"import React from \"react\";\nimport styles from \"./logo.module.css\";\n\ninterface PropTypes {\n  title: string;\n  description: string;\n  size?: \"small\" | \"default\";\n}\n\nconst Logo: React.FC<PropTypes> = ({\n  title,\n  description,\n  size = \"default\",\n}) => {\n  const style = {};\n  return (\n    <div className={styles.logoWrapper}>\n      <div\n        className={\n          size === \"default\"\n            ? styles.logo\n            : size === \"small\"\n            ? styles.smallLogo\n            : styles.logo\n        }\n      >\n        <div className={styles.logoText}>\n          <h1\n            className={\n              size === \"default\"\n                ? styles.logoTitle\n                : size === \"small\"\n                ? styles.smallLogoTitle\n                : styles.logoTitle\n            }\n          >\n            {title}\n          </h1>\n          {size !== \"small\" && (\n            <h2 className={styles.logoDescription}>{description}</h2>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/home/Home.tsx",["450"],"import React from \"react\";\nimport styles from \"./home.module.css\";\nimport Logo from \"../../components/logo/Logo\";\nimport {useMe} from \"../../hooks/useMe\";\nimport Loader from \"../../components/loader/Loader\";\nimport Header from \"../../components/header/Header\";\nimport {conjugate} from \"../../helpers/conjugate\";\n\nconst Home = () => {\n  const me = useMe();\n\n  return (\n    <div className={styles.home}>\n      <Header/>\n      {!me ? <Loader/> : <><Logo\n        title=\"Auditorium\"\n        description=\"Система управління видачею аудиторій\"\n      />\n      <h1 className={styles.welcome}>{me?.firstName}, вітаємо в Auditorium!</h1>\n      <div className={styles.about}>\n        <ul>\n          <p>В цій програмі Ви можете:</p>\n          <li>Переглядати в режимі онлайн наявність вільних аудиторий</li>\n          <li>\n            Переглядати інформацію про аудиторії та наявні в них інструменти,\n            тощо\n          </li>\n          <li>Дивитись розклад як на сьогодні, так і на кожен день.</li>\n          <li>Переглядати інформацію про викладачів</li>\n        </ul>\n        <ul>\n          <p>Для учбової частини:</p>\n          <li>\n            Записувати і виписувати користувачів в аудиторії (як зареєстрованих\n            в системі, так і незареєстрованих)\n          </li>\n          <li>Дивитись інформацію по кожному користувачу</li>\n          <li>\n            Автоматичне заповнення журналу відвідувань з можливістю\n            роздрукування або збереження у форматі PDF\n          </li>\n          <li>Перегляд розкладу</li>\n        </ul>\n        <ul>\n          <p>Для адміністратора:</p>\n          <li>\n            Створення/коригування/видалення аудиторій, користувачів,\n            інструментів\n          </li>\n          <li>Створення та редагування розкладу</li>\n        </ul>\n      </div></>}\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/Users.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/Registry.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/schedule/Schedule.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/profile/Profile.tsx",["451","452","453"],"import React, {useState} from \"react\";\r\nimport styles from \"./profile.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport useUsers from \"../../hooks/useUsers\";\r\nimport {User, UserTypes, UserTypesUa} from \"../../models/models\";\r\nimport {fullName} from \"../../helpers/helpers\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {isLoggedVar} from \"../../api/client\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useMe} from \"../../hooks/useMe\";\r\nimport Edit from \"../../components/icons/edit/Edit\";\r\n\r\nconst Profile = () => {\r\n  const me = useMe();\r\n  const history = useHistory();\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const handleLogout = () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm('Ви бажаете вийти?')) {\r\n      isLoggedVar(false);\r\n      localStorage.removeItem('user');\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <h1>Мій профіль</h1>\r\n        <Button color='red' onClick={handleLogout}>Вийти</Button>\r\n        {!editMode && <Edit onClick={handleEdit}/>}\r\n      </Header>\r\n      <div className={styles.wrapper}>\r\n        {me && <div className={styles.profileData}>\r\n            <div><span>П.І.Б.:</span><span>{fullName(me)}</span></div>\r\n            <div><span>ID:</span><span>{me.id}</span></div>\r\n          {!me.verified && <div><span>Верифіковано:</span><span>Ні</span></div>}\r\n            <div><span>Тип:</span><span>{UserTypesUa[me.type as UserTypes]}</span></div>\r\n          {me.department && <div><span>Кафедра:</span><span>{me.department.name}</span></div>}\r\n            <div><span>Тел.:</span><span>{me.phoneNumber}</span></div>\r\n          {me.extraPhoneNumbers && <div><span>Інші тел.:</span><span>\r\n                <ul>\r\n                  {JSON.parse(me.extraPhoneNumbers as string).map((item: string) => (<li>{item}</li>))}\r\n                </ul>\r\n            </span></div>}\r\n            <div><span>Дата закінчення</span><span>{me.expireDate}</span></div>\r\n            <div><span>Email:</span><span>{me.email}</span></div>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/PDFConfig.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/styles/selectStyles.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/models/models.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/helpers.ts",["454","455"],"import {\n  HOUR,\n  MINUTE,\n  TIME_SNIPPETS,\n  WORKING_DAY_END,\n  WORKING_DAY_START,\n} from \"./constants\";\nimport {\n  OccupiedInfo,\n  ScheduleUnitType,\n  User,\n  UserTypes,\n} from \"../models/models\";\nimport useUsers from \"../hooks/useUsers\";\n\nexport const getScheduleTimeline = (start: number, end: number): string[] => {\n  let timeSnippets: string[] = [];\n  for (let hour = start; hour <= end; hour++) {\n    if (hour === end) {\n      timeSnippets.push(hour + \":00\");\n    } else {\n      TIME_SNIPPETS.forEach((minutes) => {\n        timeSnippets.push(hour + minutes);\n      });\n    }\n  }\n  return timeSnippets;\n};\n\nconst getScheduleTimeInMilliseconds = (scheduleUnitTime: any) => {\n  return scheduleUnitTime\n    .split(\":\")\n    .map((el: any, index: number) => {\n      return index === 0 ? Number(el) * HOUR : Number(el) * MINUTE;\n    })\n    .reduce((acc: any, curr: any) => acc + curr);\n};\n\nexport const getPossiblyOccupied = (schedule: Array<any>) => {\n  const current =\n    new Date().getHours() * HOUR + new Date().getMinutes() * MINUTE;\n  const timeSnippets = schedule.map((el: any) => {\n    return {\n      from: getScheduleTimeInMilliseconds(el.from),\n      to: getScheduleTimeInMilliseconds(el.to),\n    };\n  });\n  return timeSnippets\n    .map((el: any) => {\n      return current >= el.from && current <= el.to;\n    })\n    .some((el: any) => el === true);\n};\n\nexport const getTimeHHMM = (date: Date) => {\n  return date.getHours() + \":\" + formatMinutesToMM(date.getMinutes());\n};\n\nexport const getScheduleUnitRowLength = (\n  schedule: Array<ScheduleUnitType>,\n  units: string\n) =>\n  schedule\n    .map((scheduleUnit: ScheduleUnitType) => {\n      return parseInt(scheduleUnit.to) - parseInt(scheduleUnit.from) + units;\n    })\n    .join(\" \");\n\nexport const formatMinutesToMM = (value: number) => {\n  if (value <= 9) return `0${value}`;\n  else return value;\n};\n\nexport const fullName = (user: User | undefined, withInitials = false) => {\n  if (user !== undefined) {\n    if (withInitials) {\n      return `${user.lastName} ${user.firstName.charAt(0)}. ${\n        user.patronymic ? user.patronymic.charAt(0) + \".\" : \"\"\n      }`;\n    } else {\n      return `${user.lastName} ${user.firstName} ${\n        user.patronymic ? user.patronymic : \"\"\n      }`;\n    }\n  }\n  return \"\";\n};\n\nexport const typeStyle = (occupied: OccupiedInfo) => {\n  const student = { backgroundColor: \"rgba(46,40,124)\", color: \"#fff\" };\n  const employee = { backgroundColor: \"#ffc000\", color: \"#fff\" };\n  const vacant = {\n    backgroundColor: \"transparent\",\n    color: \"#000\",\n  };\n  if (occupied !== null) {\n    switch (occupied.user.type) {\n      case UserTypes.STUDENT:\n        return student;\n      case UserTypes.POST_GRADUATE:\n        return student;\n      default:\n        return employee;\n    }\n  }\n  return vacant;\n};\n\n//get int from time unit. ex: \"9:15\" -> 36 where each 15 min == 1; ex: \"00:15\" -> 1, \"10:00\" ->40\nconst simpleIntFromScheduleUnit = (time: string) => {\n  const reducer = (accumulator: any, currentValue: any) =>\n    accumulator + currentValue;\n  return time\n    .split(\":\")\n    .map((el: string, index: number) => {\n      if (index === 0) {\n        return parseInt(el) * 4;\n      } else {\n        switch (parseInt(el)) {\n          case 0:\n            return 0;\n          case 15:\n            return 1;\n          case 30:\n            return 2;\n          case 45:\n            return 3;\n        }\n      }\n    })\n    .reduce(reducer);\n};\n\n//get schedule units size in fr units for grids\nexport const getScheduleUnitSize = (\n  units: Array<ScheduleUnitType>,\n  fillEmpty = true\n) => {\n  const items = [];\n  if (fillEmpty) {\n    items.push(parseInt(units[0].from) - WORKING_DAY_START);\n  }\n  for (let item of units) {\n    const from = simpleIntFromScheduleUnit(item.from);\n    const to = simpleIntFromScheduleUnit(item.to);\n    items.push((to as number) - (from as number));\n  }\n  if (fillEmpty) {\n    items.push(WORKING_DAY_END - parseInt(units[units.length - 1].to));\n  }\n\n  return items.map((item) => `${item}fr`).join(\" \");\n};\n\nexport const ISODateString = (d: Date) => {\n  function pad(n: any) {\n    return n < 10 ? \"0\" + n : n;\n  }\n  return (\n    d.getUTCFullYear() +\n    \"-\" +\n    pad(d.getUTCMonth() + 1) +\n    \"-\" +\n    pad(d.getUTCDate())\n    // +\n    // \"T\" +\n    // pad(d.getUTCHours()) +\n    // \":\" +\n    // pad(d.getUTCMinutes()) +\n    // \":\" +\n    // pad(d.getUTCSeconds()) +\n    // \"Z\"\n  );\n};\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/users.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/register.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/classrooms/Classrooms.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/header/Header.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/button/Button.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/userProfile/UserProfile.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/scheduleUnit/ScheduleUnit.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/constants.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/schedule.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/departments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/classroom/Classroom.tsx",["456"],"import React, {useEffect, useState} from \"react\";\nimport styles from \"./classroom.module.css\";\nimport {\n  ClassroomType,\n  OccupiedInfo,\n  UserTypes,\n  UserTypesUa,\n} from \"../../models/models\";\nimport {fullName, typeStyle} from \"../../helpers/helpers\";\nimport Instruments from \"../instruments/Instruments\";\nimport {usePopupWindow} from \"../popupWindow/PopupWindowProvider\";\nimport ClassroomInfo from \"../ classroomInfo/ClassroomInfo\";\nimport Tag from \"../tag/Tag\";\nimport Footer from \"../footer/Footer\";\nimport specialPiano from \"../../assets/images/specialPiano.svg\";\n\ninterface PropTypes {\n  classroom: ClassroomType;\n  dispatchNotification: (value: any) => void;\n}\n\nconst Classroom: React.FC<PropTypes> = ({classroom, dispatchNotification}) => {\n  const {id, name, occupied, instruments, isWing, isOperaStudio, special} = classroom;\n  const occupiedStyle = {\n    background: \"#fff\",\n    transition: \"all .3s cubic-bezier(0.25, 0.8, 0.25, 1)\"\n  };\n  const vacantStyle = {\n    background: \"#4bfd63\",\n    transition: \"all .3s cubic-bezier(0.25, 0.8, 0.25, 1)\"\n  };\n  const occupationInfo = occupied ? \"Зайнято\" : \"Вільно\";\n  const header = (\n    <>\n      <h1>{`Аудиторія ${name}`}</h1>\n      {isWing && <Tag body=\"Флігель\"/>}\n      {isOperaStudio && <Tag body=\"Оперна студія\"/>}\n    </>\n  );\n  const [isPassed, setIsPassed] = useState(false);\n  const dispatchPopupWindow = usePopupWindow();\n\n\n  const handlePassed = (value: boolean) => {\n    setIsPassed(value);\n  }\n\n  const handleClick = () => {\n    dispatchPopupWindow({\n      header: header,\n      //@ts-ignore\n      body: <ClassroomInfo\n        classroom={classroom}\n        dispatchNotification={dispatchNotification}\n        isPassed={isPassed}\n      />,\n      footer: <Footer\n        classroomName={name}\n        occupied={occupied}\n        dispatchNotification={dispatchNotification}\n        setIsPassed={handlePassed}\n        isPassed={isPassed}\n      />,\n    });\n  };\n\n  return (\n    <>\n      <li\n        key={id}\n        className={styles.classroomsListItem}\n        style={occupied ? occupiedStyle : vacantStyle}\n        onClick={handleClick}\n      >\n        <div className={styles.header}>\n          {special === 'PIANO' && <img className={styles.special} src={specialPiano} alt=\"Special Piano\"/>}\n          <h1>{name}</h1>\n          <div className={styles.occupantInfo}>\n            <p className={styles.occupantName}>\n              {occupied?.user.nameTemp === null ? fullName(occupied?.user, true) :\n                occupied?.user.nameTemp}\n            </p>\n            <p\n              style={typeStyle(occupied as OccupiedInfo)}\n              className={styles.occupantType}\n            >\n              {UserTypesUa[occupied?.user.type as UserTypes]}\n            </p>\n          </div>\n        </div>\n        <div className={styles.occupationInfo}>\n          <p>{occupationInfo}</p>\n        </div>\n        <Instruments instruments={instruments}/>\n      </li>\n    </>\n  );\n};\n\nexport default Classroom;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/Caviar.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/title/Title.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/instruments/Instruments.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/ClassroomInfo.tsx",["457"],"import React, {useEffect} from \"react\";\nimport styles from \"./classroomInfo.module.css\";\nimport { ClassroomType } from \"../../models/models\";\nimport Instruments from \"../instruments/Instruments\";\nimport ScheduleUnit from \"../scheduleUnit/ScheduleUnit\";\nimport Title from \"../title/Title\";\nimport OccupantInfo from \"./occupantInfo/OccupantInfo\";\nimport OccupantRegistration from \"./occupantRegistration/OccupantRegistration\";\n\ninterface PropTypes {\n  classroom: ClassroomType;\n  dispatchNotification: (value: string) => void;\n  dispatch: (value: any) => void;\n  isPassed: boolean;\n}\n\nconst ClassroomInfo: React.FC<PropTypes> = ({classroom, dispatchNotification, dispatch,\n  isPassed\n}) => {\n  const { name, instruments, description, chair, occupied, id } = classroom;\n  const occupiedInfo = (\n    <>\n      <OccupantInfo occupied={occupied} />\n    </>\n  );\n\n  return (\n    <div>\n      <p className={styles.description}>\n        {chair ? chair.name + \". \" + description : description}\n      </p>\n      <Title title=\"Розклад на сьогодні\" />\n      <ScheduleUnit classroomName={name} />\n      {instruments.length > 0 && (\n        <>\n          <Title title=\"Інструменти\" />\n          <Instruments expanded instruments={instruments} />\n        </>\n      )}\n      {occupied && !isPassed ? (\n        occupiedInfo\n      ) : (\n        <>\n          <Title title=\"Запис в аудиторію\" />\n          <OccupantRegistration\n            dispatchNotification={dispatchNotification}\n            classroomId={id}\n            classroomName={name}\n            dispatch={dispatch}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ClassroomInfo;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tag/Tag.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/Footer.tsx",["458","459"],"import React, {useEffect} from \"react\";\nimport Button from \"../button/Button\";\nimport styles from \"../classroom/classroom.module.css\";\nimport {gridUpdate, isOccupyButtonDisabled} from \"../../api/client\";\nimport {gql, useMutation, useQuery} from \"@apollo/client\";\nimport { FREE_CLASSROOM } from \"../../api/operations/mutations/freeClassroom\";\nimport { OccupiedInfo } from \"../../models/models\";\n\ninterface PropTypes {\n  classroomName: string;\n  occupied: OccupiedInfo | null;\n  dispatchNotification: (value: any) => void;\n  setIsPassed: (value: boolean) => void;\n  isPassed: boolean;\n}\n\nconst   Footer: React.FC<PropTypes> = ({classroomName, occupied, dispatchNotification,\n  setIsPassed, isPassed, ...props\n}) => {\n  const [freeClassroom] = useMutation(FREE_CLASSROOM, {\n    variables: {\n      input: {\n        classroomName: String(classroomName),\n      },\n    },\n  });\n  const { data: {isOccupyButtonDisabled} } = useQuery(gql`\n    query isOccupyButtonDisabled {\n      isOccupyButtonDisabled @client\n    }\n  `);\n\n  const handleFreeClassroom = () => {\n\n    freeClassroom().then(() => {\n      dispatchNotification({\n        header: \"Успішно!\",\n        message: `Аудиторія ${classroomName} звільнена.`,\n        type: \"ok\",\n      });\n      // @ts-ignore\n      props.dispatch({\n        type: \"POP_POPUP_WINDOW\",\n      });\n      gridUpdate(!gridUpdate());\n    });\n  };\n\n  const handlePassClassroom = () => {\n    setIsPassed(true);\n    console.log(isPassed)\n  };\n\n  return (\n    <div className={styles.footer}>\n      {occupied || (occupied && isPassed) ? (\n        <>\n          <Button color=\"orange\" onClick={handlePassClassroom}>Передати аудиторію</Button>\n          <Button color=\"red\" onClick={handleFreeClassroom}>\n            Звільнити аудиторію\n          </Button>\n        </>\n      ) : (\n        <Button type=\"submit\" form=\"userSearchForm\" disabled={isOccupyButtonDisabled}>\n          Записати в аудиторію\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default Footer;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/freeClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantRegistration/OccupantRegistration.tsx",["460"],"import React, {FormEvent, useEffect, useRef, useState,} from \"react\";\nimport styles from \"./occupantRegistration.module.css\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {fullName} from \"../../../helpers/helpers\";\nimport Title from \"../../title/Title\";\nimport Select from 'react-select';\nimport {User, UserTypesUa, UserTypes} from \"../../../models/models\";\nimport {OCCUPY_CLASSROOM} from \"../../../api/operations/mutations/occupyClassroom\";\nimport {gridUpdate, isOccupyButtonDisabled} from \"../../../api/client\";\n\ninterface PropTypes {\n  dispatchNotification: (value: any) => void;\n  classroomId: number;\n  classroomName: string;\n  dispatch: (value: any) => void;\n}\n\nconst OccupantRegistration: React.FC<PropTypes> = ({dispatchNotification, classroomId,\n   classroomName, dispatch\n}) => {\n  const [value, setValue] = useState<string>();\n  const [existingUserValue, setExistingUserValue] = useState(null);\n  const [chosenUserId, setChosenUserId] = useState(-1);\n  const [chosenUserName, setChosenUserName] = useState('');\n  const {data, loading, error} = useQuery(GET_USERS);\n  const [occupyClassroom] = useMutation(OCCUPY_CLASSROOM);\n  const [users, setUsers] = useState();\n  const newUserTypes: any = [\n    {value: UserTypes.STUDENT, label: UserTypesUa.STUDENT},\n    {value: UserTypes.POST_GRADUATE, label: UserTypesUa.POST_GRADUATE},\n    {value: UserTypes.TEACHER, label: UserTypesUa.TEACHER},\n    {value: UserTypes.ILLUSTRATOR, label: UserTypesUa.ILLUSTRATOR},\n    {value: UserTypes.CONCERTMASTER, label: UserTypesUa.CONCERTMASTER},\n    {value: UserTypes.PIANO_TUNER, label: UserTypesUa.PIANO_TUNER},\n    {value: UserTypes.STAFF, label: UserTypesUa.STAFF},\n    {value: UserTypes.OTHER, label: UserTypesUa.OTHER},\n  ];\n  const [chosenUserType, setChosenUserType] = useState(newUserTypes[0]);\n  const existingUserInput = useRef(null);\n\n  //@ts-ignore\n  useEffect(() => existingUserInput.current.focus(),[]);\n\n  useEffect(() => {\n    if (!loading && !error) {\n      setUsers(data.users.map((user: User) => ({label: user.id + \": \" + fullName(user), value: user.id})));\n    }\n  }, [data]);\n\n  const handleReset = () => {\n    setExistingUserValue(null);\n  };\n\n  const handleExistingUser = (e: any) => {\n    const chosenUser = (data.users as unknown as Array<User>)?.find(user => user.id === e.value);\n\n    setChosenUserId(e.value);\n    setChosenUserName(fullName(chosenUser as User));\n    setChosenUserType({value: (chosenUser as User).type, label: UserTypesUa[(chosenUser?.type as UserTypes)]});\n    setValue('');\n    setExistingUserValue(e);\n  };\n\n  const handleNewUser = (e: any) => {\n    if (e.target.value.length === 1) {\n      setChosenUserType(newUserTypes[0]);\n    }\n\n    setChosenUserId(-1);\n    setValue(e.target.value);\n    setChosenUserName(e.target.value);\n    setExistingUserValue(null);\n  }\n\n  const handleTypeSelect = (e: any) => {\n    setChosenUserType(e);\n  };\n\n  const handleOccupy = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const existingUser = {\n      userId: chosenUserId,\n    };\n    const newUser = {\n      userId: -1,\n      tempUser: {\n        name: chosenUserName,\n        type: chosenUserType.value\n      }\n    };\n    const occupant = chosenUserId === -1 ? newUser : existingUser;\n\n    if(chosenUserName !== \"\") {\n      isOccupyButtonDisabled(true);\n      occupyClassroom({\n        variables: {\n          input: {\n            classroomName: classroomName.toString(),\n            until: new Date(),\n            ...occupant\n          }\n        }\n      }).then(() => {\n        dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n        gridUpdate(!gridUpdate());\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Аудиторія ${classroomName} зайнята.`,\n          type: \"ok\",\n        });\n        isOccupyButtonDisabled(false);\n      });\n    } else {\n      dispatchNotification({\n        header: \"Помилка\",\n        message: `Виберіть користувача.`,\n        type: \"alert\",\n      });\n      isOccupyButtonDisabled(false);\n    }\n  };\n\n  return (\n    <div>\n      <form\n        id=\"userSearchForm\"\n        className={styles.userSearch}\n        onSubmit={handleOccupy}\n      >\n          <Select\n            placeholder=\"Існуючі користувачі\"\n            options={users}\n            value={existingUserValue}\n            styles={{menuPortal: base => ({...base, zIndex: 9999})}}\n            menuPortalTarget={document.body}\n            onChange={handleExistingUser}\n            onFocus={handleReset}\n            ref={existingUserInput}\n          />\n        <div>\n            <input\n              type=\"text\"\n              value={value}\n              onChange={handleNewUser}\n              name=\"tempUsersInput\"\n              id=\"tempUsersInput\"\n              placeholder=\"Новий користувач\"\n              className={styles.createUserInput}\n              autoComplete=\"off\"\n            />\n          {value && <Select\n            options={newUserTypes}\n            value={chosenUserType}\n            placeholder={UserTypesUa.STUDENT}\n            onChange={handleTypeSelect}\n            menuPortalTarget={document.body}\n            styles={{menuPortal: base => ({...base, zIndex: 9999})}}\n          />}\n        </div>\n      </form>\n      <Title title=\"Вибраний користувач\"/>\n      <p>П.І.Б.: {chosenUserName}</p>\n      {/*@ts-ignore*/}\n      <p>Статус: { chosenUserType && chosenUserName?.length !== 0 && UserTypesUa[chosenUserType.value]}</p>\n    </div>\n  );\n};\n\nexport default OccupantRegistration;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tooltip/Tooltip.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantInfo/OccupantInfo.tsx",["461"],"import React from \"react\";\nimport styles from \"./occupantInfo.module.css\";\nimport {\n  OccupiedInfo,\n  User,\n  UserTypes,\n  UserTypesUa,\n} from \"../../../models/models\";\nimport Title from \"../../title/Title\";\nimport { fullName, getTimeHHMM, typeStyle } from \"../../../helpers/helpers\";\nimport { usePopupWindow } from \"../../popupWindow/PopupWindowProvider\";\nimport UserProfile from \"../../userProfile/UserProfile\";\n\ninterface PropTypes {\n  occupied: OccupiedInfo | null;\n}\n\nconst OccupantInfo: React.FC<PropTypes> = ({ occupied }) => {\n  const dispatchPopupWindow = usePopupWindow();\n\n  const onClick = () => {\n    dispatchPopupWindow({\n      header: <h1>{fullName(occupied?.user)}</h1>,\n      body: <UserProfile userId={occupied?.user.id as number} />,\n    });\n  };\n\n  return (\n    <>\n      <Title title=\"Ким зайнято\" />\n      <div onClick={onClick} className={styles.occupantCard}>\n        <div className={styles.occupantName}>\n          <div className={styles.icon} />\n          {occupied?.user.nameTemp === null ?\n            <p>{fullName(occupied?.user)}</p> :\n            <p>{occupied?.user.nameTemp}</p>}\n        </div>\n        <p\n          style={typeStyle(occupied as OccupiedInfo)}\n          className={styles.occupantType}\n        >\n          {UserTypesUa[occupied?.user.type as UserTypes]}\n        </p>\n        <p className={styles.occupiedUntil}>\n          Зайнято до {getTimeHHMM(new Date((occupied as OccupiedInfo)?.until))}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default OccupantInfo;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/occupyClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/edit/Edit.tsx",["462"],"import React from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport editIcon from \"../../../assets/images/edit.svg\";\nimport styles from \"./edit.module.css\";\n\ninterface PropTypes {\n  path?: string;\n  onClick?: (value?: any) => void;\n  dark?: boolean;\n}\n\nconst Edit: React.FC<PropTypes> = ({\n   path,\n   onClick,\n   dark = false\n}) => {\n  const history = useHistory();\n\n  return (\n    <img\n      src={editIcon}\n      className={[styles.editIcon, dark ? styles.dark : styles.light].join(' ')}\n      onClick={path ? (e) => {\n        e.stopPropagation();\n        history.push(path)\n      } : (e) => {\n        e.stopPropagation();\n        onClick && onClick();\n      }}\n    />\n  );\n}\n\nexport default Edit;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/add/Add.tsx",["463"],"import React from 'react';\nimport addIcon from \"../../../assets/images/add.svg\";\nimport styles from \"./add.module.css\";\n\ninterface PropTypes {\n  onClick: (value?: any) => void;\n}\n\nconst Add: React.FC<PropTypes> = ({onClick}) => {\n\n  return (\n    <img src={addIcon} className={styles.addIcon} onClick={onClick}/>\n  );\n}\n\nexport default Add;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/delete/Delete.tsx",["464"],"import React from 'react';\nimport deleteIcon from \"../../../assets/images/delete.svg\";\nimport styles from \"./delete.module.css\";\n\ninterface PropTypes {\n  onClick?: (value?: any) => void;\n}\n\nconst Delete: React.FC<PropTypes> = ({onClick}) => {\n\n  return (\n    <img src={deleteIcon} className={styles.deleteIcon} onClick={(e) => {\n      e.stopPropagation();\n      onClick && onClick();\n    }}/>\n  );\n}\n\nexport default Delete;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/HeaderSelect.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/selectStyles.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/filterClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerCheckBox/HeaderCheckbox.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/dataList/DataList.tsx",["465"],"import React, {useEffect, useState} from 'react';\nimport styles from './dataList.module.css';\nimport Loader from \"../loader/Loader\";\n\ninterface PropTypes {\n  header: string[];\n  data: Array<any>;\n  gridTemplateColumns?: string;\n  handleItemClick?: (id: number) => void;\n  isSearching?: boolean;\n}\n\nconst DataList: React.FC<PropTypes> = ({header, data, gridTemplateColumns,\n  handleItemClick, isSearching = false}) => {\n\n  const [columnIndex, setColumnIndex] = useState(0);\n  const [sortedData, setSortedData] = useState(data);\n  const [columns, setColumns] = useState('repeat(3, 1fr)');\n\n  useEffect(() => {\n    setSortedData(data);\n    if (gridTemplateColumns) {\n      setColumns(gridTemplateColumns);\n    } else {\n      setColumns(`20px 3fr 200px`);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    setSortedData(data?.slice().sort((a, b) => {\n      const aValue = a.props.children[columnIndex].props.children;\n      const bValue = b.props.children[columnIndex].props.children;\n      if (typeof aValue === 'string') return aValue.localeCompare(bValue);\n      return aValue - bValue;\n    }));\n  }, [columnIndex, data]);\n\n  const handleClick = (index: number) => {\n    setColumnIndex(index);\n  };\n\n  return (\n    !data?.length && !isSearching ? <Loader/> : <div className={styles.container}>\n      <ul className={styles.list}>\n        <li className={styles.headerRow} style={{gridTemplateColumns: columns}}>\n          {header?.map((item, index) => <span\n            onClick={() => handleClick(index)}>{item}</span>)}\n        </li>\n        {isSearching && !data.length\n          ? <li className={styles.emptyResult}>Нічого не знайдено</li>\n          : sortedData?.map(item => <li\n          onClick={() => handleItemClick && handleItemClick(item.props.children[0].props.children)}\n          className={styles.row} style={{gridTemplateColumns: columns}}>{item}</li>)}\n      </ul>\n    </div>\n  );\n}\n\nexport default DataList;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useUsers.ts",["466","467","468","469","470"],"import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {GET_CLASSROOMS} from \"../api/operations/queries/classrooms\";\nimport {ISODateString} from \"../helpers/helpers\";\nimport {ClassroomType, User} from \"../models/models\";\nimport {gql, useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../api/operations/queries/users\";\n\nconst useUsers = (): Array<User> => {\n  const [users, setUsers] = useState<User[]>([]);\n\n  useEffect(() => {\n    client.query({query: GET_USERS}).then((data) => {\n        setUsers(data.data.users.slice().sort((a: User, b: User) => a.id - b.id));\n      });\n  }, []);\n\n  return users;\n};\n\nexport default useUsers;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useInstruments.ts",["471","472","473","474","475","476","477"],"import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {GET_CLASSROOMS} from \"../api/operations/queries/classrooms\";\nimport {ISODateString} from \"../helpers/helpers\";\nimport {ClassroomType, InstrumentType, User} from \"../models/models\";\nimport {gql, useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../api/operations/queries/users\";\nimport {GET_INSTRUMENTS} from \"../api/operations/queries/instruments\";\n\nconst useInstruments = (updateList: boolean): Array<InstrumentType> => {\n  const [instruments, setInstruments] = useState<InstrumentType[]>([]);\n\n  useEffect(() => {\n    client.query({query: GET_INSTRUMENTS, variables: {\n      where: {\n      }\n      },\n      fetchPolicy: 'network-only'\n    }).then((data) => {\n        setInstruments(data.data.instruments\n          .slice().sort((a: InstrumentType, b: InstrumentType) => a.id - b.id));\n      });\n  }, [updateList]);\n\n  return instruments;\n};\n\nexport default useInstruments;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/instruments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createInstrument.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteInstrument.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateInstrument.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDepartments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useFaculties.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/faculties.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDepartment.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDepartment.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDepartment.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteFaculty.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createFaculty.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateFaculty.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDegrees.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDegree.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDegree.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDegree.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/degrees.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useClassrooms.tsx",["478"],"import {useEffect, useState} from \"react\";\nimport {client} from \"../api/client\";\nimport {GET_CLASSROOMS} from \"../api/operations/queries/classrooms\";\nimport {ISODateString} from \"../helpers/helpers\";\nimport {ClassroomType} from \"../models/models\";\nimport {gql, useQuery} from \"@apollo/client\";\n\nconst useClassrooms = (props?: any): Array<ClassroomType> => {\n  const [classrooms, setClassrooms] = useState<ClassroomType[]>([]);\n  const { data } = useQuery(gql`\n    query gridUpdate {\n      gridUpdate @client\n    }\n  `);\n\n  useEffect(() => {\n    client\n      .query({\n        query: GET_CLASSROOMS,\n        variables: { date: ISODateString(props?.date ? props.date : new Date()) },\n        fetchPolicy: 'network-only'\n      })\n      .then((data) => {\n        setClassrooms(\n          data.data.classrooms\n            .slice()\n            .sort(\n              (a: ClassroomType, b: ClassroomType) =>\n                parseInt(a.name) - parseInt(b.name)\n            )\n        );\n      });\n  }, [data.gridUpdate]);\n\n  return classrooms;\n};\n\nexport default useClassrooms;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/loader/Loader.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/AdminClassrooms.tsx",["479"],"import React, {useEffect, useState} from 'react';\nimport Header from '../../../components/header/Header';\nimport styles from './adminClassrooms.module.css';\nimport {ClassroomType} from \"../../../models/models\";\nimport useClassrooms from \"../../../hooks/useClassrooms\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport CreateClassroomPopupBody from \"./createClassroomPopupBody/CreateClassroomPopupBody\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {DELETE_CLASSROOM} from \"../../../api/operations/mutations/deleteClassroom\";\nimport Add from \"../../../components/icons/add/Add\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport Button from \"../../../components/button/Button\";\nimport BrowseClassroomPopupBody from \"./browseClassroomPopupBody/BrowseClassroomPopupBody\";\n\nconst listHeader = ['ID', 'Назва', 'Кафедра', 'Спец.', 'Оп. студія', 'Флігель'];\n\nconst AdminClassrooms = () => {\n  const classrooms: ClassroomType[] = useClassrooms();\n  const [listData, setListData] = useState<any>([]);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [deleteClassroom] = useMutation(DELETE_CLASSROOM);\n  const dataItem = (item: ClassroomType) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span className={styles.centerText}>{item.name}</span>\n    <span>{item.chair?.name}</span>\n    <span className={styles.centerText}>{item.special ? 'Так' : 'Ні'}</span>\n    <span className={styles.centerText}>{item.isOperaStudio ? 'Так' : 'Ні'}</span>\n    <span className={styles.centerText}>{item.isWing ? 'Так' : 'Ні'}</span>\n    <Edit dark onClick={() => handleCreate(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = classrooms.map(item => dataItem(item));\n\n    setListData(data);\n  }, [classrooms]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n        <p>{e.extraInfo}</p>\n        <pre>{e.stack}</pre>\n      </>,\n      footer: ''\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити аудиторію?');\n\n    if (confirm) {\n      try {\n        await deleteClassroom({variables: {where: {id}}});\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Аудиторію видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleCreate = (item: ClassroomType | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування аудиторії' : 'Створити аудиторію'}</h1>,\n      //@ts-ignore\n      body: <CreateClassroomPopupBody dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createClassroom'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleItemClick = (id: number) => {\n    const classroom = classrooms?.find(item => item.id === id);\n\n    dispatchPopupWindow({\n      header: <h1>{`Аудиторія ${classroom?.name}`}</h1>,\n      body: <BrowseClassroomPopupBody classroom={classroom as ClassroomType}/>,\n      footer: ''\n    });\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Редагування аудиторій</h1>\n        <Add onClick={() => handleCreate()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} handleItemClick={handleItemClick}\n                gridTemplateColumns={'40px 40px 1fr 100px 80px 80px 40px 40px'}/>\n    </div>\n  );\n}\n\nexport default AdminClassrooms;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/AdminUsers.tsx",["480","481","482","483","484","485"],"import React, {useEffect, useState} from 'react';\nimport Header from '../../../components/header/Header';\nimport styles from './adminUsers.module.css';\nimport {User, UserTypes, UserTypesUa} from \"../../../models/models\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {fullName} from \"../../../helpers/helpers\";\nimport mainStyles from \"../../../styles/main.module.css\";\nimport Select from \"react-select\";\nimport {CategoryType, selectStyles} from \"../../../styles/selectStyles\";\nimport {useHistory} from \"react-router-dom\";\nimport UserProfile from \"../../../components/userProfile/UserProfile\";\nimport Add from \"../../../components/icons/add/Add\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport BrowseUserPopupBody from \"./browseUserPopupBody/BrowseUserPopupBody\";\nimport Button from \"../../../components/button/Button\";\n\nconst categories: CategoryType[] = [\n  {\n    value: 'ALL',\n    label: 'Всі',\n  },\n  {\n    value: UserTypes.TEACHER,\n    label: 'Викладачі'\n  },\n  {\n    value: UserTypes.STUDENT,\n    label: 'Студенти'\n  },\n  {\n    value: UserTypes.POST_GRADUATE,\n    label: 'Аистенти/Аспіранти'\n  },\n  {\n    value: UserTypes.CONCERTMASTER,\n    label: 'Концертмейстери'\n  },\n  {\n    value: UserTypes.ILLUSTRATOR,\n    label: 'Іллюстратори'\n  }\n];\n\nconst listHeader = ['ID', 'П.І.Б.', '', 'Статус']\n\nconst AdminUsers = () => {\n  const {data, loading, error} = useQuery(GET_USERS);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [searchValue, setSearchValue] = useState('');\n  const [filteredUsers, setFilteredUsers] = useState<User[]>([]);\n  const history = useHistory();\n  const [listData, setListData] = useState<any[]>([]);\n  const user = (item: User) => <>\n    <span className={styles.alignText}>{item.id}</span>\n    <span>{fullName(item)}</span>\n    <span>{item.verified ? '' : <Button color='red'>Верифікувати</Button>}</span>\n    <span className={styles.alignText}>{UserTypesUa[item.type as UserTypes]}</span>\n    <Edit dark onClick={() => handleAdd()}/>\n    <Delete onClick={() => handleDelete()}/>\n  </>;\n\n  const handleDelete = () => {\n\n  };\n\n  const handleAdd = () => {\n\n  };\n\n  const handleCreate = () => {\n    dispatchPopupWindow({\n      header: <h1>Створити нового користувача</h1>,\n      //@ts-ignore\n      body: 'test',\n      footer: ''\n    });\n  };\n\n  useEffect(() => {\n    setFilteredUsers(data?.users)\n  }, [data]);\n\n  useEffect(() => {\n    setListData(filteredUsers?.map(item => user(item)));\n  }, [filteredUsers]);\n\n  const handleClick = (user: User) => {\n    dispatchPopupWindow({\n      header: <h1>{fullName(user)}</h1>,\n      body: <UserProfile userId={user.id as number}/>,\n    });\n  };\n\n  const handleSearch = (e: any) => {\n    setSearchValue(e.target.value);\n    if (e.target.value) {\n      const filter = data.users\n        .filter((user: User) => (fullName(user).toLowerCase() + user.id).includes(e.target.value.toLowerCase()));\n\n      setFilteredUsers(filter);\n    } else {\n      setFilteredUsers(data.users);\n    }\n  };\n\n  const handleSelectCategory = (e: any) => {\n    const filter = data.users.filter((user: User) => user.type === e.value);\n    if (e.value !== 'ALL') {\n      setFilteredUsers(filter);\n    } else {\n      setFilteredUsers(data.users);\n    }\n  }\n\n  const handleItemClick = (id: number) => {\n    const user = data.users?.find((item: User) => item.id === id);\n\n    dispatchPopupWindow({\n      header: <h1>{fullName(user)}</h1>,\n      body: <BrowseUserPopupBody user={user}/>,\n      footer: ''\n    });\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління користувачами</h1>\n        <input\n          type=\"text\"\n          value={searchValue}\n          onChange={handleSearch}\n          placeholder=\"Пошук за П.І.Б або ID\"\n          className={mainStyles.headerInput}\n        />\n        <Select\n          options={categories}\n          defaultValue={categories[0]}\n          onChange={handleSelectCategory}\n          styles={selectStyles}/>\n        <Add onClick={handleCreate}/>\n      </Header>\n        <DataList header={listHeader} data={listData} handleItemClick={handleItemClick}\n                  gridTemplateColumns='40px 1fr 100px 200px 40px 40px'/>\n    </div>\n  );\n}\n\nexport default AdminUsers;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/AdminFaculties.tsx",["486"],"import React, {useEffect, useState} from 'react';\nimport Header from \"../../../components/header/Header\";\nimport Add from \"../../../components/icons/add/Add\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {Faculty} from \"../../../models/models\";\nimport styles from \"../departments/adminDepartments.module.css\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport useFaculties from \"../../../hooks/useFaculties\";\nimport Button from \"../../../components/button/Button\";\nimport CreateFacultyPopupBody from \"./createFacultyPopupBody/CreateFacultyPopupBody\";\nimport {DELETE_FACULTY} from \"../../../api/operations/mutations/deleteFaculty\";\n\nconst listHeader = ['ID', 'Назва'];\n\nconst AdminFaculties = () => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [updateList, setUpdateList] = useState(false);\n  const faculties = useFaculties(updateList);\n  const [deleteFaculty] = useMutation(DELETE_FACULTY);\n  const dispatchNotification = useNotification();\n  const [listData, setListData] = useState<any>([]);\n  const dataItem = (item: Faculty) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span>{item.name}</span>\n    <Edit dark onClick={() => handleAdd(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = faculties.map(item => dataItem(item));\n\n    setListData(data);\n  }, [faculties]);\n\n  const handleAdd = (item: Faculty | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування факультету' : 'Створити факультет'}</h1>,\n      body: <CreateFacultyPopupBody setUpdateList={setUpdateList}\n                                       dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createFaculty'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити факультет?');\n\n    if (confirm) {\n      try {\n        await deleteFaculty({variables: {where: {id}}});\n        setUpdateList(prevState => !prevState);\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Факультет видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління факультетами</h1>\n        <Add onClick={() => handleAdd()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'40px 1fr 40px 40px'}/>\n    </div>\n  );\n};\n\nexport default AdminFaculties;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/AdminDegrees.tsx",["487"],"import React, {useEffect, useState} from 'react';\nimport Header from \"../../../components/header/Header\";\nimport Add from \"../../../components/icons/add/Add\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {Degree} from \"../../../models/models\";\nimport styles from \"../departments/adminDepartments.module.css\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport Button from \"../../../components/button/Button\";\nimport CreateDegreePopupBody from \"./createDegreePopupBody/CreateDegreePopupBody\";\nimport useDegrees from \"../../../hooks/useDegrees\";\nimport {DELETE_DEGREE} from \"../../../api/operations/mutations/deleteDegree\";\n\nconst listHeader = ['ID', 'Назва'];\n\nconst AdminDegrees = () => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [updateList, setUpdateList] = useState(false);\n  const degrees = useDegrees(updateList);\n  const [deleteFaculty] = useMutation(DELETE_DEGREE);\n  const dispatchNotification = useNotification();\n  const [listData, setListData] = useState<any>([]);\n  const dataItem = (item: Degree) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span>{item.name}</span>\n    <Edit dark onClick={() => handleAdd(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = degrees.map(item => dataItem(item));\n\n    setListData(data);\n  }, [degrees]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n        <p>{e.extraInfo}</p>\n        <pre>{e.stack}</pre>\n      </>,\n      footer: ''\n    });\n  };\n\n  const handleAdd = (item: Degree | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування учбового ступеню' : 'Створити учбовий ступінь'}</h1>,\n      body: <CreateDegreePopupBody setUpdateList={setUpdateList} handleErrorDetails={handleErrorDetails}\n                                       dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createDegree'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити учбовий ступінь?');\n\n    if (confirm) {\n      try {\n        await deleteFaculty({variables: {where: {id}}});\n        setUpdateList(prevState => !prevState);\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Учбовий ступінь видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління учбовими ступенями</h1>\n        <Add onClick={() => handleAdd()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'40px 1fr 40px 40px'}/>\n    </div>\n  );\n};\n\nexport default AdminDegrees;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/AdminDepartments.tsx",["488"],"import React, {useEffect, useState} from 'react';\nimport Header from \"../../../components/header/Header\";\nimport Add from \"../../../components/icons/add/Add\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport CreateDepartmentPopupBody from \"./createDepartmentPopupBody/CreateDepartmentPopupBody\";\nimport Button from \"../../../components/button/Button\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport useDepartments from \"../../../hooks/useDepartments\";\nimport {Department} from \"../../../models/models\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport styles from './adminDepartments.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {DELETE_DEPARTMENT} from \"../../../api/operations/mutations/deleteDepartment\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\n\nconst listHeader = ['ID', 'Назва'];\n\nconst AdminDepartments = () => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [updateList, setUpdateList] = useState(false);\n  const departments = useDepartments(updateList);\n  const [deleteDepartment] = useMutation(DELETE_DEPARTMENT);\n  const dispatchNotification = useNotification();\n  const [listData, setListData] = useState<any>([]);\n  const dataItem = (item: Department) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span>{item.name}</span>\n    <Edit dark onClick={() => handleAdd(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = departments.map(item => dataItem(item));\n    setListData(data);\n  }, [departments]);\n\n  const handleAdd = (item: Department | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування кафедри' : 'Створити кафедру'}</h1>,\n      body: <CreateDepartmentPopupBody setUpdateList={setUpdateList}\n              dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createDepartment'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити кафедру?');\n\n    if (confirm) {\n      try {\n        await deleteDepartment({variables: {where: {id}}});\n        setUpdateList(prevState => !prevState);\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Кафедру видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління кафедрами</h1>\n        <Add onClick={() => handleAdd()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'40px 1fr 40px 40px'}/>\n    </div>\n  );\n}\n\nexport default AdminDepartments;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/admin/Admin.tsx",["489","490","491","492","493","494"],"import React, {useEffect, useState} from \"react\";\nimport styles from \"./admin.module.css\";\nimport mainStyles from '../../../styles/main.module.css';\nimport Header from \"../../../components/header/Header\";\nimport { NavLink } from \"react-router-dom\";\nimport Button from \"../../../components/button/Button\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {User} from \"../../../models/models\";\nimport CountUp from \"react-countup\";\nimport {conjugate} from \"../../../helpers/conjugate\";\n\nconst Admin = () => {\n  const serverURL = localStorage.getItem('serverURL');\n  const [value, setValue] = useState('');\n  const {data, loading, error} = useQuery(GET_USERS);\n  const [unverifiedCounter, setUnverifiedCounter] = useState(0);\n\n  useEffect(() => {\n    setUnverifiedCounter(0);\n    if (data) {\n      data.users.forEach((user: User) => {\n        !user.verified && setUnverifiedCounter(prevState => prevState+1);\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (serverURL) {\n      setValue(serverURL);\n    } else {\n      setValue('http://3.141.103.67:4000/');\n      localStorage.setItem('serverURL', value);\n    }\n  }, [serverURL]);\n\n  const handleChange = (e: any) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    localStorage.setItem('serverURL', value);\n  };\n\n  const [inputValue, setInputValue] = useState('')\n  const [conjugated, setConjugated] = useState('');\n  const handleChangeInputValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(e.target.value);\n  }\n\n  const handleConjugate = () => {\n    setConjugated(conjugate(inputValue) as string);\n  }\n\n  return (\n    <div>\n      <Header><h1>Налаштування</h1></Header>\n      {/*<input type=\"text\" value={inputValue} onChange={handleChangeInputValue}/>*/}\n      {/*<button onClick={handleConjugate}>Conjugate</button>*/}\n      {/*<h1>{conjugated}</h1>*/}\n      <ul className={styles.list}>\n        <li><NavLink to='/adminClassrooms'>Аудиторії</NavLink></li>\n        <li><NavLink to='/adminUsers'>Користувачі\n          {unverifiedCounter !== 0 && <span className={styles.unverified} title=\"Неверифіковані\">\n            <CountUp end={unverifiedCounter} duration={1}/></span>}\n        </NavLink></li>\n        <li><NavLink to='/adminInstruments'>Інструменти</NavLink></li>\n        <li><NavLink to='/adminDepartments'>Кафедри</NavLink></li>\n        <li><NavLink to='/adminFaculties'>Факультети</NavLink></li>\n        <li><NavLink to='/adminDegrees'>Навчальні ступені</NavLink></li>\n        <li><NavLink to='/adminSchedule'>Розклад</NavLink></li>\n      </ul>\n      <div className={styles.settings}>\n      <label className={styles.serverURL}>\n        Server URL:\n        <input type=\"text\" className={mainStyles.input} value={value as string} onChange={handleChange}/>\n      </label>\n      <Button onClick={handleSubmit}>Змінити</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/AdminInstruments.tsx",["495","496","497"],"import React, {useEffect, useState} from 'react';\nimport useInstruments from \"../../../hooks/useInstruments\";\nimport Header from \"../../../components/header/Header\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport styles from './adminInstruments.module.css';\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport Add from \"../../../components/icons/add/Add\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport CreateInstrumentPopupBody from \"./createInstrumentPopupBody/CreateInstrumentPopupBody\";\nimport Button from \"../../../components/button/Button\";\nimport {useMutation} from \"@apollo/client\";\nimport {DELETE_INSTRUMENT} from \"../../../api/operations/mutations/deleteInstrument\";\nimport {ClassroomType, InstrumentType} from \"../../../models/models\";\nimport BrowseClassroomPopupBody from \"../classrooms/browseClassroomPopupBody/BrowseClassroomPopupBody\";\nimport BrowseInstrumentPopupBody from \"./browseInstrumentPopupBody/BrowseInstrumentPopupBody\";\n\nconst dataHeader = ['ID', 'Назва', 'Рейтинг', 'Ауд.', 'Інв. номер'];\n\nconst AdminInstruments = () => {\n  const [updateList, setUpdateList] = useState(false);\n  const instruments = useInstruments(updateList);\n  const [listData, setListData] = useState<Array<any>>([]);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [deleteInstrument] = useMutation(DELETE_INSTRUMENT);\n  const instrument = (item: InstrumentType) => <>\n    <span className={styles.alignText}>{item.id}</span>\n    <span>{item.name}</span>\n    <span className={styles.alignText}>{item.rate}</span>\n    <span className={styles.alignText}>{item.classroom?.name}</span>\n    <span className={styles.alignText}>{item.persNumber}</span>\n    <Edit dark onClick={() => handleAdd(item, true)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    setListData(instruments?.map((item) => instrument(item)));\n  }, [instruments]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n      </>,\n      footer: ''\n    })\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити інструмент?');\n\n    if (confirm) {\n      try {\n        await deleteInstrument({variables: {where: {id}}});\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Інструмент видалено.`,\n          type: \"ok\",\n        });\n        setUpdateList(prevState => !prevState);\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleUpdate = () => {\n    setUpdateList(prevState => !prevState);\n  };\n\n  const handleAdd = (item: InstrumentType | null = null, isEditMode = false) => {\n    dispatchPopupWindow({\n      header: <h1>{isEditMode ? 'Редагувати інструмент' : 'Створити інструмент'}</h1>,\n      body: <CreateInstrumentPopupBody dispatchNotification={dispatchNotification} onUpdate={handleUpdate}\n          addInstrument={addInstrument} instrument={item} isEditMode={isEditMode}\n          handleErrorDetails={handleErrorDetails}\n      />,\n      footer: <Button type='submit' form='createInstrument'>\n        {isEditMode ? 'Зберегти зміни' : 'Створити'}\n      </Button>,\n    });\n  };\n\n  const handleItemClick = (id: number) => {\n    const instrument = instruments?.find(item => item.id === id);\n    dispatchPopupWindow({\n      header: <h1>{instrument?.name}</h1>,\n      body: <BrowseInstrumentPopupBody instrument={instrument as InstrumentType}/>,\n      footer: ''\n    });\n  };\n\n  const addInstrument = (item: InstrumentType) => {\n    setListData(prevState => [...prevState, instrument(item)]);\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління інструментами</h1>\n        <Add onClick={handleAdd}/>\n      </Header>\n      <DataList header={dataHeader} data={listData}\n                gridTemplateColumns={'40px 250px 100px 100px 1fr 30px 30px'}\n                handleItemClick={handleItemClick}\n      />\n    </div>\n  );\n}\n\nexport default AdminInstruments;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/createClassroomPopupBody/CreateClassroomPopupBody.tsx",["498","499","500"],"import React, {useEffect, useState, Fragment} from 'react';\nimport styles from './createClassroomPopupBody.module.css';\nimport Select, {components} from \"react-select\";\nimport {useMutation} from \"@apollo/client\";\nimport {ClassroomType, Department, InstrumentType} from \"../../../../models/models\";\nimport {useForm} from \"react-hook-form\";\nimport {CREATE_CLASSROOM} from \"../../../../api/operations/mutations/createClassroom\";\nimport {GET_CLASSROOMS} from \"../../../../api/operations/queries/classrooms\";\nimport {client, gridUpdate} from \"../../../../api/client\";\nimport {ISODateString} from \"../../../../helpers/helpers\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport useInstruments from \"../../../../hooks/useInstruments\";\nimport mainStyles from \"../../../../styles/main.module.css\";\nimport useDepartments from \"../../../../hooks/useDepartments\";\nimport addIcon from '../../../../assets/images/addLined.svg';\n\ninterface PropTypes {\n  dispatch: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  item?: ClassroomType;\n}\n\nconst CreateClassroomPopupBody: React.FC<PropTypes> = ({item, ...props}) => {\n  const departmentsData = useDepartments(true);\n  const instrumentsData = useInstruments(true);\n  const [createClassroom] = useMutation(CREATE_CLASSROOM);\n  const [departments, setDepartments] = useState<any>([]);\n  const [selectedDepartment, setSelectedDepartment] = useState<any>();\n  const [instruments, setInstruments] = useState<any>([]);\n  const [selectedInstruments, setSelectedInstruments] = useState<any>([]);\n  const [freeInstrumentsOnly, setFreeInstrumentsOnly] = useState(true);\n  const {register, handleSubmit, setValue, watch, formState: {errors}} = useForm();\n\n  useEffect(() => {\n    setDepartments(departmentsData.map((dep: Department) => ({value: dep.id, label: dep.name})));\n    if (item && item.chair) {\n      setSelectedDepartment({value: item.chair.id, label: item.chair.name});\n    }\n  }, [departmentsData]);\n\n  useEffect(() => {\n    if (freeInstrumentsOnly && instrumentsData) {\n      const filteredInstruments = instrumentsData.filter(item => !item.classroom);\n\n      setMappedInstruments(filteredInstruments);\n    } else {\n      setMappedInstruments(instrumentsData);\n    }\n  }, [freeInstrumentsOnly, instrumentsData]);\n\n  useEffect(() => {\n    if (item && item.instruments) {\n      const itemInstruments = item.instruments\n        .map(({id, name, type, persNumber}) => ({\n          value: id, label: name + ', ' + type + (persNumber ? ' - ' + persNumber :  '')\n        }));\n      setSelectedInstruments(itemInstruments);\n    }\n  }, [])\n\n  const setMappedInstruments = (data: InstrumentType[]) => {\n    setInstruments(data.map((item) => ({\n      value: item.id, label: item.name + ', ' + item.type + ' - ' + item.persNumber\n    })));\n  };\n\n  const onSubmit = async (data: any) => {\n    await createClassroom({\n      variables: {\n        data: {\n          name: data.name,\n          special: data.special ? 'PIANO' : undefined,\n          floor: Number(data.floor),\n          isWing: data.isWing,\n          isOperaStudio: data.isOperaStudio,\n          description: data.description,\n          chair: selectedDepartment ? {connect: {id: selectedDepartment.value}} : undefined,\n          instruments: selectedInstruments.length > 0\n            ? {connect: selectedInstruments.map((item: any) => ({id: item.value}))} : undefined,\n          orderIndex: 0,\n        }\n      }\n    });\n    await client.query({\n      query: GET_CLASSROOMS,\n      variables: {date: ISODateString(new Date())},\n      fetchPolicy: 'network-only',\n    });\n    gridUpdate(!gridUpdate());\n    props.dispatch({\n      type: \"POP_POPUP_WINDOW\",\n    });\n    props.dispatchNotification({\n      header: \"Успішно!\",\n      message: `Аудиторія ${data.name}  створена.`,\n      type: \"ok\",\n    });\n  };\n\n  const handleSelectDepartment = (e: any) => {\n    setSelectedDepartment(e);\n  };\n\n  const handleSelectInstrument = (e: any) => {\n    setSelectedInstruments([...e]);\n  };\n\n  const handleFreeInstruments = () => {\n    setFreeInstrumentsOnly(prevState => !prevState);\n  };\n\n  const DropdownIndicator = () => {\n    return <img src={addIcon} alt=\"Додати\" className={styles.addInstrumentIcon}/>\n  };\n\n  const MenuList = (props: any) => {\n    return (\n      <Fragment>\n        <div>\n          <span className={styles.instrumentsCheckbox}>\n          <input type=\"checkbox\" checked={freeInstrumentsOnly} onChange={handleFreeInstruments}/>\n          Вибирати серед інструментів без аудиторій\n        </span>\n        </div>\n        <components.MenuList {...props}>{props.children}</components.MenuList>\n      </Fragment>\n    );\n  };\n\n  return <div className={styles.wrapper}>\n    <form className={styles.container} onSubmit={handleSubmit(onSubmit)} id='createClassroom'>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>Назва\n        <input\n          placeholder=\"Не більше 5 символів\"\n          maxLength={5}\n          defaultValue={item ? item.name : undefined}\n          {...register(\"name\", {required: true})}\n        />\n      </label>\n      <label>Опис\n        <TextArea\n          showCount\n          maxLength={100}\n          onChange={(e) => setValue('description', e.target.value)}\n          placeholder=\"Не більше 100 символів\"\n          defaultValue={item ? item.description as string : undefined}\n        />\n      </label>\n      {departmentsData &&\n      <label>Кафедра\n          <Select\n              value={selectedDepartment}\n              onChange={handleSelectDepartment}\n              options={departments}\n            //@ts-ignore\n              styles={selectLightStyles}\n              menuPortalTarget={document.body}\n              isClearable\n              isSearchable\n              placeholder='Виберіть кафедру'\n              noOptionsMessage={() => 'Кафедри відсутні'}\n          />\n      </label>}\n      <label>Спеціалізована\n        <input {...register(\"special\")} type=\"checkbox\"\n               defaultChecked={item ? Boolean(item.special) : false}/>\n      </label>\n      <label>Флігель\n        <input {...register(\"isWing\")} type=\"checkbox\"\n               defaultChecked={item ? item.isWing : false}/>\n      </label>\n      <label>Оперна студія\n        <input {...register(\"isOperaStudio\")} type=\"checkbox\"\n               defaultChecked={item ? item.isOperaStudio : false}/>\n      </label>\n      <label>Поверх\n        <input {...register(\"floor\")} type=\"number\" min={1} max={4}\n               defaultValue={item ? item.floor as number : 1}/>\n      </label>\n      <label>Інструменти\n        <Select options={instruments}\n          //@ts-ignore\n                styles={selectLightStyles}\n                menuPortalTarget={document.body}\n                value={selectedInstruments}\n                onChange={handleSelectInstrument}\n                components={{DropdownIndicator, MenuList}}\n                isSearchable\n                isClearable={false}\n                isMulti\n                placeholder='Додати інструмент'\n                noOptionsMessage={() => 'Інструменти відсутні'}\n        />\n      </label>\n    </form>\n  </div>\n};\n\nexport default CreateClassroomPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/browseClassroomPopupBody/BrowseClassroomPopupBody.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/createFacultyPopupBody/CreateFacultyPopupBody.tsx",["501"],"import React from 'react';\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {useForm} from \"react-hook-form\";\nimport {FormData} from \"../../instruments/models\";\nimport {Faculty} from \"../../../../models/models\";\nimport {CREATE_FACULTY} from \"../../../../api/operations/mutations/createFaculty\";\nimport {UPDATE_FACULTY} from \"../../../../api/operations/mutations/updateFaculty\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Faculty | null\n}\n\nconst CreateFacultyPopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n                                                          item}) => {\n  const [createFaculty] = useMutation(CREATE_FACULTY);\n  const [updateFaculty] = useMutation(UPDATE_FACULTY);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateFaculty({\n          variables: {\n            data: {\n              name: {set: e.name},\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createFaculty({\n          variables: {\n            data: {\n              name: e.name,\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Факультет створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <form id='createFaculty' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n    </form>\n  );\n}\n\nexport default CreateFacultyPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/createDegreePopupBody/CreateDegreePopupBody.tsx",["502"],"import React from 'react';\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {useForm} from \"react-hook-form\";\nimport {Degree} from \"../../../../models/models\";\nimport {CREATE_DEGREE} from \"../../../../api/operations/mutations/createDegree\";\nimport {UPDATE_DEGREE} from \"../../../../api/operations/mutations/updateDegree\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Degree | null;\n  handleErrorDetails?: (error: any) => void;\n}\n\nconst CreateDegreePopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n    handleErrorDetails, item}) => {\n  const [createDegree] = useMutation(CREATE_DEGREE);\n  const [updateDegree] = useMutation(UPDATE_DEGREE);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<any>();\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateDegree({\n          variables: {\n            data: {\n              name: {set: e.name},\n              startMonth: {set: Number(e.startMonth)},\n              startDay: {set: Number(e.startDay)},\n              durationMonths: {set: Number(e.durationMonths)},\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createDegree({\n          variables: {\n            data: {\n              name: e.name,\n              startMonth: Number(e.startMonth),\n              startDay: Number(e.startDay),\n              durationMonths: Number(e.durationMonths),\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Учбовий ступінь створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <form id='createDegree' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Місяць початку\n        <input className={mainStyles.input} type=\"number\" min={1} max={12}\n               defaultValue={item ? item?.startMonth : 9}\n               {...register(\"startMonth\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        День початку\n        <input className={mainStyles.input} type=\"number\" min={1} max={31}\n               defaultValue={item ? item?.startDay : 1}\n               {...register(\"startDay\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Триваліть (міс.)\n        <input className={mainStyles.input} type=\"number\" min={1}\n               defaultValue={item ? item?.durationMonths : 12}\n               {...register(\"durationMonths\", {required: true})}/>\n      </label>\n    </form>\n  );\n}\n\nexport default CreateDegreePopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/browseUserPopupBody/BrowseUserPopupBody.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/createDepartmentPopupBody/CreateDepartmentPopupBody.tsx",["503","504"],"import React, {useEffect, useState} from 'react';\nimport Select from \"react-select\";\nimport useFaculties from \"../../../../hooks/useFaculties\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {CREATE_DEPARTMENT} from \"../../../../api/operations/mutations/createDepartment\";\nimport {useForm} from \"react-hook-form\";\nimport {FormData} from \"../../instruments/models\";\nimport {UPDATE_DEPARTMENT} from \"../../../../api/operations/mutations/updateDepartment\";\nimport {Department, Faculty} from \"../../../../models/models\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Department | null\n}\n\nconst CreateDepartmentPopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n        item}) => {\n  const faculties = useFaculties();\n  const [createDepartment] = useMutation(CREATE_DEPARTMENT);\n  const [updateDepartment] = useMutation(UPDATE_DEPARTMENT);\n  const [selectValue, setSelectValue] = useState({value: -1, label: ''});\n  const [options, setOptions] = useState<any>(selectValue);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n\n  useEffect(() => {\n    const data = faculties.map(item => ({value: item.id, label: item.name}));\n    if (item) {\n      const faculty: Faculty | undefined = faculties.find(f => f.id === item?.faculty.id);\n\n      setSelectValue({value: faculty?.id as number, label: faculty?.name as string});\n    } else {\n      setSelectValue(data[0]);\n    }\n    setOptions(data);\n  }, [faculties]);\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateDepartment({\n          variables: {\n            data: {\n              name: {set: e.name},\n              faculty: item ? {connect: {id: selectValue.value}} : undefined\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createDepartment({\n          variables: {\n            data: {\n              name: e.name,\n              faculty: {\n                connect: {id: selectValue.value}\n              }\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Кафедру створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleSelect = (e: any) => {\n    setSelectValue(e);\n  };\n\n  return (\n    <form id='createDepartment' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n      <label>\n        Факультет\n        {/*@ts-ignore*/}\n        <Select options={options} styles={selectLightStyles} menuPortalTarget={document.body}\n                placeholder='Виберіть факультет' defaultValue={selectValue} value={selectValue}\n                onChange={handleSelect}\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default CreateDepartmentPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/createInstrumentPopupBody/CreateInstrumentPopupBody.tsx",["505","506"],"import React, {useEffect, useState} from 'react';\nimport {useMutation} from \"@apollo/client\";\nimport {CREATE_INSTRUMENT} from \"../../../../api/operations/mutations/createInstrument\";\nimport {UPDATE_INSTRUMENT} from \"../../../../api/operations/mutations/updateInstrument\";\nimport {useForm} from \"react-hook-form\";\nimport styles from './createInstrumentPopupBody.module.css';\nimport mainStyles from '../../../../styles/main.module.css';\nimport useClassrooms from \"../../../../hooks/useClassrooms\";\nimport {FormData} from '../models';\nimport {SelectData} from '../models';\nimport Select from \"react-select\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport {InstrumentType} from \"../../../../models/models\";\n\ninterface PropTypes {\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  handleErrorDetails?: (error: any) => void;\n  onUpdate: () => void;\n  addInstrument: (item: InstrumentType) => void;\n  instrument: InstrumentType | null;\n  isEditMode: boolean;\n}\n\nconst CreateInstrumentPopupBody: React.FC<PropTypes> = ({dispatchNotification, isEditMode,\n  dispatch, addInstrument, instrument, onUpdate,\n  handleErrorDetails}) => {\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n  const classrooms = useClassrooms();\n  const [classroomsData, setClassroomsData] = useState<SelectData[]>([{\n    value: instrument?.classroom ? String(instrument?.classroom?.id) : '',\n    label: instrument?.classroom ? String(instrument?.classroom?.name) : ''\n  }]);\n  const [createInstrument] = useMutation(CREATE_INSTRUMENT);\n  const [updateInstrument] = useMutation(UPDATE_INSTRUMENT);\n  const [classroomValue, setClassroomValue] = useState(classroomsData[0]);\n\n  useEffect(() => {\n    const data = classrooms.map(item => ({value: item.id, label: item.name}));\n    const emptyItem = ({value: '', label: 'Немає'});\n    setClassroomsData([emptyItem, ...data as unknown as SelectData[]]);\n  }, [classrooms]);\n\n  useEffect(() => {\n    if (isEditMode) {\n      const item = classroomsData.find(item => Number(item.value) === instrument?.classroom?.id);\n      if (item) setClassroomValue(item as SelectData);\n    } else {\n      setClassroomValue(classroomsData[0]);\n    }\n  }, [classroomsData, instrument]);\n\n  const handleSelect = (e: any) => {\n    setClassroomValue(e);\n  };\n\n  const onSubmit = async (data: FormData) => {\n    const {name, type, persNumber, rate} = data;\n    const classroomId = classroomValue?.value;\n    const classroomName = classroomValue ? classroomValue.label : instrument?.classroom.name;\n\n    try {\n      if (isEditMode) {\n        await updateInstrument({\n          variables: {\n            data: {\n              name: {set: name},\n              type: {set: type},\n              persNumber: {set: persNumber},\n              rate: {set: Number(rate)},\n              classroom: classroomId ? {connect: {id: classroomId}} : undefined\n            },\n            where: {\n              id: Number(instrument?.id)\n            }\n          }\n        });\n        onUpdate();\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані змінені.`,\n          type: \"ok\",\n        });\n      } else {\n        const result = await createInstrument({\n          variables: {\n            data: {\n              name, type, persNumber, rate: Number(rate),\n              classroom: classroomId ? {connect: {id: classroomId}} : undefined\n            }\n          }\n        });\n        onUpdate();\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Інструмент ${name}  створений.`,\n          type: \"ok\",\n        });\n        addInstrument({...result.data.createOneInstrument,\n          classroom: {name: classroomId ? classroomName : ''}});\n      }\n\n      dispatch && dispatch({\n        type: \"POP_POPUP_WINDOW\",\n      });\n    } catch (e) {\n      console.log(e)\n      dispatchNotification({\n        header: \"Помилка!\",\n        message:  <><span>Щось пішло не так.</span><br/>\n          <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n        type: \"alert\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)} className={styles.container} id='createInstrument'>\n        {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>\n          Назва\n          <input className={mainStyles.input} type='text' placeholder='Наприклад: \"Україна\"'\n                 defaultValue={isEditMode ? instrument?.name : undefined}\n                 {...register(\"name\", {required: true})}/>\n        </label>\n        {errors.type && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>\n          Тип\n          <input className={mainStyles.input} type='text' placeholder='Наприклад: \"Фортепіано\"'\n                 defaultValue={isEditMode ? instrument?.type : undefined}\n                 {...register(\"type\", {required: true})}/>\n        </label>\n        {errors.persNumber && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>\n          Інв. номер\n          <input className={mainStyles.input}\n                 type='number' placeholder='Наприклад: \"3242234\"'\n                 defaultValue={isEditMode ? instrument?.persNumber: undefined}\n                 {...register(\"persNumber\", {required: true})}/>\n        </label>\n        <label>\n          Рейтинг\n          <input className={mainStyles.input}\n                 defaultValue={isEditMode && instrument ? instrument.rate : 1}\n                 type='number' min='1' max='10' placeholder='Рейтинг' {...register(\"rate\")}/>\n        </label>\n        <label>\n          Аудиторія\n          <Select options={classroomsData} styles={selectLightStyles} menuPortalTarget={document.body}\n                  placeholder='Аудиторія' value={classroomValue} onChange={handleSelect}/>\n        </label>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateInstrumentPopupBody;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/browseInstrumentPopupBody/BrowseInstrumentPopupBody.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/login/Login.tsx",["507"],"import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./login.module.css\";\r\nimport Logo from \"../../components/logo/Logo\";\r\nimport CustomInput from \"../../components/customInput/CustomInput\";\r\nimport Button from \"../../components/button/Button\";\r\nimport Registration from \"../../components/registration/Registration\";\r\nimport { usePopupWindow } from \"../../components/popupWindow/PopupWindowProvider\";\r\nimport { useNotification } from \"../../components/notification/NotificationProvider\";\r\nimport {useMutation} from \"@apollo/client\";\r\nimport {LOGIN} from \"../../api/operations/mutations/login\";\r\nimport {ErrorCodes, ErrorCodesUa} from \"../../models/models\";\r\nimport {isLoggedVar} from \"../../api/client\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const dispatchNotification = useNotification();\r\n  const dispatchPopupWindow = usePopupWindow();\r\n  const [login] = useMutation(LOGIN);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [loginValue, setLoginValue] = useState('');\r\n  const [passwordValue, setPasswordValue] = useState('');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(loginValue.length && passwordValue.length) {\r\n      setDisabled(false);\r\n    } else {\r\n      setDisabled(true);\r\n    }\r\n  }, [loginValue, passwordValue]);\r\n\r\n  const handleSignup = () => {\r\n    dispatchPopupWindow({\r\n      header: <h1>Реєстрація</h1>,\r\n      body: <Registration />,\r\n      footer: <Button form=\"signupForm\" type='submit'>Реєстрація</Button>\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    let result: any;\r\n\r\n    if (e.target.login.value && e.target.password.value) {\r\n      try {\r\n        result = await login({\r\n          variables: {\r\n            input: {\r\n              email: e.target.login.value,\r\n              password: e.target.password.value\r\n            }\r\n          }\r\n        });\r\n        if (result?.data.login.userErrors?.length) {\r\n          dispatchNotification({\r\n            header: 'Помилка!',\r\n            message: ErrorCodesUa[result?.data.login.userErrors[0].code as ErrorCodes],\r\n            type: 'alert'\r\n          });\r\n        } else {\r\n          const user = result?.data.login.user;\r\n\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          dispatchNotification({\r\n            header: 'Вітаємо!',\r\n            message: 'Авторизація успішна!',\r\n            type: 'ok'\r\n          });\r\n          isLoggedVar(true);\r\n          history.push('/');\r\n        }\r\n      } catch (e) {\r\n        dispatchNotification({\r\n          header: 'Помилка!',\r\n          message: e.message,\r\n          type: 'alert'\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.name === 'login') {\r\n      setLoginValue(e.target.value);\r\n    } else {\r\n      setPasswordValue(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.loginContainer}>\r\n        <Logo\r\n          title=\"Auditorium\"\r\n          description=\"Система управління видачею аудиторій\"\r\n        />\r\n        <div>\r\n          <p className={styles.loginTip}>\r\n            Увійдіть в систему або зареєструйтесь\r\n          </p>\r\n          <form className={styles.loginForm} onSubmit={handleSubmit} id=\"loginForm\">\r\n            <CustomInput\r\n              label=\"E-mail або логін:\"\r\n              name=\"login\"\r\n              id=\"login\"\r\n              placeholder=\"Наприклад: aud1@knmau.ua\"\r\n              value={loginValue}\r\n              onChange={handleChange}\r\n            />\r\n            <CustomInput\r\n              label=\"Пароль:\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              type=\"password\"\r\n              value={passwordValue}\r\n              onChange={handleChange}\r\n            />\r\n            <div className={styles.loginButtons}>\r\n              <Button onClick={handleSignup} color=\"red\">\r\n                Реєстрація\r\n              </Button>\r\n              <Button type={\"submit\"} disabled={disabled} form='loginForm' color=\"blue\">\r\n                Увійти\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <footer className={styles.loginFooter}>\r\n          <a href=\"#\">\r\n            Національна Музична Академія України ім. П. і. Чайковського\r\n          </a>\r\n          <p>\r\n            Auditorium &copy; 2021 | v 1.0.4 Ivan Piatovolenko & Vladislav\r\n            Nazarenko\r\n          </p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/customInput/CustomInput.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/registration/Registration.tsx",["508"],"import React, {useState} from \"react\";\r\nimport styles from \"./registration.module.css\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport eyeIcon from './../../assets/images/eye.svg';\r\nimport {useMutation} from \"@apollo/client\";\r\nimport {SIGN_UP} from \"../../api/operations/mutations/signUp\";\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n\r\nconst schema = yup.object().shape({\r\n  lastName: yup.string().required(),\r\n  firstName: yup.string().required(),\r\n  patronymic: yup.string().required(),\r\n  password: yup.string().required(),\r\n  confirmPassword: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match'),\r\n  email: yup.string().email().required(),\r\n  phoneNumber: yup.string().matches(phoneRegExp, 'Phone number is not valid'),\r\n  type: yup.string().required(),\r\n  department: yup.string().required(),\r\n  degree: yup.string().required(),\r\n  startYear: yup.number().required(),\r\n});\r\n\r\nconst Registration = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const {register, handleSubmit, watch, formState: {errors}} = useForm({\r\n    resolver: yupResolver(schema)\r\n  });\r\n  const [signup] = useMutation(SIGN_UP)\r\n  const Eye = () => <img className={styles.eye} src={eyeIcon} alt=\"show\" onClick={handleShowPassword}\r\n                   style={{opacity: showPassword ? 1 : .2}}/>;\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword(prevState => !prevState);\r\n  };\r\n\r\n  const onSubmit = (e: any) => {\r\n    signup({ variables: {\r\n\r\n      }})\r\n  }\r\n\r\n  return (\r\n    <form className={styles.registration} onSubmit={handleSubmit(onSubmit)} id=\"signupForm\">\r\n      <div className={styles.inputGroup}>\r\n        <label>Прізвище<input\r\n          className={styles.customInput}\r\n          id=\"lastName\"\r\n          {...register(\"lastName\")}\r\n        /></label>\r\n        {errors.lastName && <div className={styles.inputError}><p>{errors.lastName.message}</p></div>}\r\n      </div>\r\n      <div className={styles.inputGroup}>\r\n        <label>Ім'я<input\r\n          className={styles.customInput}\r\n          id=\"firstName\"\r\n          {...register(\"firstName\")}\r\n        /></label>\r\n        {errors.firstName && <div className={styles.inputError}><p>{errors.firstName.message}</p></div>}\r\n      </div>\r\n      <div className={styles.inputGroup}>\r\n        <label>По-батькові<input\r\n          className={styles.customInput}\r\n          id=\"patronymic\"\r\n          {...register(\"patronymic\")}\r\n        /></label>\r\n        {errors.patronymic && <div className={styles.inputError}><p>{errors.patronymic.message}</p></div>}\r\n      </div>\r\n      <div></div>\r\n      <div className={styles.inputGroup}>\r\n        <label>Пароль<input\r\n          type={showPassword ? 'text' : 'password'}\r\n          className={styles.customInput}\r\n          id=\"password\"\r\n          {...register(\"password\")}\r\n        /></label><Eye/>\r\n        {errors.password && <div className={styles.inputError}><p>{errors.password.message}</p></div>}\r\n      </div>\r\n      <div className={styles.inputGroup}>\r\n        <label>Повторіть пароль<input\r\n          type={showPassword ? 'text' : 'password'}\r\n          className={styles.customInput}\r\n          id=\"confirmPassword\"\r\n          {...register(\"confirmPassword\")}\r\n        /></label><Eye/>\r\n        {errors.confirmPassword && <div className={styles.inputError}><p>{errors.confirmPassword.message}</p></div>}\r\n      </div>\r\n      <div className={styles.inputGroup}>\r\n        <label>E-mail<input\r\n          className={styles.customInput}\r\n          id=\"email\"\r\n          {...register(\"email\")}\r\n        /></label>\r\n        {errors.email && <div className={styles.inputError}><p>{errors.email.message}</p></div>}\r\n      </div>\r\n      <div className={styles.inputGroup}>\r\n        <label>Телефон<input\r\n          className={styles.customInput}\r\n          id=\"phoneNumber\"\r\n          {...register(\"phoneNumber\")}\r\n        /></label>\r\n        {errors.phoneNumber && <div className={styles.inputError}><p>{errors.phoneNumber.message}</p></div>}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/login.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useMe.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/mail.js",[],["509","510"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/conjugate.ts",["511"],"import {mailNames} from \"../assets/mail\";\nimport {femaleNames} from \"../assets/femail\";\n\nexport const conjugate = (name: string) => {\n    const lowerName = name.toLowerCase();\n    const mail = mailNames;\n    const female = femaleNames;\n    const vowels = ['а', 'о', 'у', 'и', 'і', 'є', 'е', 'ї', 'я', 'ю'];\n    const hissings = ['щ', 'ж', 'ч'];\n    const GGKH = ['г', 'ґ', 'к', 'х'];\n\n    const isLastYa = name.charAt(name.length-1) === 'я';\n    const isLastA = name.charAt(name.length-1) === 'а';\n    const isLastYe = name.charAt(name.length-1) === 'й';\n    const isLastSoftSign = name.charAt(name.length-1) === 'ь';\n    const isVowelBeforeLast = vowels.includes(lowerName.charAt(lowerName.length-2));\n    const isLastO = name.charAt(name.length-1) === 'о';\n    const isLastGGKH = GGKH.includes(lowerName.charAt(lowerName.length-1));\n    const isApostropheBeforeLast = lowerName.charAt(lowerName.length-2) === \"'\"\n      || lowerName.charAt(lowerName.length-2) === \"`\";\n    let sex = undefined;\n\n    if (mail.find(name => name.toLowerCase() === lowerName)) {\n        sex = 'MAIL';\n    }\n    if (female.find(name => name.toLowerCase() === lowerName)) {\n        sex = 'FEMALE';\n    }\n\n    if (sex === 'MAIL' || sex === 'FEMALE') {\n        if (lowerName === 'олег') return 'Олеже';\n\n        if (isLastYa && (isVowelBeforeLast || isApostropheBeforeLast)) {\n                return name.slice(0, lowerName.length - 2) + 'іє';\n        }\n        if (isLastYa && (!isVowelBeforeLast || !isApostropheBeforeLast)) {\n            return name.slice(0, lowerName.length - 1) + 'е';\n        }\n\n        if (sex === 'MAIL' && isLastGGKH) {\n            return name.slice(0, lowerName.length - 1) + 'у';\n        }\n        if (sex === 'MAIL' && (isLastYe || isLastSoftSign) && (!isVowelBeforeLast && !isApostropheBeforeLast)) {\n            return name.slice(0, lowerName.length - 1) + 'ю';\n        }\n\n        if (sex === 'MAIL' && isLastYe && (isVowelBeforeLast || isApostropheBeforeLast)) {\n            return name.slice(0, lowerName.length - 1) + 'є';\n        }\n\n        if (sex === 'MAIL' && !isLastYe && !isLastGGKH && !isLastYa && !isLastA) {\n            return name + 'e';\n        }\n        if (sex === 'FEMALE' && isLastA) {\n            return name.slice(0, name.length-1) + 'o';\n        }\n        if (sex === 'MAIL' && isLastO) {\n            return name.slice(0, name.length - 1) + 'e';\n        }\n    } else {\n        return name;\n    }\n}","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/femail.js",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signUp.ts",[],{"ruleId":"512","severity":1,"message":"513","line":10,"column":9,"nodeType":"514","messageId":"515","endLine":10,"endColumn":22},{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","replacedBy":"519"},{"ruleId":"512","severity":1,"message":"520","line":1,"column":56,"nodeType":"514","messageId":"515","endLine":1,"endColumn":64},{"ruleId":"512","severity":1,"message":"520","line":1,"column":27,"nodeType":"514","messageId":"515","endLine":1,"endColumn":35},{"ruleId":"521","severity":1,"message":"522","line":59,"column":6,"nodeType":"523","endLine":59,"endColumn":15,"suggestions":"524"},{"ruleId":"521","severity":1,"message":"525","line":63,"column":6,"nodeType":"523","endLine":63,"endColumn":8,"suggestions":"526"},{"ruleId":"512","severity":1,"message":"527","line":1,"column":16,"nodeType":"514","messageId":"515","endLine":1,"endColumn":25},{"ruleId":"512","severity":1,"message":"520","line":1,"column":27,"nodeType":"514","messageId":"515","endLine":1,"endColumn":35},{"ruleId":"512","severity":1,"message":"528","line":15,"column":9,"nodeType":"514","messageId":"515","endLine":15,"endColumn":14},{"ruleId":"512","severity":1,"message":"529","line":7,"column":9,"nodeType":"514","messageId":"515","endLine":7,"endColumn":18},{"ruleId":"512","severity":1,"message":"530","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":16},{"ruleId":"512","severity":1,"message":"531","line":5,"column":9,"nodeType":"514","messageId":"515","endLine":5,"endColumn":13},{"ruleId":"512","severity":1,"message":"532","line":16,"column":20,"nodeType":"514","messageId":"515","endLine":16,"endColumn":31},{"ruleId":"512","severity":1,"message":"530","line":14,"column":8,"nodeType":"514","messageId":"515","endLine":14,"endColumn":16},{"ruleId":"533","severity":1,"message":"534","line":115,"column":38,"nodeType":"535","messageId":"536","endLine":115,"endColumn":40},{"ruleId":"512","severity":1,"message":"527","line":1,"column":16,"nodeType":"514","messageId":"515","endLine":1,"endColumn":25},{"ruleId":"512","severity":1,"message":"527","line":1,"column":16,"nodeType":"514","messageId":"515","endLine":1,"endColumn":25},{"ruleId":"512","severity":1,"message":"527","line":1,"column":16,"nodeType":"514","messageId":"515","endLine":1,"endColumn":25},{"ruleId":"512","severity":1,"message":"537","line":4,"column":21,"nodeType":"514","messageId":"515","endLine":4,"endColumn":43},{"ruleId":"521","severity":1,"message":"538","line":49,"column":6,"nodeType":"523","endLine":49,"endColumn":12,"suggestions":"539"},{"ruleId":"512","severity":1,"message":"531","line":5,"column":3,"nodeType":"514","messageId":"515","endLine":5,"endColumn":7},{"ruleId":"540","severity":1,"message":"541","line":20,"column":5,"nodeType":"542","endLine":30,"endColumn":7},{"ruleId":"540","severity":1,"message":"541","line":12,"column":5,"nodeType":"542","endLine":12,"endColumn":70},{"ruleId":"540","severity":1,"message":"541","line":12,"column":5,"nodeType":"542","endLine":15,"endColumn":9},{"ruleId":"521","severity":1,"message":"543","line":27,"column":6,"nodeType":"523","endLine":27,"endColumn":12,"suggestions":"544"},{"ruleId":"512","severity":1,"message":"545","line":3,"column":9,"nodeType":"514","messageId":"515","endLine":3,"endColumn":23},{"ruleId":"512","severity":1,"message":"546","line":4,"column":9,"nodeType":"514","messageId":"515","endLine":4,"endColumn":22},{"ruleId":"512","severity":1,"message":"547","line":5,"column":9,"nodeType":"514","messageId":"515","endLine":5,"endColumn":22},{"ruleId":"512","severity":1,"message":"548","line":6,"column":9,"nodeType":"514","messageId":"515","endLine":6,"endColumn":12},{"ruleId":"512","severity":1,"message":"549","line":6,"column":14,"nodeType":"514","messageId":"515","endLine":6,"endColumn":22},{"ruleId":"512","severity":1,"message":"545","line":3,"column":9,"nodeType":"514","messageId":"515","endLine":3,"endColumn":23},{"ruleId":"512","severity":1,"message":"546","line":4,"column":9,"nodeType":"514","messageId":"515","endLine":4,"endColumn":22},{"ruleId":"512","severity":1,"message":"547","line":5,"column":9,"nodeType":"514","messageId":"515","endLine":5,"endColumn":22},{"ruleId":"512","severity":1,"message":"531","line":5,"column":40,"nodeType":"514","messageId":"515","endLine":5,"endColumn":44},{"ruleId":"512","severity":1,"message":"548","line":6,"column":9,"nodeType":"514","messageId":"515","endLine":6,"endColumn":12},{"ruleId":"512","severity":1,"message":"549","line":6,"column":14,"nodeType":"514","messageId":"515","endLine":6,"endColumn":22},{"ruleId":"512","severity":1,"message":"550","line":7,"column":9,"nodeType":"514","messageId":"515","endLine":7,"endColumn":18},{"ruleId":"521","severity":1,"message":"551","line":33,"column":6,"nodeType":"523","endLine":33,"endColumn":23,"suggestions":"552"},{"ruleId":"521","severity":1,"message":"553","line":41,"column":6,"nodeType":"523","endLine":41,"endColumn":18,"suggestions":"554"},{"ruleId":"512","severity":1,"message":"555","line":52,"column":16,"nodeType":"514","messageId":"515","endLine":52,"endColumn":23},{"ruleId":"512","severity":1,"message":"556","line":52,"column":25,"nodeType":"514","messageId":"515","endLine":52,"endColumn":30},{"ruleId":"512","severity":1,"message":"557","line":54,"column":9,"nodeType":"514","messageId":"515","endLine":54,"endColumn":29},{"ruleId":"512","severity":1,"message":"558","line":57,"column":9,"nodeType":"514","messageId":"515","endLine":57,"endColumn":16},{"ruleId":"521","severity":1,"message":"559","line":91,"column":6,"nodeType":"523","endLine":91,"endColumn":21,"suggestions":"560"},{"ruleId":"512","severity":1,"message":"561","line":93,"column":9,"nodeType":"514","messageId":"515","endLine":93,"endColumn":20},{"ruleId":"521","severity":1,"message":"553","line":37,"column":6,"nodeType":"523","endLine":37,"endColumn":17,"suggestions":"562"},{"ruleId":"521","severity":1,"message":"553","line":37,"column":6,"nodeType":"523","endLine":37,"endColumn":15,"suggestions":"563"},{"ruleId":"521","severity":1,"message":"553","line":36,"column":6,"nodeType":"523","endLine":36,"endColumn":19,"suggestions":"564"},{"ruleId":"512","severity":1,"message":"555","line":16,"column":16,"nodeType":"514","messageId":"515","endLine":16,"endColumn":23},{"ruleId":"512","severity":1,"message":"556","line":16,"column":25,"nodeType":"514","messageId":"515","endLine":16,"endColumn":30},{"ruleId":"521","severity":1,"message":"565","line":35,"column":6,"nodeType":"523","endLine":35,"endColumn":17,"suggestions":"566"},{"ruleId":"512","severity":1,"message":"567","line":46,"column":10,"nodeType":"514","messageId":"515","endLine":46,"endColumn":20},{"ruleId":"512","severity":1,"message":"568","line":47,"column":9,"nodeType":"514","messageId":"515","endLine":47,"endColumn":31},{"ruleId":"512","severity":1,"message":"569","line":51,"column":9,"nodeType":"514","messageId":"515","endLine":51,"endColumn":24},{"ruleId":"512","severity":1,"message":"547","line":15,"column":9,"nodeType":"514","messageId":"515","endLine":15,"endColumn":22},{"ruleId":"512","severity":1,"message":"570","line":16,"column":8,"nodeType":"514","messageId":"515","endLine":16,"endColumn":32},{"ruleId":"521","severity":1,"message":"571","line":40,"column":6,"nodeType":"523","endLine":40,"endColumn":19,"suggestions":"572"},{"ruleId":"512","severity":1,"message":"573","line":33,"column":44,"nodeType":"514","messageId":"515","endLine":33,"endColumn":49},{"ruleId":"521","severity":1,"message":"574","line":40,"column":6,"nodeType":"523","endLine":40,"endColumn":23,"suggestions":"575"},{"ruleId":"521","severity":1,"message":"574","line":60,"column":6,"nodeType":"523","endLine":60,"endColumn":8,"suggestions":"576"},{"ruleId":"512","severity":1,"message":"573","line":21,"column":34,"nodeType":"514","messageId":"515","endLine":21,"endColumn":39},{"ruleId":"512","severity":1,"message":"573","line":21,"column":34,"nodeType":"514","messageId":"515","endLine":21,"endColumn":39},{"ruleId":"512","severity":1,"message":"573","line":27,"column":34,"nodeType":"514","messageId":"515","endLine":27,"endColumn":39},{"ruleId":"521","severity":1,"message":"574","line":39,"column":6,"nodeType":"523","endLine":39,"endColumn":17,"suggestions":"577"},{"ruleId":"512","severity":1,"message":"573","line":28,"column":34,"nodeType":"514","messageId":"515","endLine":28,"endColumn":39},{"ruleId":"521","severity":1,"message":"578","line":51,"column":6,"nodeType":"523","endLine":51,"endColumn":34,"suggestions":"579"},{"ruleId":"580","severity":1,"message":"581","line":130,"column":11,"nodeType":"542","endLine":130,"endColumn":23},{"ruleId":"512","severity":1,"message":"573","line":28,"column":34,"nodeType":"514","messageId":"515","endLine":28,"endColumn":39},{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","replacedBy":"519"},{"ruleId":"512","severity":1,"message":"582","line":9,"column":11,"nodeType":"514","messageId":"515","endLine":9,"endColumn":19},"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["583"],"no-negated-in-lhs",["584"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCloseNotification'. Either include it or remove the dependency array.","ArrayExpression",["585"],"React Hook useEffect has a missing dependency: 'handleStartTimer'. Either include it or remove the dependency array.",["586"],"'useEffect' is defined but never used.","'style' is assigned a value but never used.","'conjugate' is defined but never used.","'useUsers' is defined but never used.","'User' is defined but never used.","'setEditMode' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'isOccupyButtonDisabled' is defined but never used.","React Hook useEffect has missing dependencies: 'error' and 'loading'. Either include them or remove the dependency array.",["587"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'gridTemplateColumns'. Either include it or remove the dependency array. If 'setColumns' needs the current value of 'gridTemplateColumns', you can also switch to useReducer instead of useState and read 'gridTemplateColumns' in the reducer.",["588"],"'GET_CLASSROOMS' is defined but never used.","'ISODateString' is defined but never used.","'ClassroomType' is defined but never used.","'gql' is defined but never used.","'useQuery' is defined but never used.","'GET_USERS' is defined but never used.","React Hook useEffect has a missing dependency: 'props.date'. Either include it or remove the dependency array.",["589"],"React Hook useEffect has a missing dependency: 'dataItem'. Either include it or remove the dependency array.",["590"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'dispatchNotification' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["591"],"'handleClick' is assigned a value but never used.",["592"],["593"],["594"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["595"],"'conjugated' is assigned a value but never used.","'handleChangeInputValue' is assigned a value but never used.","'handleConjugate' is assigned a value but never used.","'BrowseClassroomPopupBody' is defined but never used.","React Hook useEffect has a missing dependency: 'instrument'. Either include it or remove the dependency array.",["596"],"'watch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["597"],["598"],["599"],"React Hook useEffect has a missing dependency: 'isEditMode'. Either include it or remove the dependency array.",["600"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'hissings' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"621","fix":"622"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},"Update the dependencies array to be: [handleCloseNotification, opacity]",{"range":"633","text":"634"},"Update the dependencies array to be: [handleStartTimer]",{"range":"635","text":"636"},"Update the dependencies array to be: [data, error, loading]",{"range":"637","text":"638"},"Update the dependencies array to be: [data, gridTemplateColumns]",{"range":"639","text":"640"},"Update the dependencies array to be: [data.gridUpdate, props.date]",{"range":"641","text":"642"},"Update the dependencies array to be: [classrooms, dataItem]",{"range":"643","text":"644"},"Update the dependencies array to be: [filteredUsers, user]",{"range":"645","text":"646"},"Update the dependencies array to be: [dataItem, faculties]",{"range":"647","text":"648"},"Update the dependencies array to be: [dataItem, degrees]",{"range":"649","text":"650"},"Update the dependencies array to be: [dataItem, departments]",{"range":"651","text":"652"},"Update the dependencies array to be: [serverURL, value]",{"range":"653","text":"654"},"Update the dependencies array to be: [instrument, instruments]",{"range":"655","text":"656"},"Update the dependencies array to be: [departmentsData, item]",{"range":"657","text":"658"},"Update the dependencies array to be: [item]",{"range":"659","text":"660"},"Update the dependencies array to be: [faculties, item]",{"range":"661","text":"662"},"Update the dependencies array to be: [classroomsData, instrument, isEditMode]",{"range":"663","text":"664"},[1274,1283],"[handleCloseNotification, opacity]",[1336,1338],"[handleStartTimer]",[2161,2167],"[data, error, loading]",[763,769],"[data, gridTemplateColumns]",[990,1007],"[data.gridUpdate, props.date]",[2074,2086],"[classrooms, dataItem]",[2854,2869],"[filteredUsers, user]",[1662,1673],"[dataItem, faculties]",[1642,1651],"[dataItem, degrees]",[1687,1700],"[dataItem, departments]",[1185,1196],"[serverURL, value]",[2129,2142],"[instrument, instruments]",[2005,2022],"[departmentsData, item]",[2653,2655],"[item]",[1691,1702],"[faculties, item]",[2241,2269],"[classroomsData, instrument, isEditMode]"]