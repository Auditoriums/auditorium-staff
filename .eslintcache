[{"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/index.tsx":"1","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/reportWebVitals.ts":"2","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/client.ts":"3","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/App.tsx":"4","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindowProvider.tsx":"5","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/NotificationProvider.tsx":"6","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/Layout.tsx":"7","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/Notification.tsx":"8","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindow.tsx":"9","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/sidebar/Sidebar.tsx":"10","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/content/Content.tsx":"11","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/logo/Logo.tsx":"12","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/Users.tsx":"13","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/Registry.tsx":"14","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/schedule/Schedule.tsx":"15","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/profile/Profile.tsx":"16","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/PDFConfig.ts":"17","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/styles/selectStyles.ts":"18","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/models/models.ts":"19","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/helpers.ts":"20","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/users.ts":"21","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/register.ts":"22","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classrooms.ts":"23","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/classrooms/Classrooms.tsx":"24","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteClassroom.ts":"25","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/header/Header.tsx":"26","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/button/Button.tsx":"27","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/userProfile/UserProfile.tsx":"28","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/scheduleUnit/ScheduleUnit.tsx":"29","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/constants.ts":"30","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/schedule.ts":"31","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createClassroom.ts":"32","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/departments.ts":"33","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/classroom/Classroom.tsx":"34","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/Caviar.tsx":"35","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/title/Title.tsx":"36","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/instruments/Instruments.tsx":"37","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/ClassroomInfo.tsx":"38","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tag/Tag.tsx":"39","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/Footer.tsx":"40","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/freeClassroom.ts":"41","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantRegistration/OccupantRegistration.tsx":"42","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tooltip/Tooltip.tsx":"43","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantInfo/OccupantInfo.tsx":"44","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/occupyClassroom.ts":"45","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/delete/Delete.tsx":"46","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/HeaderSelect.tsx":"47","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/selectStyles.ts":"48","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/filterClassrooms.ts":"49","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerCheckBox/HeaderCheckbox.tsx":"50","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/dataList/DataList.tsx":"51","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useUsers.ts":"52","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useInstruments.ts":"53","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/instruments.ts":"54","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createInstrument.ts":"55","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteInstrument.ts":"56","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateInstrument.ts":"57","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDepartments.ts":"58","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useFaculties.ts":"59","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/faculties.ts":"60","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDepartment.ts":"61","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDepartment.ts":"62","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDepartment.ts":"63","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteFaculty.ts":"64","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createFaculty.ts":"65","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateFaculty.ts":"66","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDegrees.ts":"67","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDegree.ts":"68","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDegree.ts":"69","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDegree.ts":"70","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/degrees.ts":"71","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useClassrooms.tsx":"72","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/loader/Loader.tsx":"73","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/AdminClassrooms.tsx":"74","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/AdminUsers.tsx":"75","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/AdminFaculties.tsx":"76","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/AdminDegrees.tsx":"77","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/AdminDepartments.tsx":"78","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/admin/Admin.tsx":"79","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/AdminInstruments.tsx":"80","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/createClassroomPopupBody/CreateClassroomPopupBody.tsx":"81","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/browseClassroomPopupBody/BrowseClassroomPopupBody.tsx":"82","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/createFacultyPopupBody/CreateFacultyPopupBody.tsx":"83","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/createDegreePopupBody/CreateDegreePopupBody.tsx":"84","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/browseUserPopupBody/BrowseUserPopupBody.tsx":"85","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/createDepartmentPopupBody/CreateDepartmentPopupBody.tsx":"86","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/createInstrumentPopupBody/CreateInstrumentPopupBody.tsx":"87","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/browseInstrumentPopupBody/BrowseInstrumentPopupBody.tsx":"88","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/login/Login.tsx":"89","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/customInput/CustomInput.tsx":"90","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/login.ts":"91","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useMe.ts":"92","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/mail.js":"93","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/conjugate.ts":"94","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/femail.js":"95","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signUp.ts":"96","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/verifyUser.ts":"97","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useLocal.ts":"98","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/helpers/helpers.ts":"99","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/dashboard/Dashboard.tsx":"100","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/queueRecords.ts":"101","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/generalQueue.ts":"102","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/localize/localize.ts":"103","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/pendingClassrooms.ts":"104","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/freeClassrooms.ts":"105","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/queue/Queue.tsx":"106","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/usersQueue.ts":"107","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/addUserToQueue.ts":"108","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/removeUserFromQueue.ts":"109","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/DisableClassroom.tsx":"110","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/disableClassroom.ts":"111","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/enableClassroom.ts":"112","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/disabledClassrooms.ts":"113","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classroom.ts":"114","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/ConfirmFooter.tsx":"115","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/classrooms.ts":"116","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/CaviarItem.tsx":"117","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/giveOutClassroomKey.ts":"118","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/editUserPopupBody/EditUserPopupBody.tsx":"119","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateClassroom.ts":"120","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createUser.ts":"121","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signupEmployee.ts":"122","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteUser.ts":"123","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/errorHandler/ErrorHandler.tsx":"124","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/logout.ts":"125","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/users.ts":"126","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/ConfirmBody.tsx":"127","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/verifyButton/VerifyButton.tsx":"128","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/disableDispatcher.ts":"129","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/dispatcherActive.ts":"130","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/dispatcherStatus.ts":"131","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/approveFooter/DeleteUserConfirmPopup.tsx":"132","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/handleOperation.ts":"133","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/completeEmployeeAccount/CompleteEmployeeAccountPopupBody.tsx":"134","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/validators.ts":"135","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/completeEmployeeAccountRequestEmail.ts":"136","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/getMinutsWithZero.ts":"137","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateUser.ts":"138","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/dispatcherSettings/DispatcherSettings.tsx":"139","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/dispatcherSettings/SectionTitle.tsx":"140","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/dispatcherSettings/SectionHint.tsx":"141","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/crashMode.ts":"142","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/crashModeSwitchOn.ts":"143","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/crashModeSwitchOff.ts":"144","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/dispatcherSettings/ConfirmCrashModeBody.tsx":"145","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/dispatcherSettings/DispatcherSettingsSection.tsx":"146","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/dispatcherSettings/sections/CrashModeSettingsSection.tsx":"147","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/classrooms/CrashModeAlert.tsx":"148","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/schedule/AdminSchedule.tsx":"149","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/schedule/AdminScheduleClassroom.tsx":"150","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/schedule/dayTabs/DayTabs.tsx":"151","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/scheduleHelpers.ts":"152","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantRegistration/chooseTime/ChooseTime.tsx":"153","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/splash/Splash.tsx":"154","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/scheduleUnits.ts":"155","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/schedule/scheduleUnitRow/ScheduleUnitRow.tsx":"156","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/schedule/scheduleUnitPopup/ScheduleUnitPopup.tsx":"157","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteScheduleUnit.ts":"158","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateScheduleUnit.ts":"159","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createScheduleUnit.ts":"160","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/scheduleSubUnits.ts":"161","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/schedule/ScheduleUnitList.tsx":"162","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/edit/Edit.tsx":"163","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/add/Add.tsx":"164","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/back/Back.tsx":"165"},{"size":1237,"mtime":1630320830860,"results":"166","hashOfConfig":"167"},{"size":425,"mtime":1618351407625,"results":"168","hashOfConfig":"167"},{"size":3836,"mtime":1641914853592,"results":"169","hashOfConfig":"167"},{"size":586,"mtime":1641914864131,"results":"170","hashOfConfig":"167"},{"size":1633,"mtime":1632663768042,"results":"171","hashOfConfig":"167"},{"size":1442,"mtime":1618351407598,"results":"172","hashOfConfig":"167"},{"size":900,"mtime":1626990730315,"results":"173","hashOfConfig":"167"},{"size":2009,"mtime":1618351407597,"results":"174","hashOfConfig":"167"},{"size":1800,"mtime":1618924470936,"results":"175","hashOfConfig":"167"},{"size":9549,"mtime":1640550535835,"results":"176","hashOfConfig":"167"},{"size":3326,"mtime":1641904562451,"results":"177","hashOfConfig":"167"},{"size":1021,"mtime":1618351407597,"results":"178","hashOfConfig":"167"},{"size":8780,"mtime":1640393410003,"results":"179","hashOfConfig":"167"},{"size":4449,"mtime":1637970205379,"results":"180","hashOfConfig":"167"},{"size":3387,"mtime":1642257307382,"results":"181","hashOfConfig":"167"},{"size":2400,"mtime":1629743211309,"results":"182","hashOfConfig":"167"},{"size":2852,"mtime":1637268459740,"results":"183","hashOfConfig":"167"},{"size":1849,"mtime":1620896099497,"results":"184","hashOfConfig":"167"},{"size":7377,"mtime":1642096466174,"results":"185","hashOfConfig":"167"},{"size":10338,"mtime":1642269041728,"results":"186","hashOfConfig":"167"},{"size":1637,"mtime":1637682934572,"results":"187","hashOfConfig":"167"},{"size":553,"mtime":1618351407522,"results":"188","hashOfConfig":"167"},{"size":1022,"mtime":1630504553730,"results":"189","hashOfConfig":"167"},{"size":7099,"mtime":1640305944180,"results":"190","hashOfConfig":"167"},{"size":938,"mtime":1630506746008,"results":"191","hashOfConfig":"167"},{"size":240,"mtime":1618351407593,"results":"192","hashOfConfig":"167"},{"size":912,"mtime":1641413864088,"results":"193","hashOfConfig":"167"},{"size":1873,"mtime":1639959630151,"results":"194","hashOfConfig":"167"},{"size":2684,"mtime":1642259975057,"results":"195","hashOfConfig":"167"},{"size":230,"mtime":1640652217580,"results":"196","hashOfConfig":"167"},{"size":410,"mtime":1642171375209,"results":"197","hashOfConfig":"167"},{"size":912,"mtime":1630048015026,"results":"198","hashOfConfig":"167"},{"size":259,"mtime":1630063865094,"results":"199","hashOfConfig":"167"},{"size":7446,"mtime":1641907833633,"results":"200","hashOfConfig":"167"},{"size":597,"mtime":1629549631291,"results":"201","hashOfConfig":"167"},{"size":321,"mtime":1618351407602,"results":"202","hashOfConfig":"167"},{"size":1419,"mtime":1620474079372,"results":"203","hashOfConfig":"167"},{"size":5235,"mtime":1641659074163,"results":"204","hashOfConfig":"167"},{"size":624,"mtime":1618351407601,"results":"205","hashOfConfig":"167"},{"size":12785,"mtime":1640257781589,"results":"206","hashOfConfig":"167"},{"size":877,"mtime":1627337374560,"results":"207","hashOfConfig":"167"},{"size":10511,"mtime":1641664174842,"results":"208","hashOfConfig":"167"},{"size":260,"mtime":1618351407602,"results":"209","hashOfConfig":"167"},{"size":1552,"mtime":1628969892295,"results":"210","hashOfConfig":"167"},{"size":1241,"mtime":1629207980643,"results":"211","hashOfConfig":"167"},{"size":423,"mtime":1619127814320,"results":"212","hashOfConfig":"167"},{"size":329,"mtime":1618841678420,"results":"213","hashOfConfig":"167"},{"size":1202,"mtime":1618700160684,"results":"214","hashOfConfig":"167"},{"size":1757,"mtime":1630241316425,"results":"215","hashOfConfig":"167"},{"size":406,"mtime":1618858609526,"results":"216","hashOfConfig":"167"},{"size":2094,"mtime":1631657511251,"results":"217","hashOfConfig":"167"},{"size":443,"mtime":1630359386010,"results":"218","hashOfConfig":"167"},{"size":653,"mtime":1630532036193,"results":"219","hashOfConfig":"167"},{"size":305,"mtime":1630532321801,"results":"220","hashOfConfig":"167"},{"size":348,"mtime":1618921707227,"results":"221","hashOfConfig":"167"},{"size":242,"mtime":1627340159100,"results":"222","hashOfConfig":"167"},{"size":400,"mtime":1618930546389,"results":"223","hashOfConfig":"167"},{"size":590,"mtime":1630532124813,"results":"224","hashOfConfig":"167"},{"size":677,"mtime":1619010460893,"results":"225","hashOfConfig":"167"},{"size":220,"mtime":1619004236020,"results":"226","hashOfConfig":"167"},{"size":234,"mtime":1619005104551,"results":"227","hashOfConfig":"167"},{"size":242,"mtime":1627340159111,"results":"228","hashOfConfig":"167"},{"size":286,"mtime":1619008026042,"results":"229","hashOfConfig":"167"},{"size":230,"mtime":1627340159107,"results":"230","hashOfConfig":"167"},{"size":222,"mtime":1619011020952,"results":"231","hashOfConfig":"167"},{"size":271,"mtime":1619011082457,"results":"232","hashOfConfig":"167"},{"size":652,"mtime":1619015029554,"results":"233","hashOfConfig":"167"},{"size":226,"mtime":1627340159095,"results":"234","hashOfConfig":"167"},{"size":218,"mtime":1619014828121,"results":"235","hashOfConfig":"167"},{"size":266,"mtime":1619014919584,"results":"236","hashOfConfig":"167"},{"size":245,"mtime":1619015252188,"results":"237","hashOfConfig":"167"},{"size":861,"mtime":1630349305290,"results":"238","hashOfConfig":"167"},{"size":347,"mtime":1620421410625,"results":"239","hashOfConfig":"167"},{"size":6310,"mtime":1642257154620,"results":"240","hashOfConfig":"167"},{"size":8075,"mtime":1642256670753,"results":"241","hashOfConfig":"167"},{"size":3257,"mtime":1642257133965,"results":"242","hashOfConfig":"167"},{"size":3783,"mtime":1642257148458,"results":"243","hashOfConfig":"167"},{"size":3105,"mtime":1642257142134,"results":"244","hashOfConfig":"167"},{"size":2454,"mtime":1642260072564,"results":"245","hashOfConfig":"167"},{"size":4474,"mtime":1642257106302,"results":"246","hashOfConfig":"167"},{"size":16762,"mtime":1630532124821,"results":"247","hashOfConfig":"167"},{"size":1954,"mtime":1630530124373,"results":"248","hashOfConfig":"167"},{"size":2893,"mtime":1620423480757,"results":"249","hashOfConfig":"167"},{"size":4663,"mtime":1620423480785,"results":"250","hashOfConfig":"167"},{"size":2604,"mtime":1639960755994,"results":"251","hashOfConfig":"167"},{"size":4039,"mtime":1630532168025,"results":"252","hashOfConfig":"167"},{"size":6948,"mtime":1630532241261,"results":"253","hashOfConfig":"167"},{"size":928,"mtime":1630531903936,"results":"254","hashOfConfig":"167"},{"size":4636,"mtime":1632488752650,"results":"255","hashOfConfig":"167"},{"size":2669,"mtime":1630350225410,"results":"256","hashOfConfig":"167"},{"size":515,"mtime":1629236693243,"results":"257","hashOfConfig":"167"},{"size":301,"mtime":1620503582856,"results":"258","hashOfConfig":"167"},{"size":11557,"mtime":1620506932088,"results":"259","hashOfConfig":"167"},{"size":2462,"mtime":1620577995473,"results":"260","hashOfConfig":"167"},{"size":3767,"mtime":1620509383284,"results":"261","hashOfConfig":"167"},{"size":356,"mtime":1618351407518,"results":"262","hashOfConfig":"167"},{"size":432,"mtime":1629742252317,"results":"263","hashOfConfig":"167"},{"size":200,"mtime":1620857621134,"results":"264","hashOfConfig":"167"},{"size":333,"mtime":1620895052014,"results":"265","hashOfConfig":"167"},{"size":6854,"mtime":1641905632404,"results":"266","hashOfConfig":"167"},{"size":285,"mtime":1626729655716,"results":"267","hashOfConfig":"167"},{"size":195,"mtime":1627340270831,"results":"268","hashOfConfig":"167"},{"size":678,"mtime":1641905549699,"results":"269","hashOfConfig":"167"},{"size":396,"mtime":1626875518057,"results":"270","hashOfConfig":"167"},{"size":209,"mtime":1627340270836,"results":"271","hashOfConfig":"167"},{"size":7008,"mtime":1632829736892,"results":"272","hashOfConfig":"167"},{"size":490,"mtime":1629741539181,"results":"273","hashOfConfig":"167"},{"size":374,"mtime":1628974656100,"results":"274","hashOfConfig":"167"},{"size":261,"mtime":1629065143310,"results":"275","hashOfConfig":"167"},{"size":3713,"mtime":1640392986125,"results":"276","hashOfConfig":"167"},{"size":471,"mtime":1628881233956,"results":"277","hashOfConfig":"167"},{"size":469,"mtime":1628881239189,"results":"278","hashOfConfig":"167"},{"size":232,"mtime":1627221873060,"results":"279","hashOfConfig":"167"},{"size":831,"mtime":1630504553737,"results":"280","hashOfConfig":"167"},{"size":654,"mtime":1633033525817,"results":"281","hashOfConfig":"167"},{"size":421,"mtime":1631713754464,"results":"282","hashOfConfig":"167"},{"size":3251,"mtime":1640256033280,"results":"283","hashOfConfig":"167"},{"size":370,"mtime":1629750327361,"results":"284","hashOfConfig":"167"},{"size":14084,"mtime":1639960068077,"results":"285","hashOfConfig":"167"},{"size":979,"mtime":1630504596915,"results":"286","hashOfConfig":"167"},{"size":697,"mtime":1630048015033,"results":"287","hashOfConfig":"167"},{"size":660,"mtime":1630097289413,"results":"288","hashOfConfig":"167"},{"size":274,"mtime":1630068307958,"results":"289","hashOfConfig":"167"},{"size":849,"mtime":1630275071315,"results":"290","hashOfConfig":"167"},{"size":218,"mtime":1630275295899,"results":"291","hashOfConfig":"167"},{"size":510,"mtime":1630348065196,"results":"292","hashOfConfig":"167"},{"size":2791,"mtime":1639958996606,"results":"293","hashOfConfig":"167"},{"size":1280,"mtime":1632665140792,"results":"294","hashOfConfig":"167"},{"size":282,"mtime":1632482294941,"results":"295","hashOfConfig":"167"},{"size":128,"mtime":1632484168730,"results":"296","hashOfConfig":"167"},{"size":157,"mtime":1632484182515,"results":"297","hashOfConfig":"167"},{"size":1602,"mtime":1632669003534,"results":"298","hashOfConfig":"167"},{"size":1440,"mtime":1642102681755,"results":"299","hashOfConfig":"167"},{"size":1992,"mtime":1639959793427,"results":"300","hashOfConfig":"167"},{"size":1447,"mtime":1639842173139,"results":"301","hashOfConfig":"167"},{"size":391,"mtime":1632673987816,"results":"302","hashOfConfig":"167"},{"size":193,"mtime":1637268341839,"results":"303","hashOfConfig":"167"},{"size":307,"mtime":1637967703535,"results":"304","hashOfConfig":"167"},{"size":1245,"mtime":1642257133971,"results":"305","hashOfConfig":"167"},{"size":291,"mtime":1640298456849,"results":"306","hashOfConfig":"167"},{"size":284,"mtime":1640298630306,"results":"307","hashOfConfig":"167"},{"size":156,"mtime":1640299812986,"results":"308","hashOfConfig":"167"},{"size":416,"mtime":1640299625119,"results":"309","hashOfConfig":"167"},{"size":371,"mtime":1640299670555,"results":"310","hashOfConfig":"167"},{"size":1371,"mtime":1640305441594,"results":"311","hashOfConfig":"167"},{"size":548,"mtime":1640304805713,"results":"312","hashOfConfig":"167"},{"size":3582,"mtime":1640304847636,"results":"313","hashOfConfig":"167"},{"size":1169,"mtime":1640306361201,"results":"314","hashOfConfig":"167"},{"size":1670,"mtime":1642258115066,"results":"315","hashOfConfig":"167"},{"size":3283,"mtime":1642267580341,"results":"316","hashOfConfig":"167"},{"size":553,"mtime":1642258868348,"results":"317","hashOfConfig":"167"},{"size":5908,"mtime":1642269986620,"results":"318","hashOfConfig":"167"},{"size":1018,"mtime":1641664029237,"results":"319","hashOfConfig":"167"},{"size":435,"mtime":1641903953390,"results":"320","hashOfConfig":"167"},{"size":480,"mtime":1642171367699,"results":"321","hashOfConfig":"167"},{"size":3317,"mtime":1642266717761,"results":"322","hashOfConfig":"167"},{"size":22215,"mtime":1642270772509,"results":"323","hashOfConfig":"167"},{"size":749,"mtime":1642103408541,"results":"324","hashOfConfig":"167"},{"size":534,"mtime":1642025999889,"results":"325","hashOfConfig":"167"},{"size":576,"mtime":1642112335591,"results":"326","hashOfConfig":"167"},{"size":543,"mtime":1642171366523,"results":"327","hashOfConfig":"167"},{"size":2017,"mtime":1642168422683,"results":"328","hashOfConfig":"167"},{"size":710,"mtime":1619127777030,"results":"329","hashOfConfig":"167"},{"size":339,"mtime":1618781817829,"results":"330","hashOfConfig":"167"},{"size":499,"mtime":1642256278666,"results":"331","hashOfConfig":"167"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"335"},"12dhxiy",{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"335"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"335"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"335"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"335"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"335"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"335"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"335"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"335"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"335"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"335"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"335"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"335"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"335"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"335"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"335"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"335"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"335"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"499","messages":"500","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"507","messages":"508","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"511","messages":"512","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"335"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"335"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"335"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"335"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"335"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"335"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"335"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"544"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"548"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"544"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"553"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"335"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"335"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"335"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"335"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"608"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"335"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"335"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"335"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"664","usedDeprecatedRules":"335"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"669","messages":"670","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"683","messages":"684","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"697","messages":"698","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"699","messages":"700","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/index.tsx",["701"],"import 'core-js/es/map';\nimport 'core-js/es/set';\nimport 'raf/polyfill';\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {ApolloProvider} from \"@apollo/client\";\nimport {client} from \"./api/client\";\nimport PopupWindowProvider from \"./components/popupWindow/PopupWindowProvider\";\nimport NotificationProvider from \"./components/notification/NotificationProvider\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport ErrorHandler from \"./components/errorHandler/ErrorHandler\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <ApolloProvider client={client}>\n        <PopupWindowProvider>\n          <NotificationProvider>\n            <ErrorHandler>\n              <App/>\n            </ErrorHandler>\n          </NotificationProvider>\n        </PopupWindowProvider>\n      </ApolloProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",["702","703"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/reportWebVitals.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/client.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/App.tsx",["704"],"import React, {useEffect} from 'react';\nimport Layout from \"./components/layout/Layout\";\nimport {setAccessRights} from \"./helpers/helpers\";\nimport {User, UserTypes} from \"./models/models\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction App() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user:User = JSON.parse(localStorage.getItem('user') as string);\n    if (user && user.type === UserTypes.STAFF) {\n      history.push('/dashboard');\n    }\n    document.title = 'Auditorium';\n\n    setAccessRights(user);\n\n  }, []);\n\n  return <Layout/>;\n}\n\nexport default App;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindowProvider.tsx",["705"],"import React, { createContext, useContext, useReducer, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport PopupWindow from \"./PopupWindow\";\nimport {isBlurredVar, isPassedVar} from \"../../api/client\";\n\ninterface PropTypes {}\n\nexport const PopupWindowContext = createContext({});\n\nconst PopupWindowProvider: React.FC<PropTypes> = ({ children }) => {\n  const [state, dispatch] = useReducer((state: any, action: any) => {\n    switch (action.type) {\n      case \"PUSH_POPUP_WINDOW\": {\n        isBlurredVar(true);\n        return [...state, { ...action.payload }];\n      }\n      case \"POP_POPUP_WINDOW\": {\n        if (state.length <= 1) {\n          isBlurredVar(false);\n          isPassedVar(false);\n        }\n        return [...state.slice(0, state.length - 1)];\n      }\n      case \"POP_ALL_POPUP_WINDOW\": {\n          isBlurredVar(false);\n          isPassedVar(false);\n        return [];\n      }\n\n      default:\n        return state;\n    }\n  }, []);\n  return (\n    <PopupWindowContext.Provider value={dispatch}>\n      {state.map((popup: any) => (\n        <PopupWindow\n          key={popup.id}\n          body={popup.body}\n          header={popup.header}\n          footer={popup.footer}\n          isConfirm={popup.isConfirm}\n          dispatch={dispatch}\n        />\n      ))}\n      {children}\n    </PopupWindowContext.Provider>\n  );\n};\n\nexport const usePopupWindow = () => {\n  const dispatch = useContext(PopupWindowContext);\n  return (props: any) => {\n    // @ts-ignore\n    dispatch({\n      type: \"PUSH_POPUP_WINDOW\",\n      payload: {\n        id: v4(),\n        ...props,\n      },\n    });\n  };\n};\n\nexport default PopupWindowProvider;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/NotificationProvider.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/Layout.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/Notification.tsx",["706","707"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./notification.module.css\";\n\ninterface PropTypes {\n  message: string;\n  header: string;\n  dispatch: (value: any) => void;\n  id: string;\n  type?: \"ok\" | \"alert\";\n}\n\nconst Notification: React.FC<PropTypes> = ({\n  message,\n  type = \"default\",\n  dispatch,\n  id,\n  header,\n}) => {\n  const [exit, setExit] = useState(false);\n  const [opacity, setOpacity] = useState(100);\n  const [intervalId, setIntervalId]: any = useState(null);\n\n  const handleStartTimer = () => {\n    const id = setInterval(() => {\n      setOpacity((prevState) => {\n        if (prevState > 95) {\n          return prevState - 0.02;\n        } else if (prevState > 1) {\n          return prevState - 0.5;\n        } else {\n          handleCloseNotification();\n          return prevState;\n        }\n      });\n    }, 10);\n    setIntervalId(id);\n  };\n\n  const handlePauseTimer = () => {\n    clearInterval(intervalId);\n    setOpacity(100);\n  };\n\n  const handleCloseNotification = () => {\n    clearInterval(intervalId);\n    setExit(true);\n    setTimeout(() => {\n      dispatch({\n        type: \"REMOVE_NOTIFICATION\",\n        id: id,\n      });\n    }, 400);\n  };\n\n  useEffect(() => {\n    if (opacity < 1) {\n      handleCloseNotification();\n    }\n  }, [opacity]);\n\n  useEffect(() => {\n    handleStartTimer();\n  }, []);\n\n  return (\n    <div\n      onMouseEnter={handlePauseTimer}\n      onMouseLeave={handleStartTimer}\n      className={[styles.notification, exit ? styles.exit : \"\"].join(\" \")}\n      style={{ opacity: `${opacity / 100}` }}\n    >\n      <span\n        className={styles.notificationClose}\n        onClick={handleCloseNotification}\n      />\n      <p\n        className={[\n          type === \"ok\"\n            ? styles.ok\n            : type === \"alert\"\n            ? styles.alert\n            : styles.default\n        , styles.header].join(\" \")}\n      >\n        {header}\n      </p>\n      <p className={styles.message}>{message}</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindow.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/sidebar/Sidebar.tsx",["708"],"import React, {useEffect, useState} from \"react\";\nimport styles from \"./sidebar.module.css\";\nimport Logo from \"../../logo/Logo\";\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport menuIcon from \"../../../assets/images/menu.svg\";\nimport classroomsIcon from \"../../../assets/images/classrooms.svg\";\nimport registryIcon from \"../../../assets/images/registry.svg\";\nimport usersIcon from \"../../../assets/images/users.svg\";\nimport controlIcon from \"../../../assets/images/settings.svg\";\nimport queueIcon from \"../../../assets/images/queue.png\";\nimport scheduleIcon from \"../../../assets/images/schedule.svg\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {StudentAccountStatus, User, UserTypes} from \"../../../models/models\";\nimport Button from \"../../button/Button\";\nimport {usePopupWindow} from \"../../popupWindow/PopupWindowProvider\";\nimport {client} from \"../../../api/client\";\nimport {DISABLE_DISPATCHER} from \"../../../api/operations/mutations/disableDispatcher\";\nimport {useNotification} from \"../../notification/NotificationProvider\";\nimport {DISPATCHER_STATUS} from \"../../../api/operations/queries/dispatcherActive\";\nimport {handleLogout} from \"../../../helpers/logout\";\n\nconst Sidebar = () => {\n  const [collapsed, setCollapsed] = useState(true);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [isDispatcher, setIsDispatcher] = useState(false);\n  const {data} = useQuery(GET_USERS);\n  const [unverifiedCounter, setUnverifiedCounter] = useState(0);\n  const {data: dispatcherActive, loading, error} = useQuery(DISPATCHER_STATUS);\n  const [isActive, setIsActive] = useState(true);\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      setIsDispatcher(user.type === UserTypes.DISPATCHER);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isDispatcher && !loading && !error) {\n      setIsActive(dispatcherActive.dispatcherActive);\n    }\n  }, [data, loading, error, isDispatcher]);\n\n  useEffect(() => {\n    setUnverifiedCounter(0);\n    if (data) {\n      data.users.forEach(({studentInfo}: User) => {\n        studentInfo?.accountStatus === StudentAccountStatus.UNVERIFIED\n        && setUnverifiedCounter(prevState => prevState + 1);\n      });\n    }\n  }, [data]);\n\n  const onClick = () => {\n    const screenWidth = window.screen.width;\n\n    setCollapsed((prevState) => {\n      if (screenWidth < 1024) {\n        return !prevState;\n      } else {\n        return prevState;\n      }\n    });\n  }\n\n  const FinishFooter = ({dispatch}: any) => {\n    const handleCancel = () => dispatch({type: \"POP_POPUP_WINDOW\"});\n    const handleOk = async () => {\n      try {\n        const result = await client.mutate({\n          mutation: DISABLE_DISPATCHER\n        });\n        if (result.data.disableDispatcher.userErrors.length) {\n          result.data.disableDispatcher.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Успішно!\",\n            message: `Робочий день закінчено`,\n            type: \"ok\",\n          });\n          dispatch({type: \"POP_POPUP_WINDOW\"});\n          setIsActive(false);\n        }\n      } catch (e: any) {\n        dispatchNotification({\n          header: \"Помилка\",\n          message: JSON.stringify(e),\n          type: \"alert\",\n        });\n      }\n    };\n\n    return (\n      <>\n        <Button\n          color='blue'\n          style={{marginRight: 8, height: 40}}\n          onClick={handleCancel}\n        >\n          Відміна\n        </Button>\n        <Button\n          color='red'\n          onClick={handleOk}\n        >\n          Завершити роботу\n        </Button>\n      </>\n    )\n  }\n\n  const handleFinishClick = () => {\n    dispatchPopupWindow({\n      header: <h1>Бажаєте завершити роботу?</h1>,\n      body: <p>Цю дію неможливо буде відмінити</p>,\n      footer: <FinishFooter/>,\n      isConfirm: true,\n    });\n  }\n\n  return (\n    <div\n      onMouseEnter={() => setCollapsed(false)}\n      onMouseLeave={() => setCollapsed(true)}\n      className={[styles[collapsed.toString()], styles.navigation].join(\" \")}\n    >\n      {isDispatcher && !isActive && (\n        <div className={styles.dispatcherInactive}>\n          <h1 className={styles.dayFinishedTitle}>Робочий день закінчено</h1>\n          <Button color='red' onClick={handleLogout}>Вийти з акаунту</Button>\n        </div>\n      )}\n      <div className={styles.logoWrapper}>\n        <Logo\n          title={collapsed ? \"Au\" : \"Auditorium\"}\n          description=\"Система управління видачею аудиторій\"\n          size=\"small\"\n        />\n      </div>\n      <img\n        className={styles.menuIcon}\n        src={menuIcon}\n        alt=\"menu\"\n      />\n      <p className={styles.currentPageName}>\n        <Switch>\n          <Route exact path=\"/classrooms\">\n            Аудиторії\n          </Route>\n          <Route exact path=\"/users\">\n            Користувачі\n          </Route>\n          <Route exact path=\"/registry\">\n            Журнал\n          </Route>\n          {/*<Route exact path=\"/schedule\">*/}\n          {/*  Розклад*/}\n          {/*</Route>*/}\n          <Route exact path=\"/queue\">\n            Черга\n          </Route>\n          <Route exact path=\"/profile\">\n            Мій профіль\n          </Route>\n          <Route exact path=\"/admin\">\n            Налаштування\n          </Route>\n        </Switch>\n      </p>\n      <ul>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/classrooms\"\n          >\n            <img className={styles.icon} src={classroomsIcon} alt=\"classrooms\"/>\n            Аудиторії\n          </NavLink>\n        </li>\n        <li>\n          {unverifiedCounter !== 0 && <span className={styles.alert}>!</span>}\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/users\"\n          >\n            <img className={styles.icon} src={usersIcon} alt=\"users\"/>\n            Користувачі\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/registry\"\n          >\n            <img className={styles.icon} src={registryIcon} alt=\"registry\"/>\n            Журнал\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/schedule\"\n          >\n            <img className={styles.icon} src={scheduleIcon} alt=\"schedule\" />\n            Розклад\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/queue\"\n          >\n            {/*TODO change PNG icon to SVG*/}\n            <img className={styles.icon} src={queueIcon} alt=\"queue\"/>\n            Черга\n          </NavLink>\n        </li>\n        {/*<li>*/}\n        {/*  <NavLink*/}\n        {/*    activeClassName={styles.linkActive}*/}\n        {/*    className={styles.link}*/}\n        {/*    onClick={onClick}*/}\n        {/*    to=\"/profile\"*/}\n        {/*  >*/}\n        {/*    <img className={styles.icon} src={profileIcon} alt=\"profile\" />*/}\n        {/*    Мій профіль*/}\n        {/*  </NavLink>*/}\n        {/*</li>*/}\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/admin\"\n          >\n            <img className={[styles.icon, styles.settings].join(' ')} src={controlIcon} alt=\"control\"/>\n            Налаштування\n          </NavLink>\n        </li>\n      </ul>\n      {isDispatcher && (\n        <div\n          className={collapsed ? styles.finishButtonWrapperCollapsed : styles.finishButtonWrapper}\n          title='Закінчити роботу'\n        >\n          <Button onClick={handleFinishClick}>\n            <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" fill='#fff'\n                 x=\"0px\" y=\"0px\"\n                 viewBox=\"0 0 32 32\">\n              <path d=\"M30.9,13.6c-0.1-0.1-0.1-0.2-0.2-0.3l-4-4c-0.4-0.4-1-0.4-1.4,0s-0.4,1,0,1.4l2.3,2.3H22v-3V3c0-0.6-0.4-1-1-1H4\n              c0,0,0,0,0,0C3.9,2,3.7,2,3.6,2.1c0,0,0,0-0.1,0c0,0-0.1,0-0.1,0.1c0,0-0.1,0.1-0.1,0.1c0,0,0,0,0,0C3.2,2.4,3.1,2.5,3.1,2.6\n              c0,0,0,0,0,0.1C3,2.8,3,2.9,3,3v22c0,0.4,0.2,0.8,0.6,0.9l9,4C12.7,30,12.9,30,13,30c0.2,0,0.4-0.1,0.5-0.2c0.3-0.2,0.5-0.5,0.5-0.8\n              v-3h7c0.6,0,1-0.4,1-1V15h5.6l-2.3,2.3c-0.4,0.4-0.4,1,0,1.4c0.2,0.2,0.5,0.3,0.7,0.3s0.5-0.1,0.7-0.3l4-4c0.1-0.1,0.2-0.2,0.2-0.3\n              C31,14.1,31,13.9,30.9,13.6z M10,21c0,0.6-0.4,1-1,1s-1-0.4-1-1v-4c0-0.6,0.4-1,1-1s1,0.4,1,1V21z M20,10v14h-6V7\n              c0-0.4-0.2-0.8-0.6-0.9L8.7,4H20V10z\"/>\n            </svg>\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/content/Content.tsx",["709"],"import React from \"react\";\r\nimport styles from \"./content.module.css\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Registry from \"../../../pages/registry/Registry\";\r\nimport Schedule from \"../../../pages/schedule/Schedule\";\r\nimport Users from \"../../../pages/users/Users\";\r\nimport Profile from \"../../../pages/profile/Profile\";\r\nimport AdminClassrooms from \"../../../pages/admin/classrooms/AdminClassrooms\";\r\nimport AdminUsers from \"../../../pages/admin/users/AdminUsers\";\r\nimport Admin from \"../../../pages/admin/admin/Admin\";\r\nimport Classrooms from \"../../../pages/classrooms/Classrooms\";\r\nimport AdminInstruments from \"../../../pages/admin/instruments/AdminInstruments\";\r\nimport AdminDepartments from \"../../../pages/admin/departments/AdminDepartments\";\r\nimport AdminFaculties from \"../../../pages/admin/faculties/AdminFaculties\";\r\nimport AdminDegrees from \"../../../pages/admin/degrees/AdminDegrees\";\r\nimport Login from \"../../../pages/login/Login\";\r\nimport Dashboard from \"../../../pages/dashboard/Dashboard\";\r\nimport Queue from \"../../../pages/queue/Queue\";\r\nimport {User, UserTypes} from \"../../../models/models\";\r\nimport DispatcherSettings from \"../../../pages/admin/dispatcherSettings/DispatcherSettings\";\r\nimport AdminSchedule from \"../../../pages/admin/schedule/AdminSchedule\";\r\nimport AdminScheduleClassroom from \"../../../pages/admin/schedule/AdminScheduleClassroom\";\r\n\r\ninterface PropTypes {\r\n  isLogged: boolean;\r\n}\r\n\r\nconst Content: React.FC<PropTypes> = ({isLogged}) => {\r\n  const user: User = JSON.parse(localStorage.getItem('user'));\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      {!isLogged\r\n        ? (\r\n          <Switch>\r\n            <Route path=\"/\" component={Login}/>\r\n          </Switch>\r\n        )\r\n\r\n        : user && (user.type === UserTypes.ADMIN || user.type === UserTypes.DISPATCHER) ? (\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Classrooms}/>\r\n            <Route path=\"/classrooms/:classroomName?\" component={Classrooms}/>\r\n            <Route path=\"/registry/:userId?\" component={Registry}/>\r\n            <Route path=\"/schedule\" component={Schedule}/>\r\n            <Route path=\"/users:userId?\" component={Users}/>\r\n            <Route path=\"/profile\" component={Profile}/>\r\n            <Route path=\"/admin\" component={Admin}/>\r\n            <Route path=\"/adminClassrooms\" component={AdminClassrooms}/>\r\n            <Route path=\"/adminUsers\" component={AdminUsers}/>\r\n            <Route path=\"/adminInstruments\" component={AdminInstruments}/>\r\n            <Route path=\"/adminDepartments\" component={AdminDepartments}/>\r\n            <Route path=\"/adminFaculties\" component={AdminFaculties}/>\r\n            <Route path=\"/adminDegrees\" component={AdminDegrees}/>\r\n            <Route exact path=\"/adminSchedule\" component={AdminSchedule}/>\r\n            <Route path=\"/adminSchedule/classroom/:classroomName?\" component={AdminScheduleClassroom}/>\r\n            <Route path=\"/dashboard\" component={Dashboard}/>\r\n            <Route path=\"/queue\" component={Queue}/>\r\n            <Route path=\"/dispatcherSettings\" component={DispatcherSettings}/>\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route path=\"/dashboard\" component={Dashboard}/>\r\n          </Switch>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/logo/Logo.tsx",["710"],"import React from \"react\";\nimport styles from \"./logo.module.css\";\n\ninterface PropTypes {\n  title: string;\n  description: string;\n  size?: \"small\" | \"default\";\n}\n\nconst Logo: React.FC<PropTypes> = ({\n  title,\n  description,\n  size = \"default\",\n}) => {\n  const style = {};\n  return (\n    <div className={styles.logoWrapper}>\n      <div\n        className={\n          size === \"default\"\n            ? styles.logo\n            : size === \"small\"\n            ? styles.smallLogo\n            : styles.logo\n        }\n      >\n        <div className={styles.logoText}>\n          <h1\n            className={\n              size === \"default\"\n                ? styles.logoTitle\n                : size === \"small\"\n                ? styles.smallLogoTitle\n                : styles.logoTitle\n            }\n          >\n            {title}\n          </h1>\n          {size !== \"small\" && (\n            <h2 className={styles.logoDescription}>{description}</h2>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/Users.tsx",["711","712","713"],"import React, {useState} from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport mainStyles from \"./../../styles/main.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport {ACCESS_RIGHTS, StudentAccountStatus, User, UserTypeColors, UserTypes, UserTypesUa} from \"../../models/models\";\r\nimport {checkVerified, fullName, showNotification} from \"../../helpers/helpers\";\r\nimport {usePopupWindow} from \"../../components/popupWindow/PopupWindowProvider\";\r\nimport {CategoryType} from \"../../styles/selectStyles\";\r\nimport Back from \"../../components/icons/edit/Back\";\r\nimport HeaderSelect from \"../../components/headerSelect/HeaderSelect\";\r\nimport DataList from \"../../components/dataList/DataList\";\r\nimport {useLocal} from \"../../hooks/useLocal\";\r\nimport {isAvailableAccess} from \"./helpers/helpers\";\r\nimport BrowseUserPopupBody from \"../admin/users/browseUserPopupBody/BrowseUserPopupBody\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {useMutation, useQuery} from \"@apollo/client\";\r\nimport {VERIFY_USER} from \"../../api/operations/mutations/verifyUser\";\r\nimport {useNotification} from \"../../components/notification/NotificationProvider\";\r\nimport {client} from \"../../api/client\";\r\nimport {GET_USERS} from \"../../api/operations/queries/users\";\r\nimport HeaderCheckbox from \"../../components/headerCheckBox/HeaderCheckbox\";\r\nimport Loader from \"../../components/loader/Loader\";\r\nimport VerifyButton from \"../admin/users/verifyButton/VerifyButton\";\r\nimport CompleteEmployeeAccountPopupBody from \"./completeEmployeeAccount/CompleteEmployeeAccountPopupBody\";\r\nimport moment from \"moment\";\r\nimport {UPDATE_USER} from \"../../api/operations/mutations/updateUser\";\r\nimport handleOperation from \"../../helpers/handleOperation\";\r\n\r\nconst categories: CategoryType[] = [\r\n  {\r\n    value: 'ALL',\r\n    label: 'Всі',\r\n  },\r\n  {\r\n    value: UserTypes.TEACHER,\r\n    label: 'Викладачі',\r\n  },\r\n  {\r\n    value: UserTypes.STUDENT,\r\n    label: 'Студенти',\r\n  },\r\n  {\r\n    value: UserTypes.POST_GRADUATE,\r\n    label: 'Аситенти/Аспіранти',\r\n  },\r\n  {\r\n    value: UserTypes.CONCERTMASTER,\r\n    label: 'Концертмейстери',\r\n  },\r\n  {\r\n    value: UserTypes.ILLUSTRATOR,\r\n    label: 'Ілюстратори',\r\n  }\r\n];\r\n\r\nconst listHeader = ['ID', 'П.І.Б.', 'Статус'];\r\n\r\nconst Users = () => {\r\n  const {data, loading, error} = useQuery(GET_USERS);\r\n  const dispatchPopupWindow = usePopupWindow();\r\n  const dispatchNotification = useNotification();\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [categoryFilter, setCategoryFilter] = useState('ALL');\r\n  const [unverifiedOnly, setUnverifiedOnly] = useState(false);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const {data: {accessRights}} = useLocal('accessRights');\r\n  const [verifyUser] = useMutation(VERIFY_USER);\r\n  const [cancelSanctionsMutation] = useMutation(UPDATE_USER);\r\n\r\n  const handleComplete = (userId: number) => {\r\n    dispatchPopupWindow({\r\n      header: <h1>Видати акаунт співробітнику</h1>,\r\n      body: <CompleteEmployeeAccountPopupBody dispatchNotification={dispatchNotification} userId={userId} />,\r\n      footer: (\r\n        <Button\r\n          form='completeEmployeeAccount'\r\n          type='submit'\r\n        >\r\n          Підтвердити\r\n        </Button>\r\n      ),\r\n    });\r\n  };\r\n\r\n  const CancelSanctionsFooter = ({dispatch, userId}: any) => (\r\n    <div className={styles.cancelSanctionFooter}>\r\n      <Button color='red' onClick={() => dispatch({type: 'POP_POPUP_WINDOW'})}>Ні</Button>\r\n      <Button onClick={() => confirmCancelSanctions(dispatch, userId)}>Так</Button>\r\n    </div>\r\n  )\r\n\r\n  const cancelSanctions = (userId: number) => {\r\n    dispatchPopupWindow({\r\n      header: <h1>Ви дійсно бажаєте зняти санкції?</h1>,\r\n      body: <></>,\r\n      footer: <CancelSanctionsFooter userId={userId}/>\r\n    })\r\n  };\r\n\r\n  const confirmCancelSanctions = async (dispatch: any, userId: number) => {\r\n    try {\r\n      const result = cancelSanctionsMutation({\r\n        variables: {\r\n          where: {\r\n            id: userId\r\n          },\r\n          data: {\r\n            queueInfo: {\r\n              update: {\r\n                sanctionedUntil: {\r\n                  set: null\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n      });\r\n      handleOperation(result, 'updateOneUser', dispatchNotification, dispatch, 'Санкції успішно знято!');\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleClick = (user: User) => {\r\n    dispatchPopupWindow({\r\n      header: <h1>{fullName(user)}</h1>,\r\n      body: <BrowseUserPopupBody user={user}/>,\r\n      footer: !!user.queueInfo.sanctionedUntil ? (\r\n        <Button onClick={() => cancelSanctions(user.id)}>\r\n          Зняти санкції\r\n        </Button>\r\n        )\r\n        : !!user?.studentInfo ? !checkVerified(user) && (\r\n        <VerifyButton\r\n          verify={() => verify(user.id)}\r\n          dispatchPopupWindow={dispatchPopupWindow}\r\n          dispatchNotification={dispatchNotification}\r\n          userId={user.id}\r\n        />\r\n      ) : !user.employeeInfo.isInUsage ? (\r\n        <Button onClick={() => handleComplete(user.id)}>\r\n          Видати акаунт\r\n        </Button>\r\n      ) : null\r\n    });\r\n  };\r\n\r\n  const verify = async (userId: number) => {\r\n    try {\r\n      const result = await verifyUser({variables: {input: {userId}}});\r\n      if (result.data.verifyUser.userErrors.length) {\r\n        result.data.verifyUser.userErrors.forEach(({message}: any) => {\r\n          showNotification(dispatchNotification, ['Помилка!', message, 'alert']);\r\n        })\r\n      } else {\r\n        showNotification(dispatchNotification, ['Успішно!', 'Користувача верифіковано', 'ok']);\r\n        try {\r\n          await client.query({\r\n            query: GET_USERS,\r\n            fetchPolicy: 'network-only'\r\n          })\r\n        } catch (e: any) {\r\n          showNotification(dispatchNotification, ['Помилка!', e.message.slice(0, 100), 'alert']);\r\n        }\r\n      }\r\n    } catch (e: any) {\r\n      showNotification(dispatchNotification, ['Помилка!', e.message.slice(0, 100), 'alert']);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e: any) => {\r\n    setSearchValue(e.target.value.toLowerCase());\r\n  };\r\n\r\n  const handleSelectCategory = (e: any) => {\r\n    setCategoryFilter(e.value);\r\n  };\r\n\r\n  const user = (user: User) => (\r\n    <>\r\n      <span className={styles.centerText}>{user.id}</span>\r\n      <span onClick={() => handleClick(user)}>\r\n        {fullName(user)}\r\n        {!checkVerified(user) && <span className={styles.unverified}>Не верифіковано</span>}\r\n        {!!user.queueInfo.sanctionedUntil && <span className={styles.sanctioned}>\r\n            Під санкціями до {moment(user.queueInfo.sanctionedUntil).format('DD-MM-YYYY HH:mm')}\r\n        </span>}\r\n    </span>\r\n      <span className={styles.userType} style={{backgroundColor: UserTypeColors[user.type as UserTypes]}}>\r\n        {UserTypesUa[user.type as UserTypes]}\r\n      </span>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <h1>Користувачі</h1>\r\n        <input\r\n          type=\"text\"\r\n          value={searchValue}\r\n          onChange={handleSearch}\r\n          placeholder=\"Пошук за П.І.Б або ID\"\r\n          className={mainStyles.headerInput}\r\n        />\r\n        <HeaderSelect\r\n          options={categories}\r\n          onChange={handleSelectCategory}/>\r\n        <HeaderCheckbox\r\n          label='Тільки неверифіковані'\r\n          checked={unverifiedOnly}\r\n          setChecked={() => setUnverifiedOnly(prevState => !prevState)}\r\n        />\r\n        <Back path='/adminUsers'/>\r\n      </Header>\r\n      {loading ? <Loader/> : data?.users.length ? (\r\n        <DataList header={listHeader} data={data.users\r\n          .filter((user: User) => !user.nameTemp && isAvailableAccess(accessRights, user))\r\n          .filter((user: User) => (fullName(user) + user.id).toLowerCase()\r\n            .includes(searchValue))\r\n          .filter((user: User) => (fullName(user).toLowerCase() + user.id).includes(searchValue.toLowerCase()))\r\n          .filter((user: User) => categoryFilter === 'ALL' ? true : user.type === categoryFilter)\r\n          .filter((user: User) => unverifiedOnly ? user.studentInfo?.accountStatus === StudentAccountStatus.UNVERIFIED : true)\r\n          .map((item: User) => user(item))} gridTemplateColumns={'auto 3fr 200px'}\r\n                  isSearching={isSearching}\r\n        />\r\n      ) : (\r\n        <p>Користувачів не знайдено</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/Registry.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/schedule/Schedule.tsx",["714","715"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/profile/Profile.tsx",["716","717","718"],"import React, {useState} from \"react\";\r\nimport styles from \"./profile.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport useUsers from \"../../hooks/useUsers\";\r\nimport {StudentAccountStatus, User, UserTypes, UserTypesUa} from \"../../models/models\";\r\nimport {fullName} from \"../../helpers/helpers\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {isLoggedVar} from \"../../api/client\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useMe} from \"../../hooks/useMe\";\r\nimport Back from \"../../components/icons/edit/Back\";\r\n\r\nconst Profile = () => {\r\n  const me = useMe();\r\n  const history = useHistory();\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const handleLogout = () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm('Ви бажаете вийти?')) {\r\n      isLoggedVar(false);\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('token');\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <h1>Мій профіль</h1>\r\n        <Button color='red' onClick={handleLogout}>Вийти</Button>\r\n        {!editMode && <Back onClick={handleEdit}/>}\r\n      </Header>\r\n      <div className={styles.wrapper}>\r\n        {me && <div className={styles.profileData}>\r\n            <div><span>П.І.Б.:</span><span>{fullName(me)}</span></div>\r\n            <div><span>ID:</span><span>{me.id}</span></div>\r\n          {me.studentInfo.accountStatus === StudentAccountStatus.UNVERIFIED && <div><span>Верифіковано:</span><span>Ні</span></div>}\r\n            <div><span>Тип:</span><span>{UserTypesUa[me.type as UserTypes]}</span></div>\r\n          {me.department && <div><span>Кафедра:</span><span>{me.department.name}</span></div>}\r\n            <div><span>Тел.:</span><span>{me.phoneNumber}</span></div>\r\n          {me.extraPhoneNumbers && <div><span>Інші тел.:</span><span>\r\n                <ul>\r\n                  {JSON.parse(me.extraPhoneNumbers as string).map((item: string) => (<li>{item}</li>))}\r\n                </ul>\r\n            </span></div>}\r\n            <div><span>Дата закінчення</span><span>{me.expireDate}</span></div>\r\n            <div><span>Email:</span><span>{me.email}</span></div>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/PDFConfig.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/styles/selectStyles.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/models/models.ts",["719"],"import {bool} from \"yup\";\r\n\r\nexport enum ACCESS_RIGHTS {\r\n  USER,\r\n  DISPATCHER,\r\n  ADMIN\r\n}\r\n\r\nexport enum ErrorCodesUa {\r\n  INVALID_PASSWORD = \"Невірний пароль\",\r\n  USER_NOT_FOUND = \"Користувача не знайдено\",\r\n}\r\n\r\nexport enum ErrorCodes {\r\n  INVALID_PASSWORD = \"INVALID_PASSWORD\",\r\n  USER_NOT_FOUND = \"USER_NOT_FOUND\",\r\n}\r\n\r\nexport enum EmploymentTypes {\r\n  FULL_TIME = 'FULL_TIME',\r\n  PART_TIME = 'PART_TIME',\r\n  HOURLY = 'HOURLY',\r\n}\r\n\r\nexport enum EmploymentTypesUa {\r\n  FULL_TIME = 'Штатний співробітник',\r\n  PART_TIME = 'Часткова',\r\n  HOURLY = 'Погодинна',\r\n}\r\n\r\nexport enum UserTypes {\r\n  STUDENT = \"STUDENT\",\r\n  TEACHER = \"TEACHER\",\r\n  POST_GRADUATE = \"POST_GRADUATE\",\r\n  ADMIN = \"ADMIN\",\r\n  DISPATCHER = \"DISPATCHER\",\r\n  PIANO_TUNER = \"PIANO_TUNER\",\r\n  STAFF = \"STAFF\",\r\n  CONCERTMASTER = \"CONCERTMASTER\",\r\n  ILLUSTRATOR = \"ILLUSTRATOR\",\r\n  OTHER = \"OTHER\",\r\n}\r\n\r\nexport enum UserTypesUa {\r\n  STUDENT = \"Студент\",\r\n  TEACHER = \"Викладач\",\r\n  POST_GRADUATE = \"Асистент/аспірант\",\r\n  ADMIN = \"Адмін\",\r\n  DISPATCHER = \"Диспетчер\",\r\n  PIANO_TUNER = \"Настроювач фортепіано\",\r\n  STAFF = \"Співробітник\",\r\n  CONCERTMASTER = \"Концертмейстер\",\r\n  ILLUSTRATOR = \"Ілюстратор\",\r\n  OTHER = \"Користувач\",\r\n}\r\n\r\nexport enum UserTypeColors {\r\n  STUDENT = \"#1e2c4f\",\r\n  TEACHER = \"#ffa200\",\r\n  POST_GRADUATE = \"#1e2c4f\",\r\n  ADMIN = \"#ffa200\",\r\n  DISPATCHER = \"#ffa200\",\r\n  PIANO_TUNER = \"#ffa200\",\r\n  STAFF = \"#ffa200\",\r\n  CONCERTMASTER = \"#ffa200\",\r\n  ILLUSTRATOR = \"#ffa200\",\r\n  OTHER = \"#ffa200\",\r\n}\r\n\r\nexport enum ActivityTypes {\r\n  LECTURE = '#ffa200',\r\n  INDIVIDUAL_LESSON = '#2b5dff'\r\n}\r\n\r\nexport enum NotificationsTypes {\r\n  OK = \"ok\",\r\n  ALERT = \"alert\",\r\n  DEFAULT = \"default\",\r\n}\r\n\r\nexport type User = {\r\n  id: number;\r\n  createdAt: Date;\r\n  firstName: string;\r\n  patronymic: string | null;\r\n  lastName: string;\r\n  type: string;\r\n  department: Department;\r\n  email: string;\r\n  phoneNumber: string;\r\n  extraPhoneNumbers: string | null;\r\n  nameTemp: string | null;\r\n  startYear: number;\r\n  studentInfo: StudentInfo;\r\n  employeeInfo: EmployeeInfo;\r\n  expireDate: Date | null;\r\n  queue: QueueRecord[];\r\n  queueInfo: UserQueueInfo;\r\n  occupiedClassrooms: OccupiedInfo[];\r\n};\r\n\r\nexport type StudentInfo = {\r\n  degree: Degree;\r\n  startYear: number;\r\n  accountStatus: StudentAccountStatus;\r\n};\r\n\r\nexport type EmployeeInfo = {\r\n  employmentType: EmploymentTypes;\r\n  accountStatus: string;\r\n  isInUsage: boolean;\r\n};\r\n\r\nexport type OccupiedInfo = {\r\n  id: number;\r\n  user: User | null;\r\n  until: string;\r\n  state: OccupiedState;\r\n  classroom: ClassroomType;\r\n  classroomId: number;\r\n};\r\n\r\nexport enum OccupiedState {\r\n  FREE = 'FREE',\r\n  OCCUPIED = 'OCCUPIED',\r\n  PENDING = 'PENDING',\r\n  RESERVED = 'RESERVED'\r\n}\r\n\r\nexport enum OccupiedStateUa {\r\n  FREE = 'Вільно',\r\n  OCCUPIED = 'Зайнято',\r\n  PENDING = 'Очікує підтвердження',\r\n  RESERVED = 'Зарезервовано'\r\n}\r\n\r\nexport type Comment = {\r\n  id: number;\r\n  user: User;\r\n  body: string;\r\n  date: Date;\r\n};\r\n\r\nexport type InstrumentType = {\r\n  id: number;\r\n  type: string;\r\n  name: string;\r\n  rate: number;\r\n  persNumber: string;\r\n  comments: Comment | null;\r\n  classroom: ClassroomType;\r\n};\r\n\r\nexport enum DisabledState {\r\n  DISABLED = 'DISABLED',\r\n  NOT_DISABLED = 'NOT_DISABLED'\r\n}\r\n\r\nexport type DisabledInfo = {\r\n  state: DisabledState;\r\n  comment: string;\r\n  until: Date;\r\n};\r\n\r\nexport type ScheduleUnitType = {\r\n  id: number;\r\n  user: User;\r\n  classroom: ClassroomType;\r\n  dateStart: Date;\r\n  dateEnd: Date;\r\n  dayOfWeek: number;\r\n  from: string;\r\n  to: string;\r\n  activity: ScheduleUnitActivityT;\r\n  type: ScheduleUnitTypeT;\r\n  primaryScheduleUnit: ScheduleUnitType;\r\n};\r\n\r\nexport enum ScheduleUnitActivityT {\r\n  INDIVIDUAL_LESSON = 'Індивідуальні заняття',\r\n  LECTURE = 'Лекція'\r\n}\r\n\r\nexport enum ScheduleUnitTypeT {\r\n  PRIMARY = 'PRIMARY',\r\n  SUBSTITUTION = 'SUBSTITUTION'\r\n}\r\n\r\nexport type ClassroomType = {\r\n  id: number;\r\n  name: string;\r\n  chair: Department | null;\r\n  special: string | null;\r\n  floor: number;\r\n  isWing: boolean;\r\n  isOperaStudio: boolean;\r\n  description: string | null;\r\n  occupied: OccupiedInfo;\r\n  instruments: Array<InstrumentType>;\r\n  disabled: DisabledInfo | null;\r\n  schedule: Array<ScheduleUnitType>;\r\n  isHidden: boolean;\r\n  queueInfo: ClassroomQueueInfo;\r\n  color: string;\r\n};\r\n\r\nexport type ClassroomQueueInfo = {\r\n  classroom: ClassroomType;\r\n  queuePolicy: QueuePolicyInfo;\r\n}\r\n\r\nexport type QueuePolicyInfo = {\r\n  classroomQueueInfo: ClassroomQueueInfo;\r\n  policy: QueuePolicyTypes;\r\n  queueAllowedDepartments: ExclusivelyQueueAllowedDepartmentsInfo[];\r\n}\r\n\r\nexport type ExclusivelyQueueAllowedDepartmentsInfo = {\r\n  department: Department;\r\n  queuePolicyInfo: QueuePolicyInfo;\r\n}\r\n\r\nexport type RegisterUnit = {\r\n  id: number;\r\n  user: User;\r\n  nameTemp: string;\r\n  classroom: {\r\n    id: number;\r\n    name: string;\r\n  };\r\n  start: string;\r\n  end: string;\r\n};\r\n\r\nexport type Degree = {\r\n  id: number\r\n  name: string;\r\n  startMonth: number;\r\n  startDay: number;\r\n  durationMonths: number;\r\n};\r\n\r\nexport type Faculty = {\r\n  id: number;\r\n  name: string;\r\n  departments: Department[];\r\n  users: User[];\r\n}\r\n\r\nexport type Department = {\r\n  id: number;\r\n  name: string;\r\n  faculty: Faculty;\r\n  users: User[];\r\n};\r\n\r\nexport type MenuElement = {\r\n  text: string;\r\n  path: string;\r\n  icon: string;\r\n  exact?: boolean;\r\n  rights: string;\r\n};\r\n\r\nexport enum ClassroomsFilterTypes {\r\n  ALL = 'ALL',\r\n  FREE = 'FREE',\r\n  SPECIAL = 'SPECIAL'\r\n}\r\n\r\nexport enum QueueState {\r\n  ACTIVE = 'ACTIVE',\r\n  RESERVED = 'RESERVED'\r\n}\r\n\r\nexport enum QueueType {\r\n  MINIMAL = 'MINIMAL',\r\n  DESIRED = 'DESIRED'\r\n}\r\n\r\nexport type QueueRecord = {\r\n  id: number;\r\n  user: User;\r\n  date: string;\r\n  classroom: ClassroomType;\r\n  state: QueueState;\r\n  type: QueueType;\r\n}\r\n\r\nexport type LangT = 'ua' | 'en';\r\n\r\nexport enum EnqueuedBy {\r\n  SELF = 'SELF',\r\n  DISPATCHER = 'DISPATCHER'\r\n}\r\n\r\nexport type UserQueueInfo = {\r\n  id: number;\r\n  user: User;\r\n  sanctionedUntil: string;\r\n  currentSession: QueueSession\r\n}\r\n\r\nexport type QueueSession = {\r\n  id: number;\r\n  queueInfo: UserQueueInfo;\r\n  state: UserQueueState;\r\n  enqueuedBy: EnqueuedBy;\r\n  skips: number;\r\n  remainingOccupationTime: string;\r\n}\r\n\r\nexport enum UserQueueState {\r\n  IN_QUEUE_MINIMAL = 'IN_QUEUE_MINIMAL',\r\n  IN_QUEUE_DESIRED_AND_OCCUPYING = 'IN_QUEUE_DESIRED_AND_OCCUPYING',\r\n  QUEUE_RESERVED_NOT_OCCUPYING = 'QUEUE_RESERVED_NOT_OCCUPYING',\r\n  OCCUPYING = 'OCCUPYING',\r\n}\r\n\r\nexport enum StudentAccountStatus {\r\n  UNVERIFIED = 'UNVERIFIED',\r\n  ACTIVE = 'ACTIVE',\r\n  ACADEMIC_LEAVE = 'ACADEMIC_LEAVE'\r\n}\r\n\r\nexport enum EmployeeAccountStatus {\r\n  ACTIVE = 'ACTIVE',\r\n  FROZEN = 'FROZEN'\r\n}\r\n\r\nexport enum QueuePolicyTypes {\r\n  ALL_DEPARTMENTS = 'ALL_DEPARTMENTS',\r\n  SELECTED_DEPARTMENTS = 'SELECTED_DEPARTMENTS'\r\n}\r\n\r\nexport enum SpecialClassroomTypes {\r\n  PIANO = 'PIANO'\r\n}\r\n\r\nexport enum InstrumentTypesE {\r\n  UpRightPiano = 'UpRightPiano',\r\n  GrandPiano = 'GrandPiano'\r\n}\r\n\r\nexport enum InstrumentTypesEUa {\r\n  UpRightPiano = 'Піаніно',\r\n  GrandPiano = 'Рояль'\r\n}\r\n\r\nexport type CrashModeT = {\r\n  isActive: boolean;\r\n  comment: string;\r\n  until: Date | null;\r\n  globalMessage?: string;\r\n}\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/helpers.ts",["720","721","722"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/users.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/register.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/classrooms/Classrooms.tsx",["723","724"],"import React, {useEffect, useRef, useState} from \"react\";\nimport Header from \"../../components/header/Header\";\nimport {ACCESS_RIGHTS, ClassroomsFilterTypes, ClassroomType} from \"../../models/models\";\nimport Classroom from \"../../components/classroom/Classroom\";\nimport styles from \"./classrooms.module.css\";\nimport Caviar from \"../../components/caviar/Caviar\";\nimport {useNotification} from \"../../components/notification/NotificationProvider\";\nimport Back from \"../../components/icons/edit/Back\";\nimport useClassrooms from \"../../hooks/useClassrooms\";\nimport {filterClassrooms} from \"../../helpers/filterClassrooms\";\nimport HeaderCheckbox from \"../../components/headerCheckBox/HeaderCheckbox\";\nimport Loader from \"../../components/loader/Loader\";\nimport {useLocal} from \"../../hooks/useLocal\";\nimport {FOLLOW_CLASSROOMS} from \"../../api/operations/subscriptions/classrooms\";\nimport {MINUTE} from \"../../helpers/constants\";\nimport {client} from \"../../api/client\";\nimport {GET_CLASSROOMS} from \"../../api/operations/queries/classrooms\";\nimport {GET_USERS} from \"../../api/operations/queries/users\";\nimport Button from \"../../components/button/Button\";\nimport {DISPATCHER_STATUS} from \"../../api/operations/queries/dispatcherActive\";\nimport {FOLLOW_USERS} from \"../../api/operations/subscriptions/users\";\nimport {FOLLOW_DISPATCHER_STATUS} from \"../../api/operations/subscriptions/dispatcherStatus\";\nimport {useQuery} from \"@apollo/client\";\nimport {CRASH_MODE} from \"../../api/operations/queries/crashMode\";\nimport CrashModeAlert from \"./CrashModeAlert\";\n\nconst filters = [\n  {value: ClassroomsFilterTypes.ALL, label: 'Всі'},\n  {value: ClassroomsFilterTypes.FREE, label: 'Вільні'},\n  {value: ClassroomsFilterTypes.SPECIAL, label: 'Спеціалізовані'},\n];\n\nconst Classrooms = () => {\n  const [classrooms, subscribeToMore]: [ClassroomType[], any] = useClassrooms();\n  const {data: dataCrashMode} = useQuery(CRASH_MODE);\n  const [filter, setFilter] = useState(filters[0].value);\n  const [isNoWing, setIsNoWing] = useState(false);\n  const [isOperaStudioOnly, setIsOperaStudioOnly] = useState(false);\n  const [isAvailableForStudentOnly, setIsAvailableForStudentOnly] = useState(false);\n  const dispatchNotification = useNotification();\n  const {data: {accessRights}} = useLocal('accessRights');\n  let timer = useRef(null);\n  const [showResumePopup, setShowResumePopup] = useState(false);\n  const getData = async () => {\n    try {\n      await client.query({\n        query: GET_CLASSROOMS,\n        fetchPolicy: 'network-only'\n      });\n      await client.query({\n        query: GET_USERS,\n        fetchPolicy: 'network-only'\n      });\n      await client.query({\n        query: DISPATCHER_STATUS,\n        fetchPolicy: 'network-only'\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleResume = async () => {\n    await getData();\n    setShowResumePopup(false);\n  };\n\n  useEffect(() => {\n    const unsubscribeClassrooms = subscribeToMore({\n      document: FOLLOW_CLASSROOMS,\n    });\n    const unsubscribeUsers = subscribeToMore({\n      document: FOLLOW_USERS,\n    });\n    const unsubscribeDispatcherStatus = subscribeToMore({\n      document: FOLLOW_DISPATCHER_STATUS,\n    });\n\n    const interval = setInterval(() => {\n      client.query({\n        query: GET_CLASSROOMS\n      })\n    }, 40000);\n\n    window.addEventListener('click', handleGlobalClick);\n    window.addEventListener('focus', handleWindowFocusEvent);\n    window.addEventListener('freeze', handleFreezeEvent);\n    window.addEventListener('resume', handleResumeEvent);\n    window.addEventListener('keydown', handleKeyDownEvent);\n\n    return () => {\n      unsubscribeClassrooms();\n      unsubscribeUsers();\n      unsubscribeDispatcherStatus();\n\n      clearInterval(interval);\n\n      window.removeEventListener('click', handleGlobalClick);\n      window.removeEventListener('focus', handleWindowFocusEvent);\n      window.removeEventListener('resume', handleResumeEvent);\n      window.removeEventListener('freeze', handleFreezeEvent);\n      window.removeEventListener('freeze', handleKeyDownEvent);\n    }\n  }, []);\n\n  const handleGlobalClick = () => {\n    clearTimeout(timer.current);\n    timer.current = setTimeout(() => {\n      setShowResumePopup(true);\n    }, MINUTE * 15);\n  };\n\n  const handleWindowFocusEvent = () => {\n    getData();\n  };\n\n  const handleResumeEvent = () => {\n    getData();\n  };\n\n  const handleFreezeEvent = () => {\n\n  };\n\n  const handleKeyDownEvent = (e: any) => {\n    // if (e.key?.length === 1) {\n    //   const value = classnameKeys.current + e.key.toLowerCase();\n    //   classnameKeys.current = value;\n    // }\n    // if (e.key === 'Enter') {\n    //   classnameKeys.current = '';\n    // }\n  };\n\n  const handleFilterChange = (event: any) => {\n    setFilter(event.value);\n  };\n\n  const handleToggleWing = () => {\n    setIsNoWing(prevState => !prevState);\n  };\n\n  const handleToggleOperaStudio = () => {\n    setIsOperaStudioOnly(prevState => !prevState);\n  };\n\n  const handleToggleAvailableForStudent = () => {\n    setIsAvailableForStudentOnly(prevState => !prevState);\n  };\n\n  return (\n    <div className={styles.classroomsPage}>\n      {showResumePopup && <div className={styles.updateDataModal}>\n          <div className={styles.popup}>\n              <Button onClick={handleResume}>Продовжити роботу</Button>\n          </div>\n      </div>}\n      <Header>\n        <h1>Аудиторії</h1>\n        {/*<HeaderSelect options={filters} onChange={handleFilterChange}/>*/}\n        <HeaderCheckbox label='Без флігеля' checked={isNoWing} setChecked={handleToggleWing}/>\n        <HeaderCheckbox label='Тільки оперна студія' checked={isOperaStudioOnly}\n                        setChecked={handleToggleOperaStudio}\n        />\n        <HeaderCheckbox label='Доступні для видачі студенту' checked={isOperaStudioOnly}\n                        setChecked={handleToggleAvailableForStudent}\n        />\n        {accessRights === ACCESS_RIGHTS.ADMIN && <Back path='/adminClassrooms'/>}\n      </Header>\n      {!classrooms.length ? <Loader/> : (\n        <>\n          <Caviar dispatchNotification={dispatchNotification}\n                  classrooms={filterClassrooms(classrooms, filter, isOperaStudioOnly, isNoWing,\n                    isAvailableForStudentOnly)}\n          />\n          {dataCrashMode?.crashMode.isActive && (\n            <CrashModeAlert\n              comment={dataCrashMode.crashMode.comment}\n              until={dataCrashMode.crashMode.until}\n             />\n          )}\n          <ul className={styles.classroomsList}>\n            {filterClassrooms(classrooms, filter, isOperaStudioOnly, isNoWing,\n              isAvailableForStudentOnly)\n              .map((classroom: ClassroomType, index) => (\n                <Classroom\n                  dispatchNotification={dispatchNotification}\n                  key={classroom.id}\n                  classroom={classroom}\n                  index={index}\n                />\n              ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Classrooms;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/header/Header.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/button/Button.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/userProfile/UserProfile.tsx",["725"],"import React from \"react\";\r\nimport styles from \"./userProfile.module.css\";\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {GET_USER_BY_ID} from \"../../api/operations/queries/users\";\r\nimport Title from \"../title/Title\";\r\nimport {UserTypes, UserTypesUa} from \"../../models/models\";\r\nimport Button from \"../button/Button\";\r\nimport moment from \"moment\";\r\n\r\ninterface PropTypes {\r\n  userId: number;\r\n}\r\n\r\nconst NO_EMAIL = 'No email';\r\nconst NO_PHONE_NUMBER = 'No phone number';\r\n\r\nconst UserProfile: React.FC<PropTypes> = ({userId}) => {\r\n  const {data, loading, error} = useQuery(GET_USER_BY_ID, {\r\n    variables: {\r\n      where: {\r\n        id: userId,\r\n      }\r\n    },\r\n  });\r\n\r\n  if (!loading && !error)\r\n    return (\r\n      <div>\r\n        <Title title=\"Персональний номер\"/>\r\n        <p>{data.user.id}</p>\r\n        <Title title=\"Статус\"/>\r\n        <p>{UserTypesUa[data.user.type as UserTypes]}</p>\r\n        {data.user.department && (\r\n          <>\r\n            <Title title=\"Кафедра\"/>\r\n            <p>{data.user.department.name}</p>\r\n          </>\r\n        )}\r\n        <Title title=\"E-mail\"/>\r\n        <p>\r\n          <Button disabled={data.user.email === NO_EMAIL}>\r\n            <a className={styles.link} href={`mailto:${data.user.email}`}>\r\n              {data.user.email === NO_EMAIL ? 'Немає даних' : data.user.email}\r\n            </a>\r\n          </Button>\r\n        </p>\r\n        <Title title=\"Телефон\"/>\r\n        <p>\r\n          <Button disabled={data.user.phoneNumber === NO_PHONE_NUMBER}>\r\n            <a className={styles.link} href={`tel:${data.user.phoneNumber}`}>\r\n              {data.user.phoneNumber === NO_PHONE_NUMBER ? 'Немає даних' : data.user.phoneNumber}\r\n            </a>\r\n          </Button>\r\n        </p>\r\n      </div>\r\n    );\r\n  return <p>Loading...</p>;\r\n};\r\n\r\nexport default UserProfile;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/scheduleUnit/ScheduleUnit.tsx",["726"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/constants.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/schedule.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/departments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/classroom/Classroom.tsx",["727","728","729","730","731","732","733"],"import React, {useCallback, useEffect, useMemo, useRef, useState} from \"react\";\nimport styles from \"./classroom.module.css\";\nimport {\n  ClassroomType,\n  DisabledState,\n  OccupiedInfo,\n  OccupiedState,\n  OccupiedStateUa,\n  QueuePolicyTypes, ScheduleUnitType,\n  User,\n  UserTypes,\n  UserTypesUa,\n} from \"../../models/models\";\nimport {\n  defineOccupyStatus,\n  fullName,\n  isClassroomNotFree,\n  shouldOccupiedByTeacher,\n  typeStyle\n} from \"../../helpers/helpers\";\nimport Instruments from \"../instruments/Instruments\";\nimport {usePopupWindow} from \"../popupWindow/PopupWindowProvider\";\nimport ClassroomInfo from \"../ classroomInfo/ClassroomInfo\";\nimport Tag from \"../tag/Tag\";\nimport Footer from \"../footer/Footer\";\nimport specialPiano from \"../../assets/images/specialPiano.svg\";\nimport moment from \"moment\";\nimport unlockIcon from \"../../assets/images/unlock.svg\";\nimport lockIcon from \"../../assets/images/lock.svg\";\nimport {client} from \"../../api/client\";\nimport {ENABLE_CLASSROOM} from \"../../api/operations/mutations/enableClassroom\";\nimport {DISABLE_CLASSROOM} from \"../../api/operations/mutations/disableClassroom\";\nimport {GET_SCHEDULE_UNIT} from \"../../api/operations/queries/schedule\";\n\ninterface PropTypes {\n  classroom: ClassroomType;\n  dispatchNotification: (value: any) => void;\n  index: number;\n}\n\nconst Classroom: React.FC<PropTypes> = ({classroom, dispatchNotification, index}) => {\n  const {\n    id, name, occupied, instruments, isWing, isOperaStudio, special, schedule, chair,\n    isHidden, disabled, queueInfo: {queuePolicy: {policy, queueAllowedDepartments}}\n  } = classroom;\n  const userFullName = fullName(occupied.user as User, true);\n  const dispatchPopupWindow = usePopupWindow();\n  const [isOverdue, setIsOverDue] = useState(false);\n  // const occupiedOnSchedule = isOccupiedOnSchedule(schedule);\n  let timeout = useRef(null);\n  const [scheduleUnits, setScheduleUnits] = useState<ScheduleUnitType[]>([]);\n\n  const header = (\n    <>\n      <h1>{`Аудиторія ${name}`}</h1>\n      {isWing && <Tag body=\"Флігель\"/>}\n      {isOperaStudio && <Tag body=\"Оперна студія\"/>}\n    </>\n  );\n\n  useEffect(() => {\n    client.query({\n      query: GET_SCHEDULE_UNIT,\n      variables: {\n        classroomName: classroom.name,\n        date: moment().toISOString()\n      }\n    }).then(result => {\n      setScheduleUnits(result.data.schedule);\n    });\n    return () => clearTimeout(timeout.current);\n  }, []);\n\n  useEffect(() => {\n    if (classroom.occupied.state === OccupiedState.RESERVED) {\n      const untilString: string = classroom.occupied.until as unknown as string;\n      const diffInMs = moment(untilString).diff(moment());\n\n      if (diffInMs >= 0 && !timeout.current) {\n        timeout.current = setTimeout(() => setIsOverDue(true), diffInMs);\n      } else if (diffInMs <= 0) {\n        setIsOverDue(true);\n      } else {\n        setIsOverDue(false);\n      }\n    } else {\n      setIsOverDue(false);\n    }\n    if (occupied.state !== OccupiedState.RESERVED && timeout.current) clearTimeout(timeout.current);\n    defineStyle();\n    defineStatus();\n    defineStatusStiles();\n  }, [classroom]);\n\n  const defineStyle = () => {\n    const occupiedStyle = {\n      background: \"#fff\",\n      transition: \"all .3s cubic-bezier(0.25, 0.8, 0.25, 1)\",\n      border: isOverdue ? '4px solid red' : 'none'\n    };\n    const vacantStyle = {\n      background: \"#76e286\",\n      transition: \"all .3s cubic-bezier(0.25, 0.8, 0.25, 1)\",\n    };\n    const disableStyle = {\n      background: \"#b1b1b1\",\n      transition: \"all .3s cubic-bezier(0.25, 0.8, 0.25, 1)\",\n      border: isOverdue ? '4px solid red' : 'none'\n    };\n\n    if (disabled?.state === DisabledState.DISABLED\n      || (classroom.queueInfo.queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS\n        && !classroom.queueInfo.queuePolicy.queueAllowedDepartments.length)) return disableStyle;\n    if (isClassroomNotFree(occupied)) return occupiedStyle;\n    return vacantStyle;\n  };\n\n  const defineStatusStiles = () => {\n    if (isOverdue) return styles.overdue;\n    if (!isOverdue && occupied.state === OccupiedState.RESERVED) return styles.reserved;\n    else return ''\n  };\n\n  const defineStatus = useCallback(() => defineOccupyStatus(classroom, scheduleUnits, isOverdue), [scheduleUnits, classroom, isOverdue]);\n\n  const handleClick = () => {\n    dispatchPopupWindow({\n      header: header,\n      //@ts-ignore\n      body: <ClassroomInfo\n        classroom={classroom}\n        dispatchNotification={dispatchNotification}\n        dispatchPopupWindow={dispatchPopupWindow}\n      />,\n      footer: <Footer\n        classroomName={name}\n        classroomId={id}\n        disabled={disabled}\n        occupied={occupied}\n        dispatchNotification={dispatchNotification}\n        dispatchPopupWindow={dispatchPopupWindow}\n        isOverdue={isOverdue}\n      />,\n    });\n  };\n\n  const toggleDisable = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (disabled?.state === DisabledState.DISABLED) {\n      try {\n        await client.mutate({\n          mutation: ENABLE_CLASSROOM,\n          variables: {\n            input: {\n              classroomName: String(name)\n            }\n          }\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    } else {\n      try {\n        await client.mutate({\n          mutation: DISABLE_CLASSROOM,\n          variables: {\n            input: {\n              classroomName: String(name),\n              until: moment().add(1, 'hours').toISOString(),\n              comment: 'За розкладом'\n            }\n          }\n        })\n      } catch (e) {\n\n      }\n    }\n  }\n\n  return (\n    <>\n      <li\n        key={id}\n        className={styles.classroomsListItem}\n        style={{...defineStyle(), opacity: isHidden ? .5 : 1}}\n        onClick={handleClick}\n        tabIndex={index}\n      >\n        <div className={styles.header}>\n          {special === 'PIANO' && (\n            <img className={styles.special} src={specialPiano} alt=\"Special Piano\"/>\n          )}\n          {!isHidden && (\n            <img\n              src={disabled?.state === DisabledState.DISABLED ? lockIcon : unlockIcon}\n              alt={disabled?.state === DisabledState.DISABLED ? 'Разблокувати' : 'Заблокувати'}\n              className={disabled?.state === DisabledState.DISABLED ? styles.lockIcon : styles.unlockIcon}\n              title={disabled?.state === DisabledState.DISABLED ? 'Разблокувати' : 'Заблокувати за розкладом на 1 год.'}\n              onClick={toggleDisable}\n            />\n          )}\n          <h1 className={(policy === QueuePolicyTypes.SELECTED_DEPARTMENTS &&\n            queueAllowedDepartments.length) ? styles.isDepartment : ''}>{name}</h1>\n          {isClassroomNotFree(occupied) && (\n            <div className={styles.occupantInfo}>\n              <p className={styles.occupantName} title={userFullName}>{userFullName}</p>\n              <p style={typeStyle(occupied as OccupiedInfo)} className={styles.occupantType}>\n                {UserTypesUa[occupied.user?.type as UserTypes]}\n              </p>\n            </div>\n          )}\n        </div>\n        <div className={styles.occupationInfo}>\n          <p className={defineStatusStiles()}\n          >\n            {defineStatus()}\n          </p>\n        </div>\n        <Instruments instruments={instruments}/>\n      </li>\n    </>\n  );\n};\n\nexport default Classroom;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/Caviar.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/title/Title.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/instruments/Instruments.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/ClassroomInfo.tsx",["734","735"],"import React, {useEffect, useState} from \"react\";\nimport styles from \"./classroomInfo.module.css\";\nimport {ClassroomType, DisabledState, OccupiedState, QueuePolicyTypes, UserTypes} from \"../../models/models\";\nimport Instruments from \"../instruments/Instruments\";\nimport Title from \"../title/Title\";\nimport OccupantInfo from \"./occupantInfo/OccupantInfo\";\nimport OccupantRegistration from \"./occupantRegistration/OccupantRegistration\";\nimport {gql, useQuery} from \"@apollo/client\";\nimport {isClassroomNotFree, isStudent, isTimeout} from \"../../helpers/helpers\";\nimport {client} from \"../../api/client\";\nimport {GET_CLASSROOM} from \"../../api/operations/queries/classroom\";\nimport moment from \"moment\";\nimport {FREE_CLASSROOM} from \"../../api/operations/mutations/freeClassroom\";\nimport handleOperation from \"../../helpers/handleOperation\";\nimport ScheduleUnit from \"../scheduleUnit/ScheduleUnit\";\n\ninterface PropTypes {\n  classroom: ClassroomType;\n  dispatchNotification: (value: string) => void;\n  dispatchPopupWindow: (value: any) => void;\n  dispatch: (value: any) => void;\n}\n\nconst ClassroomInfo: React.FC<PropTypes> = ({\n                                              classroom, dispatchNotification, dispatch,\n                                              dispatchPopupWindow\n                                            }) => {\n  const {name, instruments, description, chair, occupied, id} = classroom;\n  const [queueSize, setQueueSize] = useState(0);\n  const [isOccupiedOverdue, setIsOccupiedOverdue] = useState(false);\n  const {data: {isPassed}} = useQuery(gql`\n    query isPassed {\n      isPassed @client\n    }\n  `);\n\n  useEffect(() => {\n    const isOverdueByStudent = occupied.state === OccupiedState.OCCUPIED &&\n      isStudent(occupied.user.type as UserTypes) && isTimeout(occupied.until);\n    setIsOccupiedOverdue(isOverdueByStudent as boolean);\n  }, [occupied.state, occupied.user, occupied.until]);\n\n  useEffect(() => {\n    if (occupied.state !== OccupiedState.FREE && !occupied.user) {\n      try {\n        client.mutate({\n          mutation: FREE_CLASSROOM,\n          variables: {\n            input: {\n              classroomName: String(name)\n            }\n          }\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    try {\n      client.query({\n        query: GET_CLASSROOM,\n        variables: {\n          where: {\n            id\n          }\n        },\n        fetchPolicy: 'network-only'\n      }).then(res => {\n        setQueueSize(res.data.classroom.queue?.length);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  const defineStatus = () => {\n    const {isHidden, disabled, queueInfo: {queuePolicy}, occupied} = classroom;\n    if (isOccupiedOverdue) return <span className={styles.overdue}>\n      {`Час занять в аудиторії прострочений на \n    ${((isTimeout(occupied.until, true) as number) / 1000 / 60)\n        .toFixed(0)} хв.`}\n    </span>\n    if (isHidden) return 'Аудиторія прихована';\n    if (disabled.state === DisabledState.DISABLED) {\n      return `Аудиторія відключена від черги до ${\n        moment(disabled.until).format('DD.MM.YYYY HH:mm')}. Причина: ${\n        disabled.comment\n      }`;\n    }\n    if (queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS\n      && queuePolicy.queueAllowedDepartments.length) {\n      return <>\n        <span>Аудиторія доступна для студентів: </span>\n        {queuePolicy.queueAllowedDepartments.map(({department: {name}}) => {\n          return <span className={styles.specialChair}>{name}</span>\n        })}\n      </>\n\n    }\n    if (queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS\n      && !queuePolicy.queueAllowedDepartments.length) {\n      return 'Аудиторія відключена від черги'\n    }\n    if (occupied.state === OccupiedState.FREE) return 'Аудиторія вільна'\n    if (occupied.state === OccupiedState.OCCUPIED) return 'Аудиторія зайнята'\n    if (occupied.state === OccupiedState.PENDING) return 'Аудиторія очікує підтвердження'\n    if (occupied.state === OccupiedState.RESERVED) return 'Аудиторія зарезервована'\n  }\n\n  return (\n    <div>\n      <p className={styles.description}>\n        {chair ? chair.name + \". \" + description : description}\n      </p>\n      <p>Черга за цією аудиторію: {queueSize ? `${queueSize} люд.` : 'відсутня'}</p>\n      {defineStatus()}\n      <Title title=\"Розклад на сьогодні\"/>\n      <ScheduleUnit classroomName={name}/>\n      {instruments?.length > 0 && <Instruments expanded instruments={instruments}/>}\n      {isClassroomNotFree(occupied) && !isPassed ? (\n        <OccupantInfo occupied={occupied}/>\n      ) : (\n        <>\n          <Title title=\"Запис в аудиторію\"/>\n          <OccupantRegistration\n            dispatchNotification={dispatchNotification}\n            dispatchPopupWindow={dispatchPopupWindow}\n            classroomId={id}\n            classroomName={name}\n            dispatch={dispatch}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ClassroomInfo;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tag/Tag.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/Footer.tsx",["736","737"],"import React, {useEffect, useState} from \"react\";\nimport Button from \"../button/Button\";\nimport styles from \"../classroom/classroom.module.css\";\nimport {\n  client,\n  disableClassroomBeforeFreeVar,\n  disabledTimeVar,\n  isButtonDisabledVar,\n  isPassedVar\n} from \"../../api/client\";\nimport {gql, useMutation, useQuery} from \"@apollo/client\";\nimport {FREE_CLASSROOM} from \"../../api/operations/mutations/freeClassroom\";\nimport {DisabledInfo, DisabledState, OccupiedInfo, OccupiedState, UserTypes} from \"../../models/models\";\nimport DisableClassroom from \"../DisableClassroom\";\nimport {DISABLE_CLASSROOM} from \"../../api/operations/mutations/disableClassroom\";\nimport {ENABLE_CLASSROOM} from \"../../api/operations/mutations/enableClassroom\";\nimport {fullName, isClassroomNotFree, isStudent, isTimeout} from \"../../helpers/helpers\";\nimport ConfirmFooter from \"./ConfirmFooter\";\nimport moment from \"moment\";\nimport {GIVE_OUT_CLASSROOM_KEY} from \"../../api/operations/mutations/giveOutClassroomKey\";\nimport ConfirmBody from \"./ConfirmBody\";\nimport {useLocal} from \"../../hooks/useLocal\";\nimport {GET_USER_OCCUPIED_CLASSROOMS_BY_USER_ID} from \"../../api/operations/queries/users\";\n\ninterface PropTypes {\n  classroomName: string;\n  occupied: OccupiedInfo;\n  disabled?: DisabledInfo;\n  dispatchNotification: (value: any) => void;\n  dispatchPopupWindow?: (value: any) => void;\n  classroomId?: number;\n  isOverdue?: boolean;\n}\n\nconst Footer: React.FC<PropTypes> = ({\n                                       classroomName, occupied, dispatchNotification,\n                                       dispatchPopupWindow,\n                                       disabled: disabledClassroom,\n                                       classroomId, isOverdue, ...props\n                                     }) => {\n    const [confirmSanctions, setConfirmSanction] = useState(false);\n    const [isOccupiedOverdue, setIsOccupiedOverdue] = useState(false);\n    const [freeClassroom] = useMutation(FREE_CLASSROOM, {\n      variables: {\n        input: {\n          classroomName: String(classroomName),\n          applySanction: isOverdue ? confirmSanctions : false\n        },\n      },\n    });\n    const [enableClassroom] = useMutation(ENABLE_CLASSROOM, {\n      variables: {\n        input: {\n          classroomName: String(classroomName)\n        }\n      }\n    });\n    const [giveOutKey] = useMutation(GIVE_OUT_CLASSROOM_KEY, {\n      variables: {\n        input: {\n          classroomName\n        }\n      }\n    })\n    const {data: {isButtonDisabled: disabled}} = useQuery(gql`\n    query isButtonDisabled {\n      isButtonDisabled @client\n    }\n  `);\n    const {data: {isPassed}} = useQuery(gql`\n    query isPassed {\n      isPassed @client\n    }\n  `);\n\n    useEffect(() => {\n      const isOverdueByStudent = occupied.state === OccupiedState.OCCUPIED &&\n        isStudent(occupied.user.type as UserTypes) && isTimeout(occupied.until);\n      setIsOccupiedOverdue(isOverdueByStudent as boolean);\n    }, [occupied.state, occupied.user, occupied.until]);\n\n    const handleFreeClassroom = async (name: string, freeMutationOnly = true) => {\n      const {data: {disabledTime}} = await client.query({\n        query: gql`query disabledTime { disabledTime @client }`\n      });\n\n      try {\n        if (disableClassroomBeforeFreeVar() && freeMutationOnly) {\n          const result = await client.mutate({\n            mutation: DISABLE_CLASSROOM,\n            variables: {\n              input: {\n                classroomName: String(name),\n                comment: 'За розкладом',\n                until: moment().add(disabledTime, 'minutes').toISOString()\n              }\n            },\n          });\n          if (result.data.disableClassroom.userErrors.length) {\n            result.data.disableClassroom.userErrors.forEach(({message}: any) => {\n              dispatchNotification({\n                header: \"Помилка\",\n                message,\n                type: \"alert\",\n              });\n            })\n          } else {\n            dispatchNotification({\n              header: \"Успішно!\",\n              message: `Аудиторія ${name} заблокована.`,\n              type: \"ok\",\n            });\n          }\n        }\n        const result = await client.mutate({\n          mutation: FREE_CLASSROOM,\n          variables: {\n            input: {\n              classroomName: String(name),\n              applySanction: isOverdue ? confirmSanctions : false\n            },\n          },\n        });\n        if (result.data.freeClassroom.userErrors.length) {\n          result.data.freeClassroom.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Успішно!\",\n            message: `Аудиторія ${name} звільнена.`,\n            type: \"ok\",\n          });\n          isButtonDisabledVar(false);\n          disabledTimeVar(15);\n          disableClassroomBeforeFreeVar(false);\n          // @ts-ignore\n          freeMutationOnly && props.dispatch({\n            type: \"POP_POPUP_WINDOW\",\n          });\n        }\n      } catch (e: any) {\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: e.message,\n          type: \"alert\",\n        });\n        isButtonDisabledVar(false);\n        disabledTimeVar(15);\n        disableClassroomBeforeFreeVar(false);\n      }\n    };\n\n    const handlePassClassroom = () => {\n      isPassedVar(true);\n    };\n\n    const submitDisable = async (comment: string, until: string) => {\n        try {\n          const result = await client.mutate({\n            mutation: DISABLE_CLASSROOM,\n            variables: {\n              input: {\n                classroomName: String(classroomName),\n                comment: comment || 'За розкладом',\n                until: moment(until).toISOString()\n              }\n            },\n          });\n          if (result.data.disableClassroom.userErrors.length) {\n            result.data.disableClassroom.userErrors.forEach(({message}: any) => {\n              dispatchNotification({\n                header: \"Помилка\",\n                message,\n                type: \"alert\",\n              });\n            })\n          } else {\n            dispatchNotification({\n              header: \"Успішно!\",\n              message: `Аудиторія ${classroomName} заблокована.`,\n              type: \"ok\",\n            });\n          }\n          //@ts-ignore\n          props.dispatch({\n            type: \"POP_POPUP_WINDOW\",\n          });\n          //@ts-ignore\n          props.dispatch({\n            type: \"POP_POPUP_WINDOW\",\n          });\n        } catch (e: any) {\n          dispatchNotification({\n            header: \"Помилка!\",\n            message: e.message,\n            type: \"alert\",\n          });\n        }\n    };\n\n    const handleDisableClassroom = () => {\n      dispatchPopupWindow && dispatchPopupWindow({\n        header: <h1>Заблокувати аудиторію</h1>,\n        body: (\n          <DisableClassroom onSubmit={submitDisable}/>\n        ),\n        footer: (\n          <>\n            <Button form='disableClassroomForm' type='submit' color='red'>Заблокувати</Button>\n          </>\n        )\n      });\n    };\n\n    const handleEnableClassroom = async () => {\n      try {\n        const result = await enableClassroom();\n        if (result.data.enableClassroom.userErrors.length) {\n          result.data.enableClassroom.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Успішно!\",\n            message: `Аудиторія ${classroomName} розблокована.`,\n            type: \"ok\",\n          });\n        }\n        //@ts-ignore\n        props.dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e: any) {\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: e.message,\n          type: \"alert\",\n        });\n      }\n    }\n\n    const confirmGiveOutKey = async () => {\n      let occupiedClassroom: any;\n      const result = await client.query({\n        query: GET_USER_OCCUPIED_CLASSROOMS_BY_USER_ID,\n        variables: {\n          where: {\n            id: occupied.user.id\n          }\n        }\n      })\n      if (!result.data.user) {\n        alert('error')\n      } else {\n        occupiedClassroom = result.data.user.occupiedClassrooms.find(({state}: any) => state === OccupiedState.OCCUPIED)\n      }\n      dispatchPopupWindow({\n        header: <h1>Увага!</h1>,\n        body: occupiedClassroom ? (\n            <>\n              <p>{`В даний момент користувач займає аудиторію ${occupiedClassroom.classroom.name}, з якої він буде автоматично виписаний.`}</p>\n              <p>{`Переконайтесь, що ключі від попередньої аудиторії (${occupiedClassroom.classroom.name}) були здані.`}</p>\n            </>\n          ) :\n          (\n            <span>{`Підтвердіть видачу ключа для ${fullName(occupied.user, true)}`}</span>\n          ),\n        footer: <ConfirmFooter onOk={() => handleGiveOutKey(occupiedClassroom)}/>,\n        isConfirm: true\n      });\n    }\n\n    const confirmFreeClassroom = () => {\n      dispatchPopupWindow({\n        header: <h1>Увага!</h1>,\n        body: <ConfirmBody/>,\n        footer: <ConfirmFooter onOk={() => handleFreeClassroom(classroomName)}/>,\n        isConfirm: true\n      });\n    }\n\n    const handleGiveOutKey = async (occupiedClassroom: any) => {\n      isButtonDisabledVar(true);\n      try {\n        if (occupiedClassroom) {\n          await handleFreeClassroom(occupiedClassroom.classroom.name, true);\n        }\n        const result = await giveOutKey();\n        if (result.data.giveOutClassroomKey.userErrors.length) {\n          result.data.giveOutClassroomKey.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Операція успішна!\",\n            message: \"Ключ видано\",\n            type: \"ok\",\n          });\n        }\n        //@ts-ignore\n        props.dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n        isButtonDisabledVar(false);\n      } catch (e: any) {\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: (e as any).message,\n          type: \"alert\",\n        });\n        isButtonDisabledVar(false);\n      }\n    }\n\n    const DisabledButton = () => disabledClassroom?.state === DisabledState.DISABLED ? (\n      <Button color=\"red\" onClick={handleEnableClassroom}>Розблокувати</Button>\n    ) : (\n      <Button color=\"red\" onClick={handleDisableClassroom}>Заблокувати</Button>\n    );\n\n    return (\n      <div className={styles.footer}>\n        {(isOverdue || isOccupiedOverdue) && <span className={styles.sanctions}>\n                <label>З застосуванням санкцій</label>\n                <input type='checkbox' checked={confirmSanctions}\n                       onChange={e => setConfirmSanction(e.target.checked)}\n                />\n            </span>}\n        {isClassroomNotFree(occupied) && !isPassed ? (\n          <>\n            <DisabledButton/>\n            <div>\n              <Button onClick={handlePassClassroom}>\n                Передати\n              </Button>\n              <Button onClick={confirmFreeClassroom} disabled={disabled} color='red'>\n                Звільнити {confirmSanctions ? '(з санкціями)' : ''}\n              </Button>\n              {occupied.state === OccupiedState.RESERVED && (\n                <>\n                  <Button onClick={confirmGiveOutKey} disabled={disabled}\n                          style={{padding: '0 40px', height: '2.5rem'}}>\n                    Видати ключ\n                  </Button>\n\n                </>\n              )}\n            </div>\n          </>\n        ) : (\n          <>\n            <DisabledButton/>\n            <Button type=\"submit\" form=\"userSearchForm\" disabled={disabled}>\n              Записати {confirmSanctions ? '(з санкціями для попереднього користувача)' : ''}\n            </Button>\n          </>\n        )}\n      </div>\n    );\n  }\n;\n\nexport default Footer;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/freeClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantRegistration/OccupantRegistration.tsx",["738","739","740","741"],"import React, {FormEvent, useEffect, useRef, useState,} from \"react\";\nimport styles from \"./occupantRegistration.module.css\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {GET_USER_OCCUPIED_CLASSROOMS_BY_USER_ID, GET_USERS} from \"../../../api/operations/queries/users\";\nimport {formatTempName, fullName, isStudent} from \"../../../helpers/helpers\";\nimport Title from \"../../title/Title\";\nimport Select from 'react-select';\nimport {\n  EmployeeAccountStatus,\n  OccupiedState, ScheduleUnitType,\n  StudentAccountStatus,\n  User,\n  UserTypes,\n  UserTypesUa\n} from \"../../../models/models\";\nimport {OCCUPY_CLASSROOM} from \"../../../api/operations/mutations/occupyClassroom\";\nimport {client, isButtonDisabledVar} from \"../../../api/client\";\nimport ConfirmFooter from \"../../footer/ConfirmFooter\";\nimport moment from \"moment\";\nimport {GET_SCHEDULE_UNIT} from \"../../../api/operations/queries/schedule\";\nimport Button from \"../../button/Button\";\nimport clockIcon from \"../../../assets/images/clock.svg\";\nimport ChooseTime from \"./chooseTime/ChooseTime\";\n\ninterface PropTypes {\n  dispatchNotification: (value: any) => void;\n  dispatchPopupWindow: (value: any) => void;\n  classroomId: number;\n  classroomName: string;\n  dispatch: (value: any) => void;\n}\n\nconst OccupantRegistration: React.FC<PropTypes> = ({\n                                                     dispatchNotification, classroomId,\n                                                     classroomName, dispatch, dispatchPopupWindow\n                                                   }) => {\n  const [value, setValue] = useState<string>();\n  const [existingUserValue, setExistingUserValue] = useState(null);\n  const [chosenUserId, setChosenUserId] = useState(-1);\n  const [chosenUserName, setChosenUserName] = useState('');\n  const {data, loading, error} = useQuery(GET_USERS);\n  const [occupyClassroom] = useMutation(OCCUPY_CLASSROOM);\n  const [users, setUsers] = useState();\n  const [scheduleUsers, setScheduleUsers] = useState([]);\n  const [scheduleUnits, setScheduleUnits] = useState<ScheduleUnitType[]>([]);\n  const [until, setUntil] = useState(3);\n  const newUserTypes: any = [\n    {value: UserTypes.STUDENT, label: UserTypesUa.STUDENT},\n    {value: UserTypes.POST_GRADUATE, label: UserTypesUa.POST_GRADUATE},\n    {value: UserTypes.TEACHER, label: UserTypesUa.TEACHER},\n    {value: UserTypes.ILLUSTRATOR, label: UserTypesUa.ILLUSTRATOR},\n    {value: UserTypes.CONCERTMASTER, label: UserTypesUa.CONCERTMASTER},\n    {value: UserTypes.PIANO_TUNER, label: UserTypesUa.PIANO_TUNER},\n    {value: UserTypes.STAFF, label: UserTypesUa.STAFF},\n    {value: UserTypes.OTHER, label: UserTypesUa.OTHER},\n  ];\n  const [chosenUserType, setChosenUserType] = useState(newUserTypes[7]);\n  const existingUserInput = useRef(null);\n\n  //@ts-ignore\n  useEffect(() => {\n    client.query({\n      query: GET_SCHEDULE_UNIT,\n      variables: {\n        classroomName,\n        date: moment().toISOString(),\n      }\n    }).then(({data: schedule}) => {\n      setScheduleUnits(schedule);\n      setScheduleUsers(schedule.schedule.filter((unit: ScheduleUnitType) => {\n        const date = moment().format('YYYY-MM-DD');\n        const diff = moment(date + ' ' + unit.to).diff(moment());\n        return diff > 0;\n      })\n        .map((unit: ScheduleUnitType) => {\n          return ({name: fullName(unit.user, true), id: unit.user.id});\n        }));\n    });\n    existingUserInput.current.focus();\n  }, []);\n\n  useEffect(() => {\n    if (!loading && !error) {\n      setUsers(data.users.slice()\n        .sort((a: User, b: User) => a.id - b.id)\n        .filter(({studentInfo, employeeInfo, nameTemp}: User) => {\n          return (studentInfo && studentInfo.accountStatus === StudentAccountStatus.ACTIVE) ||\n            (employeeInfo && employeeInfo.accountStatus === EmployeeAccountStatus.ACTIVE) &&\n            !nameTemp\n        })\n        .map((user: User) => ({label: user.id + \": \" + fullName(user), value: user.id})));\n    }\n  }, [data, error, loading]);\n\n  const handleTimeSettingsModalShow = () => {\n    dispatchPopupWindow({\n      header: <ChooseTime.Header/>,\n      body: <ChooseTime.Body until={until} setUntil={setUntil}/>,\n      footer: <ChooseTime.Footer/>,\n      isConfirm: true\n    });\n  };\n\n  const handleReset = () => {\n    setExistingUserValue(null);\n  };\n\n  const handleExistingUser = (e: any) => {\n    const chosenUser = (data.users as unknown as Array<User>)?.find(user => user.id === e.value);\n\n    setChosenUserId(e.value);\n    setChosenUserName(fullName(chosenUser as User));\n    setChosenUserType({value: (chosenUser as User).type, label: UserTypesUa[(chosenUser?.type as UserTypes)]});\n    setValue('');\n    setExistingUserValue(e);\n  };\n\n  const handleNewUser = (e: any) => {\n    if (e.target.value.length === 1) {\n      setChosenUserType(newUserTypes[7]);\n    }\n\n    setChosenUserId(-1);\n    setValue(e.target.value);\n    setChosenUserName(e.target.value);\n    setExistingUserValue(null);\n  }\n\n  const handleTypeSelect = (e: any) => {\n    setChosenUserType(e);\n  };\n\n  const confirmOccupyAnotherClassroom = (oldClassroomName: string) => {\n    dispatchPopupWindow({\n      header: <h1>Увага!</h1>,\n      body: <span>Користувач знаходиться в аудиторії {oldClassroomName}. Після підтвердження користувача буде виписано з аудиторіЇ {oldClassroomName} і записано до аудиторії {classroomName}.</span>,\n      footer: <ConfirmFooter onOk={handleOccupy}/>,\n      isConfirm: true\n    });\n  }\n\n  const checkChosenUserIsOccupiedPreviously = async () => {\n    if (chosenUserId === -1) return await handleOccupy();\n    try {\n      const chosenUserOccupiedInfo = await client.query({\n        query: GET_USER_OCCUPIED_CLASSROOMS_BY_USER_ID,\n        variables: {\n          where: {\n            id: chosenUserId,\n          }\n        },\n        fetchPolicy: 'network-only'\n      });\n      const occupiedClassrooms = chosenUserOccupiedInfo.data.user.occupiedClassrooms;\n      if (occupiedClassrooms?.length) {\n        const occupiedOrReservedClassrooms = occupiedClassrooms.filter((classroom: any) => {\n          return classroom.state === OccupiedState.RESERVED || classroom.state === OccupiedState.OCCUPIED\n        });\n        if (occupiedOrReservedClassrooms.length) {\n          confirmOccupyAnotherClassroom(occupiedOrReservedClassrooms[0].classroom.name);\n        } else {\n          await handleOccupy();\n        }\n      } else {\n        await handleOccupy();\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  const onOccupyClick = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    await checkChosenUserIsOccupiedPreviously();\n  };\n\n  const handleOccupy = async () => {\n    const existingUser = {\n      userId: chosenUserId,\n    };\n    const newUser = {\n      userId: chosenUserId,\n      tempUser: {\n        name: formatTempName(chosenUserName),\n        type: chosenUserType.value\n      }\n    };\n    const occupant = chosenUserId === -1 ? newUser : existingUser;\n\n    if (chosenUserName !== \"\") {\n      isButtonDisabledVar(true);\n      const result = await occupyClassroom({\n        variables: {\n          input: {\n            classroomName: classroomName.toString(),\n            until: !isStudent(chosenUserType.value) || until === -1\n              ? moment().set('hours', 23).set('minutes', 59).set('seconds', 59).toISOString()\n              : moment().add(until, 'hours').toISOString(),\n            ...occupant\n          }\n        }\n      })\n      if (result.data.occupyClassroom.userErrors.length) {\n        result.data.occupyClassroom.userErrors.forEach(({message}: any) => {\n          dispatchNotification({\n            header: \"Помилка\",\n            message,\n            type: \"alert\",\n          });\n        })\n      } else {\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Аудиторія ${classroomName} зайнята.`,\n          type: \"ok\",\n        });\n      }\n      dispatch({\n        type: \"POP_POPUP_WINDOW\",\n      });\n      isButtonDisabledVar(false);\n    } else {\n      dispatchNotification({\n        header: \"Помилка\",\n        message: `Виберіть користувача.`,\n        type: \"alert\",\n      });\n      isButtonDisabledVar(false);\n    }\n  };\n\n  return (\n    <div>\n      <form\n        id=\"userSearchForm\"\n        className={styles.userSearch}\n        onSubmit={onOccupyClick}\n      >\n        <Select\n          placeholder=\"Існуючі користувачі\"\n          options={users}\n          value={existingUserValue}\n          styles={{menuPortal: base => ({...base, zIndex: 9999})}}\n          menuPortalTarget={document.body}\n          onChange={handleExistingUser}\n          onFocus={handleReset}\n          ref={existingUserInput}\n        />\n        <div>\n          <input\n            type=\"text\"\n            value={value}\n            onChange={handleNewUser}\n            name=\"tempUsersInput\"\n            id=\"tempUsersInput\"\n            placeholder=\"Тимчасовий користувач\"\n            className={styles.createUserInput}\n            autoComplete=\"off\"\n          />\n          {value && <Select\n              options={newUserTypes}\n              value={chosenUserType}\n              placeholder={UserTypesUa.OTHER}\n              onChange={handleTypeSelect}\n              menuPortalTarget={document.body}\n              styles={{menuPortal: base => ({...base, zIndex: 9999})}}\n          />}\n        </div>\n      </form>\n      <div>\n        {scheduleUsers.map((user: any) => {\n          const data = {value: user.id, label: user.name}\n          return (\n            <Button style={{height: 30, marginRight: 5}} onClick={() => handleExistingUser(data)}>\n              {user.name}\n            </Button>\n          );\n        })}\n      </div>\n      <Title title=\"Вибраний користувач\"/>\n      <p>П.І.Б.: {chosenUserName}</p>\n      {/*@ts-ignore*/}\n      <p>Статус: {chosenUserType && chosenUserName?.length !== 0 && UserTypesUa[chosenUserType.value]}</p>\n      <div className={styles.time} onClick={handleTimeSettingsModalShow}>\n        {isStudent(chosenUserType.value) && (\n          <>\n            <img src={clockIcon} width={24} height={24} alt='time'/>\n            <span>До {until !== -1\n              ? moment().add(until, 'hours').format('HH:mm')\n              : 'кінця дня'}</span>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OccupantRegistration;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tooltip/Tooltip.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantInfo/OccupantInfo.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/occupyClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/delete/Delete.tsx",["742"],"import React from 'react';\nimport deleteIcon from \"../../../assets/images/delete.svg\";\nimport styles from \"./delete.module.css\";\n\ninterface PropTypes {\n  onClick?: (value?: any) => void;\n}\n\nconst Delete: React.FC<PropTypes> = ({onClick}) => {\n\n  return (\n    <img src={deleteIcon} className={styles.deleteIcon} onClick={(e) => {\n      e.stopPropagation();\n      onClick && onClick();\n    }}/>\n  );\n}\n\nexport default Delete;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/HeaderSelect.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/selectStyles.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/filterClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerCheckBox/HeaderCheckbox.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/dataList/DataList.tsx",["743"],"import React, {useEffect, useState} from 'react';\nimport styles from './dataList.module.css';\nimport Loader from \"../loader/Loader\";\n\ninterface PropTypes {\n  header: string[];\n  data: Array<any>;\n  gridTemplateColumns?: string;\n  handleItemClick?: (id: any) => void;\n  isSearching?: boolean;\n}\n\nconst DataList: React.FC<PropTypes> = ({\n                                         header, data, gridTemplateColumns,\n                                         handleItemClick, isSearching = false\n                                       }) => {\n\n  const [columnIndex, setColumnIndex] = useState(0);\n  const [sortedData, setSortedData] = useState(data);\n  const [columns, setColumns] = useState('repeat(3, 1fr)');\n\n  useEffect(() => {\n    setSortedData(data);\n    if (gridTemplateColumns) {\n      setColumns(gridTemplateColumns);\n    } else {\n      setColumns(`20px 3fr 200px`);\n    }\n  }, [data, gridTemplateColumns]);\n\n  useEffect(() => {\n    setSortedData(data?.slice().sort((a, b) => {\n      const aValue = a.props.children[columnIndex].props.children;\n      const bValue = b.props.children[columnIndex].props.children;\n      if (typeof aValue === 'string') {\n        return aValue\n          .localeCompare(bValue, undefined, {numeric: true, sensitivity: 'base'});\n      }\n      return aValue - bValue;\n    }));\n  }, [columnIndex, data]);\n\n  const handleClick = (index: number) => {\n    setColumnIndex(index);\n  };\n\n  return (\n    <div className={styles.container}>\n      <ul className={styles.list}>\n        <li className={styles.headerRow} style={{gridTemplateColumns: columns}}>\n          {header?.map((item, index) => <span\n            onClick={() => handleClick(index)}>{item}</span>)}\n        </li>\n        {!data.length\n          ? <li className={styles.emptyResult}>Нічого не знайдено</li>\n          : sortedData?.map(item => <li\n            onClick={() => handleItemClick && handleItemClick(item.props.children[0].props.children)}\n            className={styles.row} style={{gridTemplateColumns: columns}}>{item}</li>)}\n      </ul>\n    </div>\n  );\n}\n\nexport default DataList;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useUsers.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useInstruments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/instruments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createInstrument.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteInstrument.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateInstrument.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDepartments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useFaculties.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/faculties.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDepartment.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDepartment.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDepartment.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteFaculty.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createFaculty.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateFaculty.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDegrees.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDegree.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDegree.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDegree.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/degrees.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useClassrooms.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/loader/Loader.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/AdminClassrooms.tsx",["744"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/AdminUsers.tsx",["745","746","747","748"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/AdminFaculties.tsx",["749"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/AdminDegrees.tsx",["750"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/AdminDepartments.tsx",["751"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/admin/Admin.tsx",["752","753","754"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/AdminInstruments.tsx",["755"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/createClassroomPopupBody/CreateClassroomPopupBody.tsx",["756","757","758"],"import React, {Fragment, useEffect, useRef, useState} from 'react';\nimport styles from './createClassroomPopupBody.module.css';\nimport Select, {components} from \"react-select\";\nimport {useMutation} from \"@apollo/client\";\nimport {\n  ClassroomType,\n  Department,\n  ExclusivelyQueueAllowedDepartmentsInfo,\n  InstrumentType, InstrumentTypesE, InstrumentTypesEUa,\n  QueuePolicyTypes,\n  SpecialClassroomTypes\n} from \"../../../../models/models\";\nimport {useForm} from \"react-hook-form\";\nimport {CREATE_CLASSROOM} from \"../../../../api/operations/mutations/createClassroom\";\nimport {GET_CLASSROOMS} from \"../../../../api/operations/queries/classrooms\";\nimport {client} from \"../../../../api/client\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport useInstruments from \"../../../../hooks/useInstruments\";\nimport mainStyles from \"../../../../styles/main.module.css\";\nimport useDepartments from \"../../../../hooks/useDepartments\";\nimport addIcon from '../../../../assets/images/addLined.svg';\nimport moment from \"moment\";\nimport {UPDATE_CLASSROOM} from \"../../../../api/operations/mutations/updateClassroom\";\n\ninterface PropTypes {\n  dispatch: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  item?: ClassroomType;\n}\n\nconst colors = [\n  {value: '#ffffff00', label: 'Немає'},\n  {value: '#000000', label: 'Чорний'},\n  {value: '#ff0000', label: 'Червоний'},\n  {value: '#00ff00', label: 'Зелений'},\n  {value: '#0000ff', label: 'Синій'},\n]\n\nconst CreateClassroomPopupBody: React.FC<PropTypes> = ({\n                                                         item,\n                                                         dispatchNotification, ...props\n                                                       }) => {\n  const departmentsData = useDepartments();\n  const instrumentsData = useInstruments();\n  const [createClassroom] = useMutation(CREATE_CLASSROOM);\n  const [departments, setDepartments] = useState<any>([]);\n  const [selectedDepartment, setSelectedDepartment] = useState<any>();\n  const [selectedColor, setSelectedColor] = useState<any>(colors[0]);\n  const [selectedAllowedDepartments, setSelectedAllowedDepartments] = useState([]);\n  const [allowedForSelectedDepartments, setAllowedForSelectedDepartments] = useState(false);\n  const [instruments, setInstruments] = useState<any>([]);\n  const [selectedInstruments, setSelectedInstruments] = useState<any>([]);\n  const [freeInstrumentsOnly, setFreeInstrumentsOnly] = useState(true);\n  const {register, handleSubmit, setValue, watch, formState: {errors}} = useForm();\n  const firstFieldRef = useRef(null);\n\n  useEffect(() => {\n    firstFieldRef.current && firstFieldRef.current.focus();\n  }, [firstFieldRef]);\n\n  useEffect(() => {\n    setDepartments(departmentsData.map((dep: Department) => ({value: dep.id, label: dep.name})));\n    if (item && item.chair) {\n      setSelectedDepartment({value: item.chair.id, label: item.chair.name});\n    }\n  }, [departmentsData]);\n\n  useEffect(() => {\n    if (freeInstrumentsOnly && instrumentsData) {\n      const filteredInstruments = instrumentsData.filter(item => !item.classroom);\n\n      setMappedInstruments(filteredInstruments);\n    } else {\n      setMappedInstruments(instrumentsData);\n    }\n  }, [freeInstrumentsOnly, instrumentsData]);\n\n  useEffect(() => {\n    if (item && item.color) {\n      const color = colors.find(({value}) => value === item.color);\n      setSelectedColor(color ? color : colors[0]);\n    }\n    if (item && item.instruments) {\n      const itemInstruments = item.instruments\n        .map(({id, name, type, persNumber}) => ({\n          value: id, label: name + ' ('\n            + InstrumentTypesEUa[type as InstrumentTypesE].toLowerCase() + ') '\n            + (persNumber ? ', ' + persNumber : '')\n        }));\n      setSelectedInstruments(itemInstruments);\n    }\n    if (item && item.queueInfo.queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS) {\n      setAllowedForSelectedDepartments(true);\n      setMappedSelectedAllowedDepartments(item.queueInfo.queuePolicy.queueAllowedDepartments)\n    }\n  }, [])\n\n  const setMappedInstruments = (data: InstrumentType[]) => {\n    setInstruments(data.map((item) => ({\n      value: item.id, label: item.name + ' ('\n        + InstrumentTypesEUa[item.type as InstrumentTypesE].toLowerCase()\n        + ') ' + item.persNumber\n    })));\n  };\n\n  const setMappedSelectedAllowedDepartments = (data: ExclusivelyQueueAllowedDepartmentsInfo[]) => {\n    setSelectedAllowedDepartments(data.map(({department}) => ({\n      value: department.id, label: department.name\n    })));\n  };\n\n  const onSubmit = async (data: any) => {\n    if (item) {\n      const newInstruments = item.instruments ? selectedInstruments.filter(({value}: any) => {\n        return !(item.instruments.some(instrument => instrument.id === value))\n      }).map(({value}: any) => ({id: value})) : selectedInstruments\n        .map(({value}: any) => ({id: value}));\n\n      const removedInstruments = item.instruments ? item.instruments.filter(instrument => {\n        return !(selectedInstruments.some(({value}: any) => value === instrument.id))\n      }).map(({id}: any) => ({id})) : [];\n\n      const newQueueAllowedDepartments = item.queueInfo.queuePolicy.queueAllowedDepartments ?\n        selectedAllowedDepartments.filter(({value}: any) => {\n          return !(item.queueInfo.queuePolicy.queueAllowedDepartments\n            .some(allowedDep => allowedDep.department.id === value))\n        }).map(({value}: any) => ({departmentId: value})) : selectedAllowedDepartments\n          .map(({value}: any) => ({departmentId: value}));\n\n      const removedQueueAllowedDepartments = item.queueInfo.queuePolicy.queueAllowedDepartments ?\n        item.queueInfo.queuePolicy.queueAllowedDepartments.filter(({department}) => {\n          return !(selectedAllowedDepartments.some(({value}: any) => value === department.id))\n        }).map(({id}: any) => ({departmentId: id})) : [];\n\n      try {\n        const result = await client.mutate({\n          mutation: UPDATE_CLASSROOM,\n          variables: {\n            data: {\n              name: data.name ? {\n                set: data.name\n              } : undefined,\n              special: data.special ? {\n                set: SpecialClassroomTypes.PIANO\n              } : undefined,\n              floor: data.floor ? {\n                set: Number(data.floor)\n              } : undefined,\n              isWing: {\n                set: data.isWing\n              },\n              isOperaStudio: {\n                set: data.isOperaStudio\n              },\n              description: data.description !== null ? {\n                set: data.description\n              } : undefined,\n              isHidden: {\n                set: data.isHidden\n              },\n              chair: item.chair && !selectedDepartment ? {\n                disconnect: true\n              } : selectedDepartment?.value !== item.chair?.id ? {\n                connect: {\n                  id: selectedDepartment.value\n                }\n              } : undefined,\n              instruments: {\n                connect: newInstruments,\n                disconnect: removedInstruments\n              },\n              color: {\n                set: selectedColor.value\n              },\n              queueInfo: {\n                update: {\n                  queuePolicy: {\n                    update: {\n                      policy: {\n                        set: allowedForSelectedDepartments ? QueuePolicyTypes.SELECTED_DEPARTMENTS\n                          : QueuePolicyTypes.ALL_DEPARTMENTS\n                      },\n                      queueAllowedDepartments:\n                        allowedForSelectedDepartments ? {\n                          deleteMany: removedQueueAllowedDepartments,\n                          createMany: {\n                            data: newQueueAllowedDepartments\n                          }\n                        } : {\n                          deleteMany: removedQueueAllowedDepartments\n                        }\n                    }\n                  }\n                }\n              },\n            },\n            where: {\n              id: item.id\n            }\n          }\n        })\n        if (result.data.updateOneClassroom.userErrors?.length) {\n          result.data.updateOneClassroom.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Успішно!\",\n            message: `Аудиторія ${item.name} змінена.`,\n            type: \"ok\",\n          });\n          props.dispatch({\n            type: \"POP_POPUP_WINDOW\",\n          });\n        }\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка\",\n          message: JSON.stringify(e),\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        const result = await createClassroom({\n          variables: {\n            data: {\n              name: data.name,\n              special: data.special ? SpecialClassroomTypes.PIANO : undefined,\n              floor: Number(data.floor),\n              isWing: data.isWing,\n              isOperaStudio: data.isOperaStudio,\n              description: data.description,\n              chair: selectedDepartment ? {connect: {id: selectedDepartment.value}} : undefined,\n              instruments: selectedInstruments.length > 0\n                ? {connect: selectedInstruments.map((item: any) => ({id: item.value}))} : undefined,\n              orderIndex: 0,\n              isHidden: data.isHidden,\n              color: selectedColor.value,\n              queueInfo: {\n                create: {\n                  queuePolicy: {\n                    create: {\n                      policy: allowedForSelectedDepartments ? QueuePolicyTypes.SELECTED_DEPARTMENTS\n                        : QueuePolicyTypes.ALL_DEPARTMENTS,\n                      queueAllowedDepartments: allowedForSelectedDepartments ? {\n                        createMany: {\n                          data: selectedAllowedDepartments.map(({value}: any) => ({departmentId: value}))\n                        }\n                      } : undefined\n                    }\n                  }\n                }\n              }\n            }\n          }\n        });\n        if (result.data.createOneClassroom.userErrors?.length) {\n          result.data.createOneClassroom.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Успішно!\",\n            message: `Аудиторія ${data.name} створена.`,\n            type: \"ok\",\n          });\n        }\n      } catch (e) {\n        dispatchNotification({\n          header: \"Помилка\",\n          message: JSON.stringify(e),\n          type: \"alert\",\n        });\n      }\n      await client.query({\n        query: GET_CLASSROOMS,\n        variables: {date: moment().toISOString()},\n        fetchPolicy: 'network-only',\n      });\n      props.dispatch({\n        type: \"POP_POPUP_WINDOW\",\n      });\n    }\n  };\n\n  const handleSelectDepartment = (e: any) => {\n    setSelectedDepartment(e);\n  };\n\n  const handleSelectInstrument = (e: any) => {\n    setSelectedInstruments([...e]);\n  };\n\n  const handleSelectColor = (e: any) => {\n    setSelectedColor(e);\n  };\n\n  const handleSelectAllowedDepartment = (e: any) => {\n    setSelectedAllowedDepartments([...e]);\n  };\n\n  const handleFreeInstruments = () => {\n    setFreeInstrumentsOnly(prevState => !prevState);\n  };\n\n  const DropdownIndicator = () => {\n    return <img src={addIcon} alt=\"Додати\" className={styles.addInstrumentIcon}/>\n  };\n\n  const MenuList = (props: any) => {\n    return (\n      <>\n        <div>\n          <span className={styles.instrumentsCheckbox}>\n          <input type=\"checkbox\" checked={freeInstrumentsOnly} onChange={handleFreeInstruments}/>\n          Вибирати серед інструментів без аудиторій\n        </span>\n        </div>\n        <components.MenuList {...props}>{props.children}</components.MenuList>\n      </>\n    );\n  };\n\n  return <div className={styles.wrapper}>\n    <form className={styles.container} onSubmit={handleSubmit(onSubmit)} id='createClassroom'>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>Назва\n        <input\n          placeholder=\"Не більше 5 символів\"\n          maxLength={5}\n          onChange={(e) => setValue('name', e.target.value)}\n          defaultValue={item ? item.name : undefined}\n          {...register(\"name\", {required: true})}\n          ref={ref => firstFieldRef.current = ref}\n        />\n      </label>\n      <label>Опис\n        <input\n          maxLength={100}\n          onChange={(e) => setValue('description', e.target.value)}\n          placeholder=\"Не більше 100 символів\"\n          {...register(\"description\")}\n          defaultValue={item ? item.description as string : undefined}\n        />\n      </label>\n      {departmentsData &&\n      <label>Кафедра\n          <Select\n              value={selectedDepartment}\n              onChange={handleSelectDepartment}\n              options={departments}\n            //@ts-ignore\n              styles={selectLightStyles}\n              menuPortalTarget={document.body}\n              isClearable\n              isSearchable\n              placeholder='Виберіть кафедру'\n              noOptionsMessage={() => 'Кафедри відсутні'}\n          />\n      </label>}\n      <label>Спеціалізована\n        <input {...register(\"special\")} type=\"checkbox\"\n               defaultChecked={item ? Boolean(item.special) : false}/>\n      </label>\n      <label>Флігель\n        <input {...register(\"isWing\")} type=\"checkbox\"\n               defaultChecked={item ? item.isWing : false}/>\n      </label>\n      <label>Оперна студія\n        <input {...register(\"isOperaStudio\")} type=\"checkbox\"\n               defaultChecked={item ? item.isOperaStudio : false}/>\n      </label>\n      <label>Поверх\n        <input {...register(\"floor\")} type=\"number\" min={1} max={4}\n               defaultValue={item ? item.floor as number : 1}/>\n      </label>\n      <label>Прихована\n        <input {...register(\"isHidden\")} type=\"checkbox\"\n               defaultChecked={item ? item.isHidden : false}/>\n      </label>\n      <label>Доступна тільки для вибраних кафедр\n        <input {...register(\"allowedForSelectedDepartments\")}\n               type=\"checkbox\" checked={allowedForSelectedDepartments}\n               onChange={() => setAllowedForSelectedDepartments(prevState => !prevState)}\n        />\n      </label>\n      {allowedForSelectedDepartments && (\n        <label>Кафедри, яким аудиторія буде доступна\n          <Select options={departments}\n            //@ts-ignore\n                  styles={selectLightStyles}\n                  menuPortalTarget={document.body}\n                  value={selectedAllowedDepartments}\n                  onChange={handleSelectAllowedDepartment}\n                  components={{DropdownIndicator, MenuList}}\n                  isSearchable\n                  isClearable={false}\n                  isMulti\n                  placeholder='Додати кафедру'\n                  noOptionsMessage={() => 'Кафедри відсутні'}\n          />\n        </label>\n      )}\n      <label>Інструменти\n        <Select options={instruments}\n          //@ts-ignore\n                styles={selectLightStyles}\n                menuPortalTarget={document.body}\n                value={selectedInstruments}\n                onChange={handleSelectInstrument}\n                components={{DropdownIndicator, MenuList}}\n                isSearchable\n                isClearable={false}\n                isMulti\n                placeholder='Додати інструмент'\n                noOptionsMessage={() => 'Інструменти відсутні'}\n        />\n      </label>\n      <label>Колір\n        <Select options={colors}\n          //@ts-ignore\n                styles={selectLightStyles}\n                menuPortalTarget={document.body}\n                value={selectedColor}\n                onChange={handleSelectColor}\n                placeholder='Виберіть колір'\n        />\n      </label>\n    </form>\n  </div>\n};\n\nexport default CreateClassroomPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/browseClassroomPopupBody/BrowseClassroomPopupBody.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/createFacultyPopupBody/CreateFacultyPopupBody.tsx",["759"],"import React from 'react';\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {useForm} from \"react-hook-form\";\nimport {FormData} from \"../../instruments/models\";\nimport {Faculty} from \"../../../../models/models\";\nimport {CREATE_FACULTY} from \"../../../../api/operations/mutations/createFaculty\";\nimport {UPDATE_FACULTY} from \"../../../../api/operations/mutations/updateFaculty\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Faculty | null\n}\n\nconst CreateFacultyPopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n                                                          item}) => {\n  const [createFaculty] = useMutation(CREATE_FACULTY);\n  const [updateFaculty] = useMutation(UPDATE_FACULTY);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateFaculty({\n          variables: {\n            data: {\n              name: {set: e.name},\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createFaculty({\n          variables: {\n            data: {\n              name: e.name,\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Факультет створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <form id='createFaculty' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n    </form>\n  );\n}\n\nexport default CreateFacultyPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/createDegreePopupBody/CreateDegreePopupBody.tsx",["760"],"import React from 'react';\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {useForm} from \"react-hook-form\";\nimport {Degree} from \"../../../../models/models\";\nimport {CREATE_DEGREE} from \"../../../../api/operations/mutations/createDegree\";\nimport {UPDATE_DEGREE} from \"../../../../api/operations/mutations/updateDegree\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Degree | null;\n  handleErrorDetails?: (error: any) => void;\n}\n\nconst CreateDegreePopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n    handleErrorDetails, item}) => {\n  const [createDegree] = useMutation(CREATE_DEGREE);\n  const [updateDegree] = useMutation(UPDATE_DEGREE);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<any>();\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateDegree({\n          variables: {\n            data: {\n              name: {set: e.name},\n              startMonth: {set: Number(e.startMonth)},\n              startDay: {set: Number(e.startDay)},\n              durationMonths: {set: Number(e.durationMonths)},\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createDegree({\n          variables: {\n            data: {\n              name: e.name,\n              startMonth: Number(e.startMonth),\n              startDay: Number(e.startDay),\n              durationMonths: Number(e.durationMonths),\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Учбовий ступінь створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <form id='createDegree' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Місяць початку\n        <input className={mainStyles.input} type=\"number\" min={1} max={12}\n               defaultValue={item ? item?.startMonth : 9}\n               {...register(\"startMonth\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        День початку\n        <input className={mainStyles.input} type=\"number\" min={1} max={31}\n               defaultValue={item ? item?.startDay : 1}\n               {...register(\"startDay\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Триваліть (міс.)\n        <input className={mainStyles.input} type=\"number\" min={1}\n               defaultValue={item ? item?.durationMonths : 12}\n               {...register(\"durationMonths\", {required: true})}/>\n      </label>\n    </form>\n  );\n}\n\nexport default CreateDegreePopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/browseUserPopupBody/BrowseUserPopupBody.tsx",["761","762"],"import React from 'react';\nimport styles from \"./browseUserPopupBody.module.css\";\nimport {\n  EmploymentTypes,\n  EmploymentTypesUa,\n  StudentAccountStatus,\n  User,\n  UserTypes,\n  UserTypesUa\n} from \"../../../../models/models\";\nimport {fullName} from \"../../../../helpers/helpers\";\nimport Title from \"../../../../components/title/Title\";\nimport moment from \"moment\";\n\ninterface PropTypes {\n  user: User;\n};\n\nconst BrowseUserPopupBody: React.FC<PropTypes> = ({user}) => {\n  return (\n    <div>\n      {user.studentInfo?.accountStatus === StudentAccountStatus.UNVERIFIED && <div className={styles.verification}>\n          <h2>Користувача не верифіковано!</h2>\n          <p>Перед верифікацією користувача звірте правильність даних з офіційном документом.</p>\n      </div>}\n      <div className={styles.list}>\n        {!!user.queueInfo.sanctionedUntil && (\n          <p className={styles.sanctioned}>\n            Під санкціями до {moment(user.queueInfo.sanctionedUntil).format('DD-MM-YYYY HH:mm')}\n          </p>\n        )}\n        <div><span>ID: </span><span>{user.id}</span></div>\n        <div><span>Прізвище: </span><span>{user?.lastName || '-'}</span></div>\n        <div><span>Ім'я: </span><span>{user?.firstName || '-'}</span></div>\n        <div><span>По-батькові: </span><span>{user?.patronymic || '-'}</span></div>\n        <div><span>Статус: </span><span>{UserTypesUa[user.type as UserTypes]}</span></div>\n        {user.expireDate && (\n          <div>\n            <span>\n              Термін дії акаунту:\n            </span>\n            <span>\n              {moment(user.expireDate).format('DD.MM.YYYY')}\n            </span>\n          </div>\n        )}\n        {user.studentInfo && <div><span>Ступінь: </span><span>{user.studentInfo.degree.name}</span></div>}\n        {user.employeeInfo && <div><span>Зайнятість: </span>\n            <span>{EmploymentTypesUa[user.employeeInfo.employmentType as EmploymentTypes]}</span></div>}\n        <div><span>Кафедра: </span><span>{user.department ? user.department.name : 'Немає'}</span></div>\n        <div><span>E-mail: </span><span>{user.email}</span></div>\n        <div><span>Тел.: </span><span>{user.phoneNumber}</span></div>\n        {user?.extraPhoneNumbers && <div><span>Інші тел.: </span>\n            <ul>{JSON.parse(user.extraPhoneNumbers).map((item: string) => <li>{item}</li>)}</ul>\n        </div>}\n      </div>\n    </div>\n  );\n}\n\nexport default BrowseUserPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/createDepartmentPopupBody/CreateDepartmentPopupBody.tsx",["763","764"],"import React, {useEffect, useState} from 'react';\nimport Select from \"react-select\";\nimport useFaculties from \"../../../../hooks/useFaculties\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {CREATE_DEPARTMENT} from \"../../../../api/operations/mutations/createDepartment\";\nimport {useForm} from \"react-hook-form\";\nimport {FormData} from \"../../instruments/models\";\nimport {UPDATE_DEPARTMENT} from \"../../../../api/operations/mutations/updateDepartment\";\nimport {Department, Faculty} from \"../../../../models/models\";\n\ninterface PropTypes {\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Department | null\n}\n\nconst CreateDepartmentPopupBody: React.FC<PropTypes> = ({dispatchNotification, dispatch,\n        item}) => {\n  const faculties = useFaculties();\n  const [createDepartment] = useMutation(CREATE_DEPARTMENT);\n  const [updateDepartment] = useMutation(UPDATE_DEPARTMENT);\n  const [selectValue, setSelectValue] = useState({value: -1, label: ''});\n  const [options, setOptions] = useState<any>(selectValue);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n\n  useEffect(() => {\n    const data = faculties.map(item => ({value: item.id, label: item.name}));\n    if (item) {\n      const faculty: Faculty | undefined = faculties.find(f => f.id === item?.faculty.id);\n\n      setSelectValue({value: faculty?.id as number, label: faculty?.name as string});\n    } else {\n      setSelectValue(data[0]);\n    }\n    setOptions(data);\n  }, [faculties]);\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateDepartment({\n          variables: {\n            data: {\n              name: {set: e.name},\n              faculty: item ? {connect: {id: selectValue.value}} : undefined\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createDepartment({\n          variables: {\n            data: {\n              name: e.name,\n              faculty: {\n                connect: {id: selectValue.value}\n              }\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Кафедру створено.`,\n          type: \"ok\",\n        });\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleSelect = (e: any) => {\n    setSelectValue(e);\n  };\n\n  return (\n    <form id='createDepartment' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n      <label>\n        Факультет\n        {/*@ts-ignore*/}\n        <Select options={options} styles={selectLightStyles} menuPortalTarget={document.body}\n                placeholder='Виберіть факультет' defaultValue={selectValue} value={selectValue}\n                onChange={handleSelect}\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default CreateDepartmentPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/createInstrumentPopupBody/CreateInstrumentPopupBody.tsx",["765","766","767","768"],"import React, {useEffect, useState} from 'react';\nimport {useMutation} from \"@apollo/client\";\nimport {CREATE_INSTRUMENT} from \"../../../../api/operations/mutations/createInstrument\";\nimport {UPDATE_INSTRUMENT} from \"../../../../api/operations/mutations/updateInstrument\";\nimport {useForm} from \"react-hook-form\";\nimport styles from './createInstrumentPopupBody.module.css';\nimport mainStyles from '../../../../styles/main.module.css';\nimport useClassrooms from \"../../../../hooks/useClassrooms\";\nimport {FormData} from '../models';\nimport {SelectData} from '../models';\nimport Select from \"react-select\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport {ClassroomType, InstrumentType} from \"../../../../models/models\";\n\nconst instrumentTypes = [\n  {value: 'UpRightPiano', label: 'Фортепіано'},\n  {value: 'GrandPiano', label: 'Рояль'}\n];\n\ninterface PropTypes {\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  handleErrorDetails?: (error: any) => void;\n  addInstrument: (item: InstrumentType) => void;\n  instrument: InstrumentType | null;\n  isEditMode: boolean;\n}\n\nconst CreateInstrumentPopupBody: React.FC<PropTypes> = ({\n                                                          dispatchNotification, isEditMode,\n                                                          dispatch,\n                                                          addInstrument, instrument,\n                                                          handleErrorDetails\n                                                        }) => {\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n  const [classrooms, subscribeToMore]: [ClassroomType[], any] = useClassrooms();\n  const [classroomsData, setClassroomsData] = useState<SelectData[]>([{\n    value: instrument?.classroom ? String(instrument?.classroom?.id) : '',\n    label: instrument?.classroom ? String(instrument?.classroom?.name) : ''\n  }]);\n  const [createInstrument] = useMutation(CREATE_INSTRUMENT);\n  const [updateInstrument] = useMutation(UPDATE_INSTRUMENT);\n  const [classroomValue, setClassroomValue] = useState(classroomsData[0]);\n  const [selectedInstrumentType, setSelectedInstrumentType] = useState(instrumentTypes[0]);\n\n  useEffect(() => {\n    const data = classrooms.map(item => ({value: item.id, label: item.name}));\n    const emptyItem = ({value: '', label: 'Немає'});\n    setClassroomsData([emptyItem, ...data as unknown as SelectData[]]);\n  }, [classrooms]);\n\n  useEffect(() => {\n    if (isEditMode) {\n      const item = classroomsData.find(item => Number(item.value) === instrument?.classroom?.id);\n      if (item) setClassroomValue(item as SelectData);\n    } else {\n      setClassroomValue(classroomsData[0]);\n    }\n  }, [classroomsData, instrument]);\n\n  const handleSelect = (e: any) => {\n    setClassroomValue(e);\n  };\n\n  const onSubmit = async (data: FormData) => {\n    const {name, type, persNumber, rate} = data;\n    const classroomId = classroomValue?.value;\n    const classroomName = classroomValue ? classroomValue.label : instrument?.classroom.name;\n\n    try {\n      if (isEditMode) {\n        await updateInstrument({\n          variables: {\n            data: {\n              name: {set: name},\n              type: {set: selectedInstrumentType.value},\n              persNumber: {set: persNumber},\n              rate: {set: Number(rate)},\n              classroom: classroomId ? {connect: {id: classroomId}} : undefined\n            },\n            where: {\n              id: Number(instrument?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані змінені.`,\n          type: \"ok\",\n        });\n      } else {\n        const result = await createInstrument({\n          variables: {\n            data: {\n              name, type: selectedInstrumentType.value, persNumber, rate: Number(rate),\n              classroom: classroomId ? {connect: {id: classroomId}} : undefined\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Інструмент ${name}  створений.`,\n          type: \"ok\",\n        });\n        addInstrument({\n          ...result.data.createOneInstrument,\n          classroom: {name: classroomId ? classroomName : ''}\n        });\n      }\n\n      dispatch && dispatch({\n        type: \"POP_POPUP_WINDOW\",\n      });\n    } catch (e) {\n      console.log(e)\n      dispatchNotification({\n        header: \"Помилка!\",\n        message: <><span>Щось пішло не так.</span><br/>\n          <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline'}}\n                onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n        type: \"alert\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)} className={styles.container} id='createInstrument'>\n        {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>\n          Назва\n          <input className={mainStyles.input} type='text' placeholder='Наприклад: \"Україна\"'\n                 defaultValue={isEditMode ? instrument?.name : undefined}\n                 {...register(\"name\", {required: true})}/>\n        </label>\n        {errors.type && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>Тип\n          <Select\n            value={selectedInstrumentType}\n            onChange={(e) => setSelectedInstrumentType(e)}\n            options={instrumentTypes}\n            //@ts-ignore\n            styles={selectLightStyles}\n            menuPortalTarget={document.body}\n            placeholder='Виберіть тип інструменту'\n          />\n        </label>\n        {errors.persNumber && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>\n          Інв. номер\n          <input className={mainStyles.input}\n                 type='text' placeholder='Наприклад: \"3242234\"'\n                 defaultValue={isEditMode ? instrument?.persNumber : undefined}\n                 {...register(\"persNumber\", {required: true})}/>\n        </label>\n        <label>\n          Рейтинг\n          <input className={mainStyles.input}\n                 defaultValue={isEditMode && instrument ? instrument.rate : 1} step='.1'\n                 type='number' min='1' max='10' placeholder='Рейтинг' {...register(\"rate\")}/>\n        </label>\n        <label>\n          Аудиторія\n          <Select options={classroomsData} styles={selectLightStyles} menuPortalTarget={document.body}\n                  placeholder='Аудиторія' value={classroomValue} onChange={handleSelect}/>\n        </label>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateInstrumentPopupBody;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/browseInstrumentPopupBody/BrowseInstrumentPopupBody.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/login/Login.tsx",["769"],"import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./login.module.css\";\r\nimport Logo from \"../../components/logo/Logo\";\r\nimport CustomInput from \"../../components/customInput/CustomInput\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {useNotification} from \"../../components/notification/NotificationProvider\";\r\nimport {useMutation} from \"@apollo/client\";\r\nimport {LOGIN} from \"../../api/operations/mutations/login\";\r\nimport {ErrorCodes, ErrorCodesUa, UserTypes} from \"../../models/models\";\r\nimport {isLoggedVar} from \"../../api/client\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {setAccessRights} from \"../../helpers/helpers\";\r\n\r\nconst Login = () => {\r\n  const dispatchNotification = useNotification();\r\n  const [login] = useMutation(LOGIN);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [loginValue, setLoginValue] = useState('');\r\n  const [passwordValue, setPasswordValue] = useState('');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (loginValue.length && passwordValue.length) {\r\n      setDisabled(false);\r\n    } else {\r\n      setDisabled(true);\r\n    }\r\n  }, [loginValue, passwordValue]);\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    let result: any;\r\n\r\n    if (e.target.login.value && e.target.password.value) {\r\n      try {\r\n        result = await login({\r\n          variables: {\r\n            input: {\r\n              email: e.target.login.value,\r\n              password: e.target.password.value\r\n            }\r\n          }\r\n        });\r\n        if (result?.data.login.userErrors?.length) {\r\n          localStorage.removeItem('token')\r\n          dispatchNotification({\r\n            header: 'Помилка!',\r\n            message: ErrorCodesUa[result?.data.login.userErrors[0].code as ErrorCodes],\r\n            type: 'alert'\r\n          });\r\n        } else {\r\n          const user = result?.data.login.user;\r\n          const token = result?.data.login.token;\r\n\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          localStorage.setItem('token', token);\r\n          dispatchNotification({\r\n            header: 'Вітаємо!',\r\n            message: 'Авторизація успішна!',\r\n            type: 'ok'\r\n          });\r\n          isLoggedVar(true);\r\n          setAccessRights(user);\r\n          if (user.type === UserTypes.ADMIN || user.type === UserTypes.DISPATCHER) {\r\n            history.push('/classrooms');\r\n          }\r\n          else {\r\n            history.push('/dashboard')\r\n          }\r\n        }\r\n      } catch (e: any) {\r\n        dispatchNotification({\r\n          header: 'Помилка!',\r\n          message: e.message,\r\n          type: 'alert'\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.name === 'login') {\r\n      setLoginValue(e.target.value);\r\n    } else {\r\n      setPasswordValue(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.loginContainer}>\r\n        <Logo\r\n          title=\"Auditorium\"\r\n          description=\"Система управління видачею аудиторій\"\r\n        />\r\n        <div>\r\n          <p className={styles.loginTip}>\r\n            Увійдіть в систему або зареєструйтесь\r\n          </p>\r\n          <form className={styles.loginForm} onSubmit={handleSubmit} id=\"loginForm\">\r\n            <CustomInput\r\n              label=\"Логін:\"\r\n              name=\"login\"\r\n              id=\"login\"\r\n              placeholder=\"Наприклад: aud1@knmau.ua\"\r\n              value={loginValue}\r\n              onChange={handleChange}\r\n            />\r\n            <CustomInput\r\n              label=\"Пароль:\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              withEyeSwitcher\r\n              value={passwordValue}\r\n              onChange={handleChange}\r\n            />\r\n            <Button type={\"submit\"} disabled={disabled} form='loginForm' color=\"blue\"\r\n                    style={{marginTop: 32, height: 42}}\r\n            >\r\n              Увійти\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <footer className={styles.loginFooter}>\r\n          <a href=\"#\">\r\n            Національна Музична Академія України ім. П. і. Чайковського\r\n          </a>\r\n          <p>\r\n            Auditorium &copy; 2021 | v 1.4.2 Ivan Piatovolenko & Vladislav\r\n            Nazarenko\r\n          </p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/customInput/CustomInput.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/login.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useMe.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/mail.js",[],["770","771"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/conjugate.ts",["772"],"import {mailNames} from \"../assets/mail\";\nimport {femaleNames} from \"../assets/femail\";\n\nexport const conjugate = (name: string) => {\n    const lowerName = name.toLowerCase();\n    const mail = mailNames;\n    const female = femaleNames;\n    const vowels = ['а', 'о', 'у', 'и', 'і', 'є', 'е', 'ї', 'я', 'ю'];\n    const hissings = ['щ', 'ж', 'ч'];\n    const GGKH = ['г', 'ґ', 'к', 'х'];\n\n    const isLastYa = name.charAt(name.length-1) === 'я';\n    const isLastA = name.charAt(name.length-1) === 'а';\n    const isLastYe = name.charAt(name.length-1) === 'й';\n    const isLastSoftSign = name.charAt(name.length-1) === 'ь';\n    const isVowelBeforeLast = vowels.includes(lowerName.charAt(lowerName.length-2));\n    const isLastO = name.charAt(name.length-1) === 'о';\n    const isLastGGKH = GGKH.includes(lowerName.charAt(lowerName.length-1));\n    const isApostropheBeforeLast = lowerName.charAt(lowerName.length-2) === \"'\"\n      || lowerName.charAt(lowerName.length-2) === \"`\";\n    let sex = undefined;\n\n    if (mail.find(name => name.toLowerCase() === lowerName)) {\n        sex = 'MAIL';\n    }\n    if (female.find(name => name.toLowerCase() === lowerName)) {\n        sex = 'FEMALE';\n    }\n\n    if (sex === 'MAIL' || sex === 'FEMALE') {\n        if (lowerName === 'олег') return 'Олеже';\n\n        if (isLastYa && (isVowelBeforeLast || isApostropheBeforeLast)) {\n                return name.slice(0, lowerName.length - 2) + 'іє';\n        }\n        if (isLastYa && (!isVowelBeforeLast || !isApostropheBeforeLast)) {\n            return name.slice(0, lowerName.length - 1) + 'е';\n        }\n\n        if (sex === 'MAIL' && isLastGGKH) {\n            return name.slice(0, lowerName.length - 1) + 'у';\n        }\n        if (sex === 'MAIL' && (isLastYe || isLastSoftSign) && (!isVowelBeforeLast && !isApostropheBeforeLast)) {\n            return name.slice(0, lowerName.length - 1) + 'ю';\n        }\n\n        if (sex === 'MAIL' && isLastYe && (isVowelBeforeLast || isApostropheBeforeLast)) {\n            return name.slice(0, lowerName.length - 1) + 'є';\n        }\n\n        if (sex === 'MAIL' && !isLastYe && !isLastGGKH && !isLastYa && !isLastA) {\n            return name + 'e';\n        }\n        if (sex === 'FEMALE' && isLastA) {\n            return name.slice(0, name.length-1) + 'o';\n        }\n        if (sex === 'MAIL' && isLastO) {\n            return name.slice(0, name.length - 1) + 'e';\n        }\n    } else {\n        return name;\n    }\n}",["773","774"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/femail.js",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signUp.ts",[],["775","776"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/verifyUser.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useLocal.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/helpers/helpers.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/dashboard/Dashboard.tsx",["777","778"],"import React, {useEffect, useRef, useState} from 'react';\nimport styles from './dashboard.module.css';\nimport Header from \"../../components/header/Header\";\nimport moment from \"moment\";\nimport {ClassroomType, EnqueuedBy, OccupiedState, User} from \"../../models/models\";\nimport {fullName} from \"../../helpers/helpers\";\nimport {GET_GENERAL_QUEUE} from \"../../api/operations/queries/generalQueue\";\nimport {GET_PENDING_CLASSROOMS} from \"../../api/operations/queries/pendingClassrooms\";\nimport strings from '../../localize/localize';\nimport {client, isLoggedVar} from \"../../api/client\";\nimport {GET_FREE_CLASSROOMS} from \"../../api/operations/queries/freeClassrooms\";\nimport Button from \"../../components/button/Button\";\nimport Splash from \"../../components/splash/Splash\";\nimport {useHistory} from \"react-router-dom\";\n\nconst langs = {\n  EN: 'en',\n  UA: 'ua'\n};\n\nfunction Dashboard() {\n  const history = useHistory();\n  const [classrooms, setClassrooms] = useState<ClassroomType[]>([]);\n  const [currentTime, setCurrentTime] = useState('');\n  const [lang, setLang] = useState(langs.UA);\n  const [freeClassrooms, setFreeClassrooms] = useState<string[]>([]);\n  const [data, setData] = useState<any>(null);\n  const [showSplash, setShowSplash] = useState(false);\n  const timer = useRef<any>(null);\n  const timerLang = useRef<any>(null);\n  const timerQueue = useRef<any>(null);\n  const splashInterval = useRef(null);\n\n  useEffect(() => {\n    if (lang === langs.UA) {\n      clearInterval(timerLang.current);\n      timerLang.current = setInterval(() => {\n        setLang(langs.EN);\n      }, 15000)\n    } else {\n      clearInterval(timerLang.current);\n      timerLang.current = setInterval(() => {\n        setLang(langs.UA);\n      }, 5000)\n    }\n  }, [lang]);\n\n  useEffect(() => {\n    if (showSplash) {\n      clearInterval(splashInterval.current);\n      splashInterval.current = setInterval(() => {\n        setShowSplash(false);\n      }, 5000);\n    } else {\n      clearInterval(splashInterval.current);\n      splashInterval.current = setInterval(() => {\n        !classrooms.length && setShowSplash(true);\n      }, 10000);\n    }\n  }, [showSplash]);\n\n  useEffect(() => {\n    timer.current = setInterval(() => {\n      setCurrentTime(moment().format('HH:mm:ss'));\n    }, 1000);\n    timerQueue.current = setInterval(() => {\n      client.query({\n        query: GET_GENERAL_QUEUE,\n        fetchPolicy: 'network-only'\n      }).then(data => {\n        // @ts-ignore\n        if (data.data.generalQueue.length) {\n          setShowSplash(false);\n        }\n        setData(data.data);\n      });\n\n      client.query({\n        query: GET_PENDING_CLASSROOMS,\n        variables: {\n          where: {\n            OR: [\n              {\n                occupied: {\n                  state: {\n                    equals: OccupiedState.PENDING\n                  }\n                }\n              },\n              {\n                occupied: {\n                  state: {\n                    equals: OccupiedState.RESERVED\n                  },\n                  user: {\n                    queueInfo: {\n                      currentSession: {\n                        enqueuedBy: {\n                          equals: EnqueuedBy.DISPATCHER\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            ]\n\n          }\n        },\n        fetchPolicy: 'network-only'\n      }).then(data => {\n        setClassrooms(data.data.classrooms);\n      });\n\n      client.query({\n        query: GET_FREE_CLASSROOMS,\n        variables: {\n          where: {\n            occupied: {\n              state: {\n                equals: OccupiedState.FREE\n              }\n            }\n          }\n        },\n        fetchPolicy: 'network-only'\n      }).then(data => {\n        //@ts-ignore\n        if (data.data.classrooms.length) {\n          setShowSplash(false);\n        }\n        setFreeClassrooms(data.data.classrooms.map(({name}: ClassroomType) => name));\n      });\n    }, 5000);\n\n    return () => {\n      clearInterval(splashInterval.current);\n      clearInterval(timer.current);\n      clearInterval(timerLang.current);\n      clearInterval(timerQueue.current);\n    };\n  }, []);\n\n  const handleLogoutClick = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    isLoggedVar(false);\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <Splash show={showSplash} currentTime={currentTime}/>\n      <div className={styles.hiddenLogout}>\n        <Button onClick={handleLogoutClick} color='red'>Вийти з акаунту</Button>\n      </div>\n      <Header>\n        <div className={styles.header}>\n          {/*@ts-ignore*/}\n          <h1>{(strings[lang]).generalQueue}</h1>\n          {/*@ts-ignore*/}\n          <h1>{strings[lang].pendingConfirmation}</h1>\n          <h2>{currentTime}</h2>\n        </div>\n      </Header>\n      <div className={styles.container}>\n        <div>\n          <h1 className={styles.noQueue}>{\n            /*@ts-ignore*/\n            (strings[lang]).noQueue\n          }</h1>\n          <ul className={styles.generalQueue}>\n            {data && data.generalQueue\n              .slice(0, 10)\n              .map((user: User, index: number) => (\n                <li key={user.id}>\n                  <span>{index + 1} </span>\n                  <span className={styles.fullName}>\n                  {user.nameTemp || fullName(user, true)}\n                </span>\n                </li>\n              ))}\n          </ul>\n        </div>\n        <div className={styles.rightPart}>\n          <ul className={styles.waitingApprove}>\n            {classrooms && classrooms\n              .map(({id, name, occupied}) => (\n                <li key={id}>\n                <span className={styles.classroomName}>\n                  Ауд. {name}\n                </span>\n                  <span>\n                  {occupied!.user.nameTemp || fullName(occupied!.user, true)}\n                </span>\n                </li>\n              ))\n            }\n          </ul>\n          <div className={styles.info}>\n            <p>\n              {/*@ts-ignore*/}\n              {strings[lang].queueSize}{data && data.generalQueue.length}\n            </p>\n            <p>\n              {\n                freeClassrooms ? freeClassrooms.length > 5\n                  /*@ts-ignore*/\n                  ? `${strings[lang].vilnukhAud}${freeClassrooms.length}`\n                  : (\n                    <>\n                      {/*@ts-ignore*/}\n                      {strings[lang].freeClassrooms}\n                      {freeClassrooms.map(name => <span>{name}</span>)}\n                    </>\n                  )\n                  /*@ts-ignore*/\n                  : strings[lang].noFreeClassrooms\n              }\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/queueRecords.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/generalQueue.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/localize/localize.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/pendingClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/freeClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/queue/Queue.tsx",["779"],"import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./queue.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  ClassroomType,\r\n  DisabledState,\r\n  EnqueuedBy,\r\n  QueueType,\r\n  StudentAccountStatus,\r\n  User,\r\n  UserTypes\r\n} from \"../../models/models\";\r\nimport {fullName} from \"../../helpers/helpers\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {client} from \"../../api/client\";\r\nimport {GET_USERS_FOR_QUEUE} from \"../../api/operations/queries/usersQueue\";\r\nimport {REMOVE_USER_FROM_QUEUE} from \"../../api/operations/mutations/removeUserFromQueue\";\r\nimport {useNotification} from \"../../components/notification/NotificationProvider\";\r\nimport useClassrooms from \"../../hooks/useClassrooms\";\r\nimport {ADD_USER_TO_QUEUE} from \"../../api/operations/mutations/addUserToQueue\";\r\nimport moment from \"moment\";\r\n\r\nconst Queue = () => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [classrooms, subscribeToMore]: [ClassroomType[], any] = useClassrooms();\r\n  const [withInstrument, setWithInstrument] = useState(false);\r\n  const [chosenUser, setChosenUser] = useState({label: '', value: -1, queueLength: -1});\r\n  const dispatchNotification = useNotification();\r\n\r\n  useEffect(() => {\r\n    client.query({\r\n      query: GET_USERS_FOR_QUEUE\r\n    }).then(data => {\r\n      setUsers(data.data.users);\r\n    });\r\n  }, []);\r\n\r\n  const handleChose = (e: any) => {\r\n    const chosenUser = (users as unknown as Array<User>)?.find(user => user.id === e.value);\r\n\r\n    setChosenUser({\r\n      label: chosenUser?.id as number + \": \" + fullName(chosenUser),\r\n      value: chosenUser?.id as number,\r\n      queueLength: chosenUser?.queue.length as number\r\n    });\r\n  };\r\n\r\n  const removeFromLine = async () => {\r\n    setDisabled(true);\r\n    try {\r\n      await client.mutate({\r\n        mutation: REMOVE_USER_FROM_QUEUE,\r\n        variables: {\r\n          input: {\r\n            userId: chosenUser.value\r\n          }\r\n        }\r\n      });\r\n      dispatchNotification({\r\n        header: \"Успішно!\",\r\n        message: `Користувача видалено з черги.`,\r\n        type: \"ok\",\r\n      });\r\n      client.query({\r\n        query: GET_USERS_FOR_QUEUE,\r\n        fetchPolicy: 'network-only'\r\n      }).then(data => {\r\n        setUsers(data.data.users);\r\n        setChosenUser(prevState => ({...prevState, queueLength: 0}));\r\n        setDisabled(false);\r\n      });\r\n    } catch (e) {\r\n      dispatchNotification({\r\n        header: \"Помилка\",\r\n        message: `Користувача не видалено з черги.`,\r\n        type: \"alert\",\r\n      });\r\n      setDisabled(false);\r\n    }\r\n  };\r\n\r\n  const getInLine = async () => {\r\n    setDisabled(true);\r\n    const data = classrooms\r\n      .filter(classroom => !classroom.isHidden && classroom.disabled.state === DisabledState.NOT_DISABLED)\r\n      .filter(classroom => withInstrument ? classroom.instruments.length : true)\r\n      .map(({id}) => ({\r\n        classroomId: id,\r\n        type: QueueType.MINIMAL,\r\n      }));\r\n\r\n    try {\r\n      const result = await client.mutate({\r\n        mutation: ADD_USER_TO_QUEUE, variables: {\r\n          input: {\r\n            userId: chosenUser.value,\r\n            data,\r\n            enqueuedBy: EnqueuedBy.DISPATCHER\r\n          }\r\n        }\r\n      });\r\n      if (result.data.addUserToQueue.userErrors.length) {\r\n        result.data.addUserToQueue.userErrors.forEach(({message}: any) => {\r\n          dispatchNotification({\r\n            header: \"Помилка\",\r\n            message,\r\n            type: \"alert\",\r\n          });\r\n        })\r\n      } else {\r\n        dispatchNotification({\r\n          header: \"Успішно!\",\r\n          message: `Користувача записано в чергу.`,\r\n          type: \"ok\",\r\n        });\r\n      }\r\n      client.query({\r\n        query: GET_USERS_FOR_QUEUE,\r\n        fetchPolicy: 'network-only'\r\n      }).then(data => {\r\n        setUsers(data.data.users);\r\n        setChosenUser(prevState => ({...prevState, queueLength: 1}));\r\n        setDisabled(false);\r\n      });\r\n    } catch (e) {\r\n      dispatchNotification({\r\n        header: \"Помилка\",\r\n        message: `Користувача не записано в чергу.`,\r\n        type: \"alert\",\r\n      });\r\n      setDisabled(false);\r\n    }\r\n  };\r\n\r\n  const sanctions = chosenUser.value !== -1 && users\r\n    .find(({id}) => chosenUser.value === id).queueInfo.sanctionedUntil;\r\n\r\n  const renderSanction = () => {\r\n    if (sanctions) return (\r\n      <>\r\n        <p className={styles.sanctions}>\r\n          {`Неможливо поставити в чергу. Користувач знаходиться під санкціями до ${\r\n            moment(sanctions).format('DD-MM-YYYY HH:mm')}`}\r\n        </p>\r\n      </>\r\n    );\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <h1>Черга</h1>\r\n      </Header>\r\n      <div className={styles.wrapper}>\r\n        <form\r\n          id=\"userQueueForm\"\r\n          className={styles.userSearch}\r\n        >\r\n          <p>Виберіть студента, щоб додати або видалити з черги:</p>\r\n          <Select\r\n            placeholder=\"Користувачі\"\r\n            options={users.filter(user => {\r\n              return !user.occupiedClassrooms.length\r\n                && (user.type === UserTypes.POST_GRADUATE || user.type === UserTypes.STUDENT) &&\r\n                user?.studentInfo?.accountStatus === StudentAccountStatus.ACTIVE\r\n            }).map((user: User) => ({\r\n                label: user.id + \": \" + fullName(user),\r\n                value: user.id as number,\r\n                queueLength: user?.queue.length as number\r\n              })\r\n            )}\r\n            value={chosenUser}\r\n            styles={{menuPortal: base => ({...base, zIndex: 9999})}}\r\n            menuPortalTarget={document.body}\r\n            onChange={handleChose}\r\n            isDisabled={disabled}\r\n          />\r\n          {chosenUser.queueLength === 0 && (\r\n            <label htmlFor=\"instrumentCheckbox\" className={styles.checkboxInstrument}>\r\n              <input type='checkbox' name='instrument' id='instrumentCheckbox' checked={withInstrument}\r\n                     onChange={(e) => setWithInstrument(e.target.checked)}\r\n                     disabled={disabled}\r\n              />\r\n              З фортепіано\r\n            </label>)\r\n          }\r\n          {chosenUser.queueLength !== -1 && (\r\n            <Button onClick={chosenUser.queueLength > 0 ? removeFromLine : getInLine}\r\n                    disabled={disabled || (chosenUser.queueLength === 0 && !!sanctions)}\r\n            >\r\n              {chosenUser.queueLength > 0 ? 'Видалити з черги' : 'Поставити в чергу'}\r\n            </Button>\r\n          )}\r\n        </form>\r\n        {renderSanction()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Queue;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/usersQueue.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/addUserToQueue.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/removeUserFromQueue.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/DisableClassroom.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/disableClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/enableClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/disabledClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/ConfirmFooter.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/classrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/CaviarItem.tsx",["780","781"],"import React, {CSSProperties, useEffect, useRef, useState} from 'react';\nimport {ClassroomType, DisabledState, OccupiedState, QueuePolicyTypes, UserTypes} from \"../../models/models\";\nimport Tag from \"../tag/Tag\";\nimport ClassroomInfo from \"../ classroomInfo/ClassroomInfo\";\nimport Footer from \"../footer/Footer\";\nimport {usePopupWindow} from \"../popupWindow/PopupWindowProvider\";\nimport moment from \"moment\";\nimport {useLocal} from \"../../hooks/useLocal\";\n\ntype PropTypes = {\n  classroom: ClassroomType;\n  dispatchNotification: (value: string) => void;\n}\n\nconst CaviarItem: React.FC<PropTypes> = ({classroom, dispatchNotification}) => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [isOverdue, setIsOverDue] = useState(false);\n\n  let timeout = useRef(null);\n\n  useEffect(() => {\n    return () => clearTimeout(timeout.current);\n  }, []);\n\n  useEffect(() => {\n    if (classroom.occupied.state === OccupiedState.RESERVED) {\n      const untilString: string = classroom.occupied.until as unknown as string;\n      const diffInMs = moment(untilString).diff(moment());\n\n      if (diffInMs >= 0 && !timeout.current) {\n        timeout.current = setTimeout(() => setIsOverDue(true), diffInMs);\n      } else if (diffInMs <= 0) {\n        setIsOverDue(true);\n      } else {\n        setIsOverDue(false);\n      }\n    } else {\n      setIsOverDue(false);\n    }\n    if (classroom.occupied.state !== OccupiedState.RESERVED && timeout.current) {\n      clearTimeout(timeout.current);\n    }\n  }, [classroom]);\n\n  const calcStyle = (classroom: ClassroomType) => {\n    const resStyles: CSSProperties = {};\n    if (classroom.isHidden) resStyles.opacity = .5;\n    if (classroom.disabled.state === DisabledState.DISABLED\n      || (classroom.queueInfo.queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS\n        && !classroom.queueInfo.queuePolicy.queueAllowedDepartments.length)) {\n      resStyles.background = '#b1b1b1';\n    } else {\n      classroom.occupied.state === OccupiedState.FREE ?\n        resStyles.background = '#76e286' : resStyles.background = '#fff';\n      if (isOverdue) {\n        resStyles.background = '#f91354';\n        resStyles.color = '#fff';\n      }\n    }\n    return resStyles\n  };\n\n  function handleClick(classroom: ClassroomType) {\n    const {name, occupied, id, disabled} = classroom;\n    dispatchPopupWindow({\n      header: (\n        <>\n          <h1>{`Аудиторія ${classroom.name}`}</h1>\n          {classroom.isWing && <Tag body=\"Флігель\"/>}\n          {classroom.isOperaStudio && <Tag body=\"Оперна студія\"/>}\n        </>\n      ),\n      body: (\n        //@ts-ignore\n        <ClassroomInfo\n          dispatchNotification={dispatchNotification}\n          classroom={classroom}\n          dispatchPopupWindow={dispatchPopupWindow}\n        />\n      ),\n      footer: <Footer\n        classroomName={name}\n        classroomId={id}\n        disabled={disabled}\n        occupied={occupied}\n        dispatchNotification={dispatchNotification}\n        dispatchPopupWindow={dispatchPopupWindow}\n        isOverdue={isOverdue}\n      />,\n    });\n  }\n\n  return (\n    <li\n      onClick={() => handleClick(classroom)}\n      style={calcStyle(classroom)}\n    >\n      {classroom.name}\n    </li>\n  );\n}\n\nexport default CaviarItem;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/giveOutClassroomKey.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/editUserPopupBody/EditUserPopupBody.tsx",["782","783","784"],"import React, {useEffect, useState} from 'react';\nimport {\n  Department,\n  EmployeeAccountStatus,\n  EmploymentTypes,\n  EmploymentTypesUa,\n  User,\n  UserTypes,\n  UserTypesUa\n} from \"../../../../models/models\";\nimport styles from './../../classrooms/createClassroomPopupBody/createClassroomPopupBody.module.css';\nimport {client} from \"../../../../api/client\";\nimport {SIGNUP_EMPLOYEE} from \"../../../../api/operations/mutations/signupEmployee\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport Button from \"../../../../components/button/Button\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_DEPARTMENTS} from \"../../../../api/operations/queries/departments\";\nimport {GET_USERS} from \"../../../../api/operations/queries/users\";\nimport {ONLY_DIGITS} from \"../../../../helpers/validators\";\nimport removeIcon from \"../../../../assets/images/delete.svg\";\nimport {UPDATE_USER} from \"../../../../api/operations/mutations/updateUser\";\n\ninterface PropTypes {\n  user: User;\n}\n\nconst userTypesData = [\n  {value: UserTypes.STAFF, label: UserTypesUa.STAFF},\n  {value: UserTypes.ILLUSTRATOR, label: UserTypesUa.ILLUSTRATOR},\n  {value: UserTypes.CONCERTMASTER, label: UserTypesUa.CONCERTMASTER},\n  {value: UserTypes.TEACHER, label: UserTypesUa.TEACHER},\n  {value: UserTypes.PIANO_TUNER, label: UserTypesUa.PIANO_TUNER},\n  {value: UserTypes.OTHER, label: UserTypesUa.OTHER},\n  {value: UserTypes.ADMIN, label: UserTypesUa.ADMIN},\n  {value: UserTypes.DISPATCHER, label: UserTypesUa.DISPATCHER},\n];\n\nconst studentsTypesData = [\n  {value: UserTypes.POST_GRADUATE, label: UserTypesUa.POST_GRADUATE},\n  {value: UserTypes.STUDENT, label: UserTypesUa.STUDENT},\n]\n\nconst employmentTypesData = [\n  {value: EmploymentTypes.FULL_TIME, label: EmploymentTypesUa.FULL_TIME},\n  {value: EmploymentTypes.PART_TIME, label: EmploymentTypesUa.PART_TIME},\n  {value: EmploymentTypes.HOURLY, label: EmploymentTypesUa.HOURLY},\n];\n\nconst NO_PHONE_NUMBER = 'No phone number';\n\nconst isStudent = (user: User) => user && user?.type === UserTypes.STUDENT || user?.type === UserTypes.POST_GRADUATE;\n\nconst EditUserPopupBody: React.FC<PropTypes> = ({\n                                                  user, dispatch, dispatchNotification,\n                                                  dispatchPopupWindow\n                                                }: any) => {\n  const {data, loading, error} = useQuery(GET_DEPARTMENTS);\n  const [departmentsData, setDepartmentsData] = useState([{value: -1, label: ''}]);\n  const [selectedDepartment, setSelectedDepartment] = useState(departmentsData[0]);\n  const [selectedUserType, setSelectedUserType] = useState(userTypesData[0]);\n  const [firstName, setFirstName] = useState(user?.firstName || '');\n  const [lastName, setLastName] = useState(user?.lastName || '');\n  const [patronymic, setPatronymic] = useState(user?.patronymic || '');\n  const [withDateLimit, setWithDateLimit] = useState(!user?.expireDate && !isStudent(user));\n  const [expireDate, setExpireDate] = useState(user?.expireDate ? moment(user?.expireDate).format('yyyy-MM-DD') : '');\n  const [selectedEmploymentType, setSelectedEmploymentType] = useState(employmentTypesData[0]);\n  const [phoneNumber, setPhoneNumber] = useState(user?.phoneNumber !== NO_PHONE_NUMBER ? user?.phoneNumber : '+380');\n  const [extraPhoneNumbers, setExtraPhoneNumbers] = useState<string[]>(user?.extraPhoneNumbers ? JSON.parse(user.extraPhoneNumbers) : []);\n\n  useEffect(() => {\n    if (user) {\n      const currentStaffUserType = userTypesData.find(({value}) => value === user.type);\n      const currentStudentUserType = studentsTypesData.find(({value}) => value === user.type);\n      setSelectedUserType(currentStaffUserType || currentStudentUserType || userTypesData[0]);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (!loading && !error) {\n      const mappedDepartments = data.departments.map((department: Department) => {\n        return ({value: department.id, label: department.name});\n      });\n      setDepartmentsData(mappedDepartments);\n\n      if (user && user.department?.id) {\n        const currentUserDepartment = mappedDepartments.find(({value}: any) => value === user.department.id);\n        setSelectedDepartment(currentUserDepartment);\n      } else {\n        setSelectedDepartment(mappedDepartments[0]);\n      }\n      if (user && user.employeeInfo) {\n        const currentUserEmploymentType = employmentTypesData.find(item => user.employeeInfo.employmentType === item.value);\n        setSelectedEmploymentType(currentUserEmploymentType);\n      }\n    }\n  }, [data]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: (\n        <div>\n          <p>{e.message}</p>\n          <p>{e.extraInfo}</p>\n          <pre>{e.stack}</pre>\n        </div>\n      ),\n      footer: ''\n    });\n  };\n\n  const handleSignUpEmployee = async (e: any) => {\n    e.preventDefault();\n    try {\n      const result = await client.mutate({\n        mutation: SIGNUP_EMPLOYEE,\n        variables: {\n          input: {\n            firstName,\n            patronymic,\n            lastName,\n            type: selectedUserType.value,\n            department: (\n              selectedUserType.value === UserTypes.TEACHER\n              || selectedUserType.value === UserTypes.CONCERTMASTER\n              || selectedUserType.value === UserTypes.ILLUSTRATOR\n            ) ? {\n              connect: {\n                id: selectedDepartment.value\n              }\n            } : undefined,\n            employeeInfo: {\n              create: {\n                employmentType: selectedEmploymentType.value,\n                accountStatus: EmployeeAccountStatus.ACTIVE\n              }\n            },\n            expireDate: !withDateLimit ? moment(expireDate).toISOString() : undefined\n          }\n        }\n      });\n      if (result.data.signupEmployee.userErrors?.length) {\n        result.data.signupEmployee.userErrors.forEach(({message}: any) => {\n          dispatchNotification({\n            header: \"Помилка\",\n            message,\n            type: \"alert\",\n          });\n        })\n      } else {\n        await client.query({\n          query: GET_USERS,\n          fetchPolicy: 'network-only'\n        })\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Новий акаунт співробітника створено.`,\n          type: \"ok\",\n        });\n        dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      dispatchNotification({\n        header: \"Помилка!\",\n        message: <><span>Щось пішло не так.</span><br/>\n          <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline'}}\n                onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n        type: \"alert\",\n      });\n    }\n  };\n\n  const handleUpdateUser = async () => {\n    try {\n      await client.mutate({\n        mutation: UPDATE_USER,\n        variables: {\n          data: {\n            firstName: {set: firstName},\n            lastName: {set: lastName},\n            patronymic: {set: patronymic},\n            type: {set: selectedUserType.value},\n            phoneNumber: {set: phoneNumber},\n            extraPhoneNumbers: JSON.stringify(extraPhoneNumbers),\n            expireDate: {set: !withDateLimit ? moment(expireDate).toISOString() : undefined},\n            department: (\n              selectedUserType.value === UserTypes.TEACHER\n              || selectedUserType.value === UserTypes.CONCERTMASTER\n              || selectedUserType.value === UserTypes.ILLUSTRATOR || isStudent(user)\n            ) ? {\n              connect: {\n                id: selectedDepartment.value\n              }\n            } : undefined,\n            employeeInfo: isStudent(user) ? undefined : {\n              update: {\n                employmentType: {set: selectedEmploymentType.value},\n                accountStatus: {set: EmployeeAccountStatus.ACTIVE},\n              }\n            },\n          },\n          where: {\n            id: user.id\n          }\n        }\n      })\n      await client.query({\n        query: GET_USERS,\n        fetchPolicy: 'network-only'\n      })\n      dispatchNotification({\n        header: \"Успішно!\",\n        message: `Дані користувача змінено.`,\n        type: \"ok\",\n      });\n      dispatch({\n        type: \"POP_POPUP_WINDOW\",\n      });\n    } catch (e) {\n      console.log(e);\n      dispatchNotification({\n        header: \"Помилка!\",\n        message: <><span>Щось пішло не так.</span><br/>\n          <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline'}}\n                onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n        type: \"alert\",\n      });\n    }\n  }\n\n  const addExtraPhoneNumber = () => {\n    setExtraPhoneNumbers(prev => [...prev, '+380']);\n  };\n\n  const editExtraNumber = (value: string, index: number) => {\n    setExtraPhoneNumbers(prev => {\n      const valid = ONLY_DIGITS.test(value);\n      const newNum = valid ? value.trim() : prev[index];\n      const newArr = prev.slice();\n      newArr.splice(index, 1, newNum);\n      return newArr;\n    });\n  };\n\n  const removeExtraPhoneNumber = (index: number) => {\n    setExtraPhoneNumbers(prev => {\n      const newArr = prev.slice();\n      newArr.splice(index, 1);\n      return newArr;\n    });\n  };\n\n  return (\n    <div>\n      <div className={styles.wrapper}>\n        <form className={styles.container}>\n          <label>Прізвище\n            <input\n              value={lastName}\n              placeholder=\"Прізвище\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n          </label>\n          <label>Ім'я\n            <input\n              value={firstName}\n              placeholder=\"Ім'я\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n          </label>\n          <label>По-батькові\n            <input\n              value={patronymic}\n              placeholder=\"По-батькові\"\n              onChange={(e) => setPatronymic(e.target.value)}\n            />\n          </label>\n          <label>Тип акаунту\n            <Select\n              value={selectedUserType}\n              onChange={e => setSelectedUserType(e)}\n              options={isStudent(user) ? studentsTypesData : userTypesData}\n              //@ts-ignore\n              styles={selectLightStyles}\n              menuPortalTarget={document.body}\n              isSearchable\n              placeholder='Виберіть тип'\n            />\n          </label>\n          {!isStudent(user) && (\n            <>\n              <label>Тип занятості\n                <Select\n                  value={selectedEmploymentType}\n                  onChange={e => setSelectedEmploymentType(e)}\n                  options={employmentTypesData}\n                  //@ts-ignore\n                  styles={selectLightStyles}\n                  menuPortalTarget={document.body}\n                  isSearchable\n                  placeholder='Виберіть тип зайнятість'\n                />\n              </label>\n              <label>Безстроковий термін дії\n                <input type=\"checkbox\" checked={withDateLimit}\n                       onChange={() => setWithDateLimit(prevState => !prevState)}\n                />\n              </label>\n            </>\n          )}\n          {!withDateLimit && (\n            <label>Термін дії\n              <input type=\"date\"\n                     value={expireDate}\n                     onChange={e => setExpireDate(e.target.value)}\n              />\n            </label>\n          )}\n          {(selectedUserType.value === UserTypes.TEACHER\n            || selectedUserType.value === UserTypes.CONCERTMASTER\n            || selectedUserType.value === UserTypes.ILLUSTRATOR || isStudent(user)\n          ) && (\n            <label>Кафедра\n              <Select\n                value={selectedDepartment}\n                onChange={e => setSelectedDepartment(e)}\n                options={departmentsData}\n                //@ts-ignore\n                styles={selectLightStyles}\n                menuPortalTarget={document.body}\n                isSearchable\n                placeholder='Виберіть кафедру'\n              />\n            </label>\n          )}\n          {user && (\n            <label>Телефон\n              <input type=\"phone\"\n                     value={phoneNumber}\n                     onChange={e => setPhoneNumber(e.target.value)}\n              />\n            </label>\n          )}\n          {user && extraPhoneNumbers.map((number: string, index: number) => (\n            <label className={styles.extraPhoneWrapper} key={index}>Додатковий телефон {index + 1}\n              <input type=\"phone\"\n                     value={extraPhoneNumbers[index]}\n                     onChange={e => editExtraNumber(e.target.value, index)}\n              />\n              <img src={removeIcon} alt=\"remove\" onClick={() => removeExtraPhoneNumber(index)}/>\n            </label>\n          ))}\n          {user && (\n            <Button\n              onClick={addExtraPhoneNumber}\n              style={{width: 130, height: 30, alignSelf: 'flex-end'}}\n            >\n              Додати телефон\n            </Button>\n          )}\n          {user ? (\n            <Button onClick={handleUpdateUser} style={{marginTop: 16, height: 40}}\n                    disabled={!firstName || !lastName}>\n              Зберегти зміни\n            </Button>\n          ) : (\n            <Button onClick={handleSignUpEmployee} style={{marginTop: 16, height: 40}}\n                    disabled={!firstName || !lastName}>\n              Створити новий акаунт\n            </Button>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default EditUserPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createUser.ts",[],["785","786"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signupEmployee.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteUser.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/errorHandler/ErrorHandler.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/logout.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/users.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/ConfirmBody.tsx",["787"],"import React, {useEffect} from \"react\";\nimport Button from \"../button/Button\";\nimport styles from \"../classroom/classroom.module.css\";\nimport {disableClassroomBeforeFreeVar, disabledTimeVar} from \"../../api/client\";\nimport {useLocal} from \"../../hooks/useLocal\";\n\nconst ConfirmBody = () => {\n    const {data: {disabledTime}} = useLocal('disabledTime');\n    const {data: {disableClassroomBeforeFree}} = useLocal('disableClassroomBeforeFree');\n\n    useEffect(() => {\n      disableClassroomBeforeFreeVar(false);\n    }, []);\n\n    return (\n      <div>\n        <p className={styles.confirmText}>Підтвердіть звільнення аудиторії</p>\n        <div>\n          <input type=\"checkbox\" checked={disableClassroomBeforeFree}\n                 onChange={(e) => disableClassroomBeforeFreeVar(e.target.checked)}/>\n          Заблокувати аудиторію {disableClassroomBeforeFree && (\n            <span>на {disabledTime} хв.</span>\n        )}\n        </div>\n        {disableClassroomBeforeFree && (\n          <div className={styles.disableOptions}>\n            <button onClick={() => disabledTimeVar(15)}\n                    className={disabledTime === 15 ? styles.timeButtonActive : styles.timeButton}>\n              15 хв.\n            </button>\n            <button onClick={() => disabledTimeVar(30)}\n                    className={disabledTime === 30 ? styles.timeButtonActive : styles.timeButton}>\n              30 хв.\n            </button>\n            <button onClick={() => disabledTimeVar(45)}\n                    className={disabledTime === 45 ? styles.timeButtonActive : styles.timeButton}>\n              45 хв.\n            </button>\n            <button onClick={() => disabledTimeVar(60)}\n                    className={disabledTime === 60 ? styles.timeButtonActive : styles.timeButton}>\n              1 год.\n            </button>\n            <button onClick={() => disabledTimeVar(90)}\n                    className={disabledTime === 90 ? styles.timeButtonActive : styles.timeButton}>\n              1 год. 30 хв.\n            </button>\n            <button onClick={() => disabledTimeVar(120)}\n                    className={disabledTime === 120 ? styles.timeButtonActive : styles.timeButton}>\n              2 год.\n            </button>\n            <div className={[15, 30, 45, 60, 90, 120].includes(disabledTime) ? styles.customTimeInput :\n              styles.customTimeInputActive}>\n              <input type=\"number\" value={disabledTime} min={5} max={180} step={5}\n                     onChange={(e) => {\n                       disabledTimeVar(parseInt(e.target.value));\n                     }}/>\n              <span>хв.</span>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n;\n\nexport default ConfirmBody;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/verifyButton/VerifyButton.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/disableDispatcher.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/dispatcherActive.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/dispatcherStatus.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/approveFooter/DeleteUserConfirmPopup.tsx",["788","789"],"import React from \"react\";\nimport {client} from \"../../../api/client\";\nimport {DELETE_USER} from \"../../../api/operations/mutations/deleteUser\";\nimport {ErrorCodes, ErrorCodesUa} from \"../../../models/models\";\nimport Button from \"../../../components/button/Button\";\nimport handleOperation from \"../../../helpers/handleOperation\";\n\n\ntype PropTypes = {\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  userId: number;\n}\n\nconst DeleteUserConfirmPopup: React.FC<PropTypes> = ({dispatch, dispatchNotification, userId}) => {\n  const handleCancel = () => dispatch({type: \"POP_POPUP_WINDOW\"});\n  const handleOk = async () => {\n    const operation = client.mutate({\n      mutation: DELETE_USER,\n      variables: {\n        where: {\n          id: userId\n        }\n      },\n      update(cache) {\n        cache.modify({\n          fields: {\n            users(existingUsersRefs, {readField}) {\n              return existingUsersRefs.filter(\n                (userRef: any) => userId !== readField('id', userRef),\n              );\n            },\n          },\n        })\n      }\n    })\n    await handleOperation(operation, 'deleteOneUser', dispatchNotification, dispatch, 'Користувача видалено.');\n  };\n\n  return (\n    <>\n      <Button\n        color='blue'\n        style={{marginRight: 8, height: 40}}\n        onClick={handleCancel}\n      >\n        Відміна\n      </Button>\n      <Button\n        color='red'\n        onClick={handleOk}\n      >\n        Видалити користувача\n      </Button>\n    </>\n  )\n};\n\nexport default DeleteUserConfirmPopup;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/handleOperation.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/completeEmployeeAccount/CompleteEmployeeAccountPopupBody.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/validators.ts",["790","791","792","793"],"export const PASSWORD_SOFT_VALID = /^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})/;\nexport const PASSWORD_STRONG_VALID = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\nexport const PHONE_VALID = /\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/;\nexport const ONLY_DIGITS = /^[0-9,+]*$/;\nexport const EMAIL_VALID = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\nexport const ONLY_CYRILLIC = /[\\u0400-\\u04FF-’]/;\n\nexport const validationErrors = {\n  REQUIRED_FIELD: \"Обов'язкове поле\",\n  INVALID_FORMAT: \"Невірний формат\",\n  PASSWORDS_NOT_SAME: 'Паролі не співпадають',\n  INVALID_PASSWORD: 'Не меньше 6 символів і має містити букви та цифри.',\n  ONLY_CYRILLIC: \"Тільки символи кирилиці\",\n  NO_START_YEAR: \"Рік вступу не вибрано\",\n  NO_DEPARTMENT: \"Кафедру не вибрано\",\n  NO_DEGREE: \"Навчальний ступінь не вибрано\",\n}\n\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/completeEmployeeAccountRequestEmail.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/getMinutsWithZero.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateUser.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/dispatcherSettings/DispatcherSettings.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/dispatcherSettings/SectionTitle.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/dispatcherSettings/SectionHint.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/crashMode.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/crashModeSwitchOn.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/crashModeSwitchOff.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/dispatcherSettings/ConfirmCrashModeBody.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/dispatcherSettings/DispatcherSettingsSection.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/dispatcherSettings/sections/CrashModeSettingsSection.tsx",["794","795"],"import React from 'react';\nimport {useQuery} from \"@apollo/client\";\nimport {CRASH_MODE} from \"../../../../api/operations/queries/crashMode\";\nimport {usePopupWindow} from \"../../../../components/popupWindow/PopupWindowProvider\";\nimport {useNotification} from \"../../../../components/notification/NotificationProvider\";\nimport {client} from \"../../../../api/client\";\nimport {CRASH_MODE_SWITCH_ON} from \"../../../../api/operations/mutations/crashModeSwitchOn\";\nimport moment from \"moment\";\nimport handleOperation from \"../../../../helpers/handleOperation\";\nimport {CRASH_MODE_SWITCH_OFF} from \"../../../../api/operations/mutations/crashModeSwitchOff\";\nimport ConfirmCrashModeBody from \"../ConfirmCrashModeBody\";\nimport Button from \"../../../../components/button/Button\";\n\nfunction CrashModeSettingsSection() {\n  const {data, loading, error} = useQuery(CRASH_MODE);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n\n  const handleCrashModeOn = async (until: string, comment: string, dispatch: any) => {\n    try {\n      const result = await client.mutate({\n        mutation: CRASH_MODE_SWITCH_ON,\n        variables: {\n          input: {\n            until: until ? moment(until).toISOString() : null,\n            comment\n          }\n        }\n      });\n      handleOperation(result, 'crashModeSwitchOn', dispatchNotification, dispatch, 'Режим невідповідності даних увімкнено');\n      await client.query({query: CRASH_MODE, fetchPolicy: 'network-only'})\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleCrashModeOff = async (dispatch: any) => {\n    try {\n      const result = await client.mutate({\n        mutation: CRASH_MODE_SWITCH_OFF\n      });\n      handleOperation(result, 'crashModeSwitchOff', dispatchNotification, dispatch, 'Режим невідповідності даних вимкнено');\n      await client.query({query: CRASH_MODE, fetchPolicy: 'network-only'})\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const confirmCrashModeOn = () => {\n    dispatchPopupWindow({\n      header: <h1>Увага!</h1>,\n      body: (\n        <ConfirmCrashModeBody handleCrashModeOn={handleCrashModeOn}/>\n      ),\n      footer: ''\n    })\n  };\n\n  const ConfirmCrashModeOffFooter = ({dispatch}: any) => (\n    <>\n      <Button onClick={() => handleCrashModeOff(dispatch)}>Підтвердити</Button>\n    </>\n  )\n\n  const confirmCrashModeOff = () => {\n    dispatchPopupWindow({\n      header: <h1>Увага!</h1>,\n      body: <p>Ви дійсно бажаєте вимкнути режим невідповідності даних?</p>,\n      footer: <ConfirmCrashModeOffFooter/>\n    })\n  };\n  return (\n    <div>\n      {data?.crashMode.isActive ? (\n        <>\n          <p>Режим невідповідності даних увімкнено\n            {data.crashMode.until && <> до <b> {moment(data?.crashMode.until).format('DD.MM.YYYY HH:mm')}</b></>}\n            .\n          </p>\n          <p>Причина: {data.crashMode.comment || 'відсутня'}.</p>\n          <Button onClick={confirmCrashModeOff}>\n            Вимкнути режим невідповідности даних\n          </Button>\n        </>\n      ) : (\n        <>\n          <p>Режим невідповідності даних вимкнено.</p>\n          <Button onClick={confirmCrashModeOn}>\n            Увімкнути режим невідповідности даних\n          </Button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default CrashModeSettingsSection;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/classrooms/CrashModeAlert.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/schedule/AdminSchedule.tsx",["796"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/schedule/AdminScheduleClassroom.tsx",["797"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/schedule/dayTabs/DayTabs.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/scheduleHelpers.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantRegistration/chooseTime/ChooseTime.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/splash/Splash.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/scheduleUnits.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/schedule/scheduleUnitRow/ScheduleUnitRow.tsx",["798"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/schedule/scheduleUnitPopup/ScheduleUnitPopup.tsx",["799","800","801","802","803"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteScheduleUnit.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateScheduleUnit.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createScheduleUnit.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/scheduleSubUnits.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/schedule/ScheduleUnitList.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/edit/Edit.tsx",["804"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/add/Add.tsx",["805"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/back/Back.tsx",["806"],{"ruleId":"807","severity":1,"message":"808","line":14,"column":9,"nodeType":"809","messageId":"810","endLine":14,"endColumn":22},{"ruleId":"811","replacedBy":"812"},{"ruleId":"813","replacedBy":"814"},{"ruleId":"815","severity":1,"message":"816","line":19,"column":6,"nodeType":"817","endLine":19,"endColumn":8,"suggestions":"818"},{"ruleId":"807","severity":1,"message":"819","line":1,"column":56,"nodeType":"809","messageId":"810","endLine":1,"endColumn":64},{"ruleId":"815","severity":1,"message":"820","line":59,"column":6,"nodeType":"817","endLine":59,"endColumn":15,"suggestions":"821"},{"ruleId":"815","severity":1,"message":"822","line":63,"column":6,"nodeType":"817","endLine":63,"endColumn":8,"suggestions":"823"},{"ruleId":"815","severity":1,"message":"824","line":44,"column":6,"nodeType":"817","endLine":44,"endColumn":42,"suggestions":"825"},{"ruleId":"807","severity":1,"message":"826","line":3,"column":9,"nodeType":"809","messageId":"810","endLine":3,"endColumn":17},{"ruleId":"807","severity":1,"message":"827","line":15,"column":9,"nodeType":"809","messageId":"810","endLine":15,"endColumn":14},{"ruleId":"807","severity":1,"message":"828","line":5,"column":9,"nodeType":"809","messageId":"810","endLine":5,"endColumn":22},{"ruleId":"807","severity":1,"message":"829","line":59,"column":25,"nodeType":"809","messageId":"810","endLine":59,"endColumn":30},{"ruleId":"807","severity":1,"message":"830","line":65,"column":23,"nodeType":"809","messageId":"810","endLine":65,"endColumn":37},{"ruleId":"815","severity":1,"message":"831","line":53,"column":6,"nodeType":"817","endLine":53,"endColumn":8,"suggestions":"832"},{"ruleId":"815","severity":1,"message":"831","line":57,"column":6,"nodeType":"817","endLine":57,"endColumn":12,"suggestions":"833"},{"ruleId":"807","severity":1,"message":"834","line":4,"column":8,"nodeType":"809","messageId":"810","endLine":4,"endColumn":16},{"ruleId":"807","severity":1,"message":"835","line":5,"column":31,"nodeType":"809","messageId":"810","endLine":5,"endColumn":35},{"ruleId":"807","severity":1,"message":"836","line":16,"column":20,"nodeType":"809","messageId":"810","endLine":16,"endColumn":31},{"ruleId":"807","severity":1,"message":"837","line":1,"column":9,"nodeType":"809","messageId":"810","endLine":1,"endColumn":13},{"ruleId":"807","severity":1,"message":"838","line":117,"column":7,"nodeType":"809","messageId":"810","endLine":117,"endColumn":32},{"ruleId":"839","severity":1,"message":"840","line":122,"column":38,"nodeType":"841","messageId":"842","endLine":122,"endColumn":40},{"ruleId":"807","severity":1,"message":"843","line":292,"column":9,"nodeType":"809","messageId":"810","endLine":292,"endColumn":27},{"ruleId":"815","severity":1,"message":"844","line":104,"column":6,"nodeType":"817","endLine":104,"endColumn":8,"suggestions":"845"},{"ruleId":"807","severity":1,"message":"846","line":135,"column":9,"nodeType":"809","messageId":"810","endLine":135,"endColumn":27},{"ruleId":"807","severity":1,"message":"847","line":8,"column":8,"nodeType":"809","messageId":"810","endLine":8,"endColumn":14},{"ruleId":"815","severity":1,"message":"848","line":41,"column":6,"nodeType":"817","endLine":41,"endColumn":8,"suggestions":"849"},{"ruleId":"807","severity":1,"message":"850","line":1,"column":40,"nodeType":"809","messageId":"810","endLine":1,"endColumn":47},{"ruleId":"807","severity":1,"message":"851","line":8,"column":3,"nodeType":"809","messageId":"810","endLine":8,"endColumn":18},{"ruleId":"807","severity":1,"message":"852","line":18,"column":3,"nodeType":"809","messageId":"810","endLine":18,"endColumn":26},{"ruleId":"807","severity":1,"message":"853","line":43,"column":70,"nodeType":"809","messageId":"810","endLine":43,"endColumn":78},{"ruleId":"807","severity":1,"message":"854","line":43,"column":80,"nodeType":"809","messageId":"810","endLine":43,"endColumn":85},{"ruleId":"815","severity":1,"message":"855","line":72,"column":6,"nodeType":"817","endLine":72,"endColumn":8,"suggestions":"856"},{"ruleId":"815","severity":1,"message":"857","line":93,"column":6,"nodeType":"817","endLine":93,"endColumn":17,"suggestions":"858"},{"ruleId":"807","severity":1,"message":"859","line":14,"column":8,"nodeType":"809","messageId":"810","endLine":14,"endColumn":23},{"ruleId":"815","severity":1,"message":"860","line":73,"column":6,"nodeType":"817","endLine":73,"endColumn":8,"suggestions":"861"},{"ruleId":"807","severity":1,"message":"862","line":22,"column":9,"nodeType":"809","messageId":"810","endLine":22,"endColumn":17},{"ruleId":"807","severity":1,"message":"863","line":43,"column":12,"nodeType":"809","messageId":"810","endLine":43,"endColumn":25},{"ruleId":"807","severity":1,"message":"864","line":45,"column":10,"nodeType":"809","messageId":"810","endLine":45,"endColumn":23},{"ruleId":"815","severity":1,"message":"865","line":80,"column":6,"nodeType":"817","endLine":80,"endColumn":8,"suggestions":"866"},{"ruleId":"867","severity":1,"message":"868","line":87,"column":93,"nodeType":"869","messageId":"870","endLine":87,"endColumn":95},{"ruleId":"867","severity":1,"message":"868","line":88,"column":91,"nodeType":"869","messageId":"870","endLine":88,"endColumn":93},{"ruleId":"871","severity":1,"message":"872","line":12,"column":5,"nodeType":"873","endLine":15,"endColumn":9},{"ruleId":"807","severity":1,"message":"874","line":3,"column":8,"nodeType":"809","messageId":"810","endLine":3,"endColumn":14},{"ruleId":"815","severity":1,"message":"875","line":62,"column":6,"nodeType":"817","endLine":62,"endColumn":18,"suggestions":"876"},{"ruleId":"807","severity":1,"message":"828","line":4,"column":9,"nodeType":"809","messageId":"810","endLine":4,"endColumn":22},{"ruleId":"807","severity":1,"message":"829","line":59,"column":25,"nodeType":"809","messageId":"810","endLine":59,"endColumn":30},{"ruleId":"807","severity":1,"message":"877","line":66,"column":17,"nodeType":"809","messageId":"810","endLine":66,"endColumn":29},{"ruleId":"807","severity":1,"message":"878","line":95,"column":15,"nodeType":"809","messageId":"810","endLine":95,"endColumn":21},{"ruleId":"815","severity":1,"message":"875","line":38,"column":6,"nodeType":"817","endLine":38,"endColumn":17,"suggestions":"879"},{"ruleId":"815","severity":1,"message":"875","line":38,"column":6,"nodeType":"817","endLine":38,"endColumn":15,"suggestions":"880"},{"ruleId":"815","severity":1,"message":"875","line":36,"column":6,"nodeType":"817","endLine":36,"endColumn":19,"suggestions":"881"},{"ruleId":"807","severity":1,"message":"882","line":14,"column":18,"nodeType":"809","messageId":"810","endLine":14,"endColumn":25},{"ruleId":"807","severity":1,"message":"829","line":14,"column":27,"nodeType":"809","messageId":"810","endLine":14,"endColumn":32},{"ruleId":"807","severity":1,"message":"883","line":17,"column":11,"nodeType":"809","messageId":"810","endLine":17,"endColumn":18},{"ruleId":"815","severity":1,"message":"884","line":40,"column":6,"nodeType":"817","endLine":40,"endColumn":19,"suggestions":"885"},{"ruleId":"807","severity":1,"message":"886","line":54,"column":44,"nodeType":"809","messageId":"810","endLine":54,"endColumn":49},{"ruleId":"815","severity":1,"message":"887","line":66,"column":6,"nodeType":"817","endLine":66,"endColumn":23,"suggestions":"888"},{"ruleId":"815","severity":1,"message":"887","line":96,"column":6,"nodeType":"817","endLine":96,"endColumn":8,"suggestions":"889"},{"ruleId":"807","severity":1,"message":"886","line":21,"column":34,"nodeType":"809","messageId":"810","endLine":21,"endColumn":39},{"ruleId":"807","severity":1,"message":"886","line":21,"column":34,"nodeType":"809","messageId":"810","endLine":21,"endColumn":39},{"ruleId":"807","severity":1,"message":"890","line":11,"column":9,"nodeType":"809","messageId":"810","endLine":11,"endColumn":17},{"ruleId":"807","severity":1,"message":"891","line":12,"column":8,"nodeType":"809","messageId":"810","endLine":12,"endColumn":13},{"ruleId":"807","severity":1,"message":"886","line":26,"column":34,"nodeType":"809","messageId":"810","endLine":26,"endColumn":39},{"ruleId":"815","severity":1,"message":"887","line":38,"column":6,"nodeType":"817","endLine":38,"endColumn":17,"suggestions":"892"},{"ruleId":"807","severity":1,"message":"886","line":35,"column":34,"nodeType":"809","messageId":"810","endLine":35,"endColumn":39},{"ruleId":"807","severity":1,"message":"893","line":36,"column":22,"nodeType":"809","messageId":"810","endLine":36,"endColumn":37},{"ruleId":"815","severity":1,"message":"894","line":59,"column":6,"nodeType":"817","endLine":59,"endColumn":34,"suggestions":"895"},{"ruleId":"807","severity":1,"message":"896","line":66,"column":18,"nodeType":"809","messageId":"810","endLine":66,"endColumn":22},{"ruleId":"897","severity":1,"message":"898","line":126,"column":11,"nodeType":"873","endLine":126,"endColumn":23},{"ruleId":"811","replacedBy":"899"},{"ruleId":"813","replacedBy":"900"},{"ruleId":"807","severity":1,"message":"901","line":9,"column":11,"nodeType":"809","messageId":"810","endLine":9,"endColumn":19},{"ruleId":"811","replacedBy":"899"},{"ruleId":"813","replacedBy":"900"},{"ruleId":"811","replacedBy":"902"},{"ruleId":"813","replacedBy":"903"},{"ruleId":"807","severity":1,"message":"883","line":22,"column":9,"nodeType":"809","messageId":"810","endLine":22,"endColumn":16},{"ruleId":"815","severity":1,"message":"904","line":60,"column":6,"nodeType":"817","endLine":60,"endColumn":18,"suggestions":"905"},{"ruleId":"807","severity":1,"message":"893","line":27,"column":22,"nodeType":"809","messageId":"810","endLine":27,"endColumn":37},{"ruleId":"807","severity":1,"message":"906","line":2,"column":72,"nodeType":"809","messageId":"810","endLine":2,"endColumn":81},{"ruleId":"807","severity":1,"message":"862","line":8,"column":9,"nodeType":"809","messageId":"810","endLine":8,"endColumn":17},{"ruleId":"867","severity":1,"message":"907","line":53,"column":40,"nodeType":"869","messageId":"870","endLine":53,"endColumn":42},{"ruleId":"867","severity":1,"message":"907","line":53,"column":76,"nodeType":"869","messageId":"870","endLine":53,"endColumn":78},{"ruleId":"815","severity":1,"message":"908","line":98,"column":6,"nodeType":"817","endLine":98,"endColumn":12,"suggestions":"909"},{"ruleId":"811","replacedBy":"910"},{"ruleId":"813","replacedBy":"911"},{"ruleId":"807","severity":1,"message":"912","line":2,"column":8,"nodeType":"809","messageId":"810","endLine":2,"endColumn":14},{"ruleId":"807","severity":1,"message":"913","line":4,"column":9,"nodeType":"809","messageId":"810","endLine":4,"endColumn":19},{"ruleId":"807","severity":1,"message":"914","line":4,"column":21,"nodeType":"809","messageId":"810","endLine":4,"endColumn":33},{"ruleId":"915","severity":1,"message":"916","line":2,"column":82,"nodeType":"917","messageId":"918","endLine":2,"endColumn":83,"suggestions":"919"},{"ruleId":"915","severity":1,"message":"920","line":2,"column":85,"nodeType":"917","messageId":"918","endLine":2,"endColumn":86,"suggestions":"921"},{"ruleId":"915","severity":1,"message":"922","line":2,"column":88,"nodeType":"917","messageId":"918","endLine":2,"endColumn":89,"suggestions":"923"},{"ruleId":"924","severity":1,"message":"925","line":5,"column":28,"nodeType":"917","messageId":"926","endLine":5,"endColumn":476},{"ruleId":"807","severity":1,"message":"882","line":15,"column":16,"nodeType":"809","messageId":"810","endLine":15,"endColumn":23},{"ruleId":"807","severity":1,"message":"829","line":15,"column":25,"nodeType":"809","messageId":"810","endLine":15,"endColumn":30},{"ruleId":"815","severity":1,"message":"927","line":42,"column":6,"nodeType":"817","endLine":42,"endColumn":18,"suggestions":"928"},{"ruleId":"815","severity":1,"message":"929","line":64,"column":6,"nodeType":"817","endLine":64,"endColumn":17,"suggestions":"930"},{"ruleId":"807","severity":1,"message":"931","line":1,"column":20,"nodeType":"809","messageId":"810","endLine":1,"endColumn":26},{"ruleId":"815","severity":1,"message":"932","line":96,"column":6,"nodeType":"817","endLine":96,"endColumn":44,"suggestions":"933"},{"ruleId":"815","severity":1,"message":"934","line":109,"column":6,"nodeType":"817","endLine":109,"endColumn":13,"suggestions":"935"},{"ruleId":"815","severity":1,"message":"936","line":124,"column":6,"nodeType":"817","endLine":124,"endColumn":44,"suggestions":"937"},{"ruleId":"815","severity":1,"message":"938","line":145,"column":6,"nodeType":"817","endLine":145,"endColumn":8,"suggestions":"939"},{"ruleId":"940","severity":1,"message":"941","line":601,"column":1,"nodeType":"942","endLine":605,"endColumn":3},{"ruleId":"871","severity":1,"message":"872","line":20,"column":5,"nodeType":"873","endLine":30,"endColumn":7},{"ruleId":"871","severity":1,"message":"872","line":12,"column":5,"nodeType":"873","endLine":12,"endColumn":70},{"ruleId":"871","severity":1,"message":"872","line":17,"column":10,"nodeType":"873","endLine":17,"endColumn":93},"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["943"],"no-negated-in-lhs",["944"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["945"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'handleCloseNotification'. Either include it or remove the dependency array.",["946"],"React Hook useEffect has a missing dependency: 'handleStartTimer'. Either include it or remove the dependency array.",["947"],"React Hook useEffect has a missing dependency: 'dispatcherActive.dispatcherActive'. Either include it or remove the dependency array.",["948"],"'Redirect' is defined but never used.","'style' is assigned a value but never used.","'ACCESS_RIGHTS' is defined but never used.","'error' is assigned a value but never used.","'setIsSearching' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getClassrooms'. Either include it or remove the dependency array.",["949"],["950"],"'useUsers' is defined but never used.","'User' is defined but never used.","'setEditMode' is assigned a value but never used.","'bool' is defined but never used.","'simpleIntFromScheduleUnit' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'occupiedOnSchedule' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleResumeEvent', 'handleWindowFocusEvent', and 'subscribeToMore'. Either include them or remove the dependency array.",["951"],"'handleFilterChange' is assigned a value but never used.","'moment' is defined but never used.","React Hook useEffect has missing dependencies: 'classroomName' and 'date'. Either include them or remove the dependency array.",["952"],"'useMemo' is defined but never used.","'OccupiedStateUa' is defined but never used.","'shouldOccupiedByTeacher' is defined but never used.","'schedule' is assigned a value but never used.","'chair' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'classroom.name'. Either include it or remove the dependency array.",["953"],"React Hook useEffect has missing dependencies: 'defineStatus', 'defineStatusStiles', 'defineStyle', and 'occupied.state'. Either include them or remove the dependency array.",["954"],"'handleOperation' is defined but never used.","React Hook useEffect has missing dependencies: 'id', 'name', 'occupied.state', and 'occupied.user'. Either include them or remove the dependency array.",["955"],"'useLocal' is defined but never used.","'freeClassroom' is assigned a value but never used.","'scheduleUnits' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'classroomName'. Either include it or remove the dependency array.",["956"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Loader' is defined but never used.","React Hook useEffect has a missing dependency: 'dataItem'. Either include it or remove the dependency array.",["957"],"'accessRights' is assigned a value but never used.","'result' is assigned a value but never used.",["958"],["959"],["960"],"'loading' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'instrument'. Either include it or remove the dependency array.",["961"],"'watch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["962"],["963"],"'fullName' is defined but never used.","'Title' is defined but never used.",["964"],"'subscribeToMore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isEditMode'. Either include it or remove the dependency array.",["965"],"'type' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["943"],["944"],"'hissings' is assigned a value but never used.",["943"],["944"],"React Hook useEffect has a missing dependency: 'classrooms.length'. Either include it or remove the dependency array.",["966"],"'UserTypes' is defined but never used.","Unexpected mix of '&&' and '||'.","React Hook useEffect has missing dependencies: 'error', 'loading', and 'user'. Either include them or remove the dependency array.",["967"],["943"],["944"],"'Button' is defined but never used.","'ErrorCodes' is defined but never used.","'ErrorCodesUa' is defined but never used.","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["968","969"],"Unnecessary escape character: \\^.",["970","971"],"Unnecessary escape character: \\*.",["972","973"],"no-control-regex","Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e, \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e.","unexpected","React Hook useEffect has a missing dependency: 'listDataItem'. Either include it or remove the dependency array.",["974"],"React Hook useEffect has a missing dependency: 'refetchScheduleUnits'. Either include it or remove the dependency array.",["975"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'allUnits'. Either include it or remove the dependency array.",["976"],"React Hook useEffect has missing dependencies: 'selectTypesData' and 'unit'. Either include them or remove the dependency array.",["977"],"React Hook useEffect has a missing dependency: 'checkForErrors'. Either include it or remove the dependency array.",["978"],"React Hook useEffect has missing dependencies: 'checkForErrors' and 'unit'. Either include them or remove the dependency array.",["979"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"980","fix":"981"},{"desc":"982","fix":"983"},{"desc":"984","fix":"985"},{"desc":"986","fix":"987"},{"desc":"988","fix":"989"},{"desc":"990","fix":"991"},{"desc":"992","fix":"993"},{"desc":"994","fix":"995"},{"desc":"996","fix":"997"},{"desc":"998","fix":"999"},{"desc":"1000","fix":"1001"},{"desc":"1002","fix":"1003"},{"desc":"1004","fix":"1005"},{"desc":"1006","fix":"1007"},{"desc":"1008","fix":"1009"},{"desc":"1010","fix":"1011"},{"desc":"1012","fix":"1013"},{"desc":"1014","fix":"1015"},{"desc":"1016","fix":"1017"},{"desc":"1018","fix":"1019"},{"desc":"1020","fix":"1021"},{"desc":"1022","fix":"1023"},{"desc":"1024","fix":"1025"},{"messageId":"1026","fix":"1027","desc":"1028"},{"messageId":"1029","fix":"1030","desc":"1031"},{"messageId":"1026","fix":"1032","desc":"1028"},{"messageId":"1029","fix":"1033","desc":"1031"},{"messageId":"1026","fix":"1034","desc":"1028"},{"messageId":"1029","fix":"1035","desc":"1031"},{"desc":"1036","fix":"1037"},{"desc":"1038","fix":"1039"},{"desc":"1040","fix":"1041"},{"desc":"1042","fix":"1043"},{"desc":"1044","fix":"1045"},{"desc":"1046","fix":"1047"},"Update the dependencies array to be: [history]",{"range":"1048","text":"1049"},"Update the dependencies array to be: [handleCloseNotification, opacity]",{"range":"1050","text":"1051"},"Update the dependencies array to be: [handleStartTimer]",{"range":"1052","text":"1053"},"Update the dependencies array to be: [data, loading, error, isDispatcher, dispatcherActive.dispatcherActive]",{"range":"1054","text":"1055"},"Update the dependencies array to be: [getClassrooms]",{"range":"1056","text":"1057"},"Update the dependencies array to be: [date, getClassrooms]",{"range":"1058","text":"1059"},"Update the dependencies array to be: [handleResumeEvent, handleWindowFocusEvent, subscribeToMore]",{"range":"1060","text":"1061"},"Update the dependencies array to be: [classroomName, date]",{"range":"1062","text":"1063"},"Update the dependencies array to be: [classroom.name]",{"range":"1064","text":"1065"},"Update the dependencies array to be: [classroom, defineStatus, defineStatusStiles, defineStyle, occupied.state]",{"range":"1066","text":"1067"},"Update the dependencies array to be: [id, name, occupied.state, occupied.user]",{"range":"1068","text":"1069"},"Update the dependencies array to be: [classroomName]",{"range":"1070","text":"1071"},"Update the dependencies array to be: [classrooms, dataItem]",{"range":"1072","text":"1073"},"Update the dependencies array to be: [dataItem, faculties]",{"range":"1074","text":"1075"},"Update the dependencies array to be: [dataItem, degrees]",{"range":"1076","text":"1077"},"Update the dependencies array to be: [dataItem, departments]",{"range":"1078","text":"1079"},"Update the dependencies array to be: [instrument, instruments]",{"range":"1080","text":"1081"},"Update the dependencies array to be: [departmentsData, item]",{"range":"1082","text":"1083"},"Update the dependencies array to be: [item]",{"range":"1084","text":"1085"},"Update the dependencies array to be: [faculties, item]",{"range":"1086","text":"1087"},"Update the dependencies array to be: [classroomsData, instrument, isEditMode]",{"range":"1088","text":"1089"},"Update the dependencies array to be: [classrooms.length, showSplash]",{"range":"1090","text":"1091"},"Update the dependencies array to be: [data, error, loading, user]",{"range":"1092","text":"1093"},"removeEscape",{"range":"1094","text":"1095"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1096","text":"1097"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1098","text":"1095"},{"range":"1099","text":"1097"},{"range":"1100","text":"1095"},{"range":"1101","text":"1097"},"Update the dependencies array to be: [classrooms, listDataItem]",{"range":"1102","text":"1103"},"Update the dependencies array to be: [chosenDay, refetchScheduleUnits]",{"range":"1104","text":"1105"},"Update the dependencies array to be: [dateStart, dateEnd, timeTo, timeFrom, allUnits]",{"range":"1106","text":"1107"},"Update the dependencies array to be: [selectTypesData, unit, users]",{"range":"1108","text":"1109"},"Update the dependencies array to be: [dateStart, dateEnd, timeFrom, timeTo, checkForErrors]",{"range":"1110","text":"1111"},"Update the dependencies array to be: [checkForErrors, unit]",{"range":"1112","text":"1113"},[537,539],"[history]",[1274,1283],"[handleCloseNotification, opacity]",[1336,1338],"[handleStartTimer]",[2026,2062],"[data, loading, error, isDispatcher, dispatcherActive.dispatcherActive]",[1676,1678],"[getClassrooms]",[1732,1738],"[date, getClassrooms]",[4074,4076],"[handleResumeEvent, handleWindowFocusEvent, subscribeToMore]",[1549,1551],"[classroomName, date]",[2405,2407],"[classroom.name]",[3087,3098],"[classroom, defineStatus, defineStatusStiles, defineStyle, occupied.state]",[2566,2568],"[id, name, occupied.state, occupied.user]",[3435,3437],"[classroomName]",[3177,3189],"[classrooms, dataItem]",[1718,1729],"[dataItem, faculties]",[1698,1707],"[dataItem, degrees]",[1678,1691],"[dataItem, departments]",[2156,2169],"[instrument, instruments]",[2936,2953],"[departmentsData, item]",[4063,4065],"[item]",[1637,1648],"[faculties, item]",[2761,2789],"[classroomsData, instrument, isEditMode]",[2120,2132],"[classrooms.length, showSplash]",[4612,4618],"[data, error, loading, user]",[206,207],"",[206,206],"\\",[209,210],[209,209],[212,213],[212,212],[1366,1378],"[classrooms, listDataItem]",[1986,1997],"[chosenDay, refetchScheduleUnits]",[3811,3849],"[dateStart, dateEnd, timeTo, timeFrom, allUnits]",[4323,4330],"[selectTypesData, unit, users]",[4949,4987],"[dateStart, dateEnd, timeFrom, timeTo, checkForErrors]",[5379,5381],"[checkForErrors, unit]"]