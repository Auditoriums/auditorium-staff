[{"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/index.tsx":"1","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/reportWebVitals.ts":"2","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/client.ts":"3","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/App.tsx":"4","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindowProvider.tsx":"5","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/NotificationProvider.tsx":"6","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/Layout.tsx":"7","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/Notification.tsx":"8","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindow.tsx":"9","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/sidebar/Sidebar.tsx":"10","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/content/Content.tsx":"11","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/logo/Logo.tsx":"12","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/Users.tsx":"13","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/Registry.tsx":"14","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/schedule/Schedule.tsx":"15","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/profile/Profile.tsx":"16","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/PDFConfig.ts":"17","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/styles/selectStyles.ts":"18","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/models/models.ts":"19","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/helpers.ts":"20","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/users.ts":"21","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/register.ts":"22","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classrooms.ts":"23","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/classrooms/Classrooms.tsx":"24","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteClassroom.ts":"25","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/header/Header.tsx":"26","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/button/Button.tsx":"27","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/userProfile/UserProfile.tsx":"28","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/scheduleUnit/ScheduleUnit.tsx":"29","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/constants.ts":"30","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/schedule.ts":"31","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createClassroom.ts":"32","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/departments.ts":"33","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/classroom/Classroom.tsx":"34","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/Caviar.tsx":"35","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/title/Title.tsx":"36","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/instruments/Instruments.tsx":"37","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/ClassroomInfo.tsx":"38","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tag/Tag.tsx":"39","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/Footer.tsx":"40","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/freeClassroom.ts":"41","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantRegistration/OccupantRegistration.tsx":"42","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tooltip/Tooltip.tsx":"43","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantInfo/OccupantInfo.tsx":"44","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/occupyClassroom.ts":"45","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/edit/Edit.tsx":"46","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/add/Add.tsx":"47","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/delete/Delete.tsx":"48","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/HeaderSelect.tsx":"49","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/selectStyles.ts":"50","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/filterClassrooms.ts":"51","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerCheckBox/HeaderCheckbox.tsx":"52","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/dataList/DataList.tsx":"53","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useUsers.ts":"54","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useInstruments.ts":"55","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/instruments.ts":"56","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createInstrument.ts":"57","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteInstrument.ts":"58","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateInstrument.ts":"59","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDepartments.ts":"60","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useFaculties.ts":"61","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/faculties.ts":"62","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDepartment.ts":"63","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDepartment.ts":"64","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDepartment.ts":"65","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteFaculty.ts":"66","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createFaculty.ts":"67","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateFaculty.ts":"68","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDegrees.ts":"69","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDegree.ts":"70","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDegree.ts":"71","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDegree.ts":"72","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/degrees.ts":"73","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useClassrooms.tsx":"74","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/loader/Loader.tsx":"75","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/AdminClassrooms.tsx":"76","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/AdminUsers.tsx":"77","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/AdminFaculties.tsx":"78","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/AdminDegrees.tsx":"79","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/AdminDepartments.tsx":"80","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/admin/Admin.tsx":"81","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/AdminInstruments.tsx":"82","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/createClassroomPopupBody/CreateClassroomPopupBody.tsx":"83","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/browseClassroomPopupBody/BrowseClassroomPopupBody.tsx":"84","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/createFacultyPopupBody/CreateFacultyPopupBody.tsx":"85","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/createDegreePopupBody/CreateDegreePopupBody.tsx":"86","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/browseUserPopupBody/BrowseUserPopupBody.tsx":"87","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/createDepartmentPopupBody/CreateDepartmentPopupBody.tsx":"88","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/createInstrumentPopupBody/CreateInstrumentPopupBody.tsx":"89","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/browseInstrumentPopupBody/BrowseInstrumentPopupBody.tsx":"90","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/login/Login.tsx":"91","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/customInput/CustomInput.tsx":"92","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/login.ts":"93","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useMe.ts":"94","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/mail.js":"95","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/conjugate.ts":"96","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/femail.js":"97","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signUp.ts":"98","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/verifyUser.ts":"99","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useLocal.ts":"100","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/helpers/helpers.ts":"101","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/dashboard/Dashboard.tsx":"102","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/queueRecords.ts":"103","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/generalQueue.ts":"104","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/localize/localize.ts":"105","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/pendingClassrooms.ts":"106","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/freeClassrooms.ts":"107","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/queue/Queue.tsx":"108","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/usersQueue.ts":"109","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/addUserToQueue.ts":"110","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/removeUserFromQueue.ts":"111","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/DisableClassroom.tsx":"112","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/disableClassroom.ts":"113","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/enableClassroom.ts":"114","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/disabledClassrooms.ts":"115","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classroom.ts":"116","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/ConfirmFooter.tsx":"117","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/classrooms.ts":"118","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/CaviarItem.tsx":"119","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/giveOutClassroomKey.ts":"120","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/editUserPopupBody/EditUserPopupBody.tsx":"121","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateClassroom.ts":"122","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createUser.ts":"123","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signupEmployee.ts":"124","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteUser.ts":"125","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/errorHandler/ErrorHandler.tsx":"126","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/logout.ts":"127","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/users.ts":"128","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/ConfirmBody.tsx":"129","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/verifyButton/VerifyButton.tsx":"130","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/disableDispatcher.ts":"131","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/dispatcherActive.ts":"132","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/dispatcherStatus.ts":"133","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/approveFooter/DeleteUserConfirmPopup.tsx":"134","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/handleOperation.ts":"135","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/completeEmployeeAccount/CompleteEmployeeAccountPopupBody.tsx":"136","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/validators.ts":"137","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/completeEmployeeAccountRequestEmail.ts":"138","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/getMinutsWithZero.ts":"139","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateUser.ts":"140"},{"size":1237,"mtime":1630320830860,"results":"141","hashOfConfig":"142"},{"size":425,"mtime":1618351407625,"results":"143","hashOfConfig":"142"},{"size":3644,"mtime":1632673070370,"results":"144","hashOfConfig":"142"},{"size":366,"mtime":1630320299113,"results":"145","hashOfConfig":"142"},{"size":1633,"mtime":1632663768042,"results":"146","hashOfConfig":"142"},{"size":1442,"mtime":1618351407598,"results":"147","hashOfConfig":"142"},{"size":900,"mtime":1626990730315,"results":"148","hashOfConfig":"142"},{"size":2009,"mtime":1618351407597,"results":"149","hashOfConfig":"142"},{"size":1800,"mtime":1618924470936,"results":"150","hashOfConfig":"142"},{"size":9582,"mtime":1632558417791,"results":"151","hashOfConfig":"142"},{"size":2845,"mtime":1629666550693,"results":"152","hashOfConfig":"142"},{"size":1021,"mtime":1618351407597,"results":"153","hashOfConfig":"142"},{"size":8826,"mtime":1637968450323,"results":"154","hashOfConfig":"142"},{"size":4449,"mtime":1637970041848,"results":"155","hashOfConfig":"142"},{"size":2169,"mtime":1629580132204,"results":"156","hashOfConfig":"142"},{"size":2400,"mtime":1629743211309,"results":"157","hashOfConfig":"142"},{"size":2852,"mtime":1637268459740,"results":"158","hashOfConfig":"142"},{"size":1849,"mtime":1620896099497,"results":"159","hashOfConfig":"142"},{"size":6934,"mtime":1632686769161,"results":"160","hashOfConfig":"142"},{"size":6637,"mtime":1631372519788,"results":"161","hashOfConfig":"142"},{"size":1637,"mtime":1637682934572,"results":"162","hashOfConfig":"142"},{"size":553,"mtime":1618351407522,"results":"163","hashOfConfig":"142"},{"size":1022,"mtime":1630504553730,"results":"164","hashOfConfig":"142"},{"size":6526,"mtime":1632556555979,"results":"165","hashOfConfig":"142"},{"size":938,"mtime":1630506746008,"results":"166","hashOfConfig":"142"},{"size":240,"mtime":1618351407593,"results":"167","hashOfConfig":"142"},{"size":865,"mtime":1630357471308,"results":"168","hashOfConfig":"142"},{"size":1577,"mtime":1630098153715,"results":"169","hashOfConfig":"142"},{"size":2346,"mtime":1629580039241,"results":"170","hashOfConfig":"142"},{"size":230,"mtime":1630048014966,"results":"171","hashOfConfig":"142"},{"size":366,"mtime":1637269206121,"results":"172","hashOfConfig":"142"},{"size":912,"mtime":1630048015026,"results":"173","hashOfConfig":"142"},{"size":259,"mtime":1630063865094,"results":"174","hashOfConfig":"142"},{"size":5727,"mtime":1631368403756,"results":"175","hashOfConfig":"142"},{"size":597,"mtime":1629549631291,"results":"176","hashOfConfig":"142"},{"size":321,"mtime":1618351407602,"results":"177","hashOfConfig":"142"},{"size":1419,"mtime":1620474079372,"results":"178","hashOfConfig":"142"},{"size":4961,"mtime":1631388233833,"results":"179","hashOfConfig":"142"},{"size":624,"mtime":1618351407601,"results":"180","hashOfConfig":"142"},{"size":12891,"mtime":1634228771573,"results":"181","hashOfConfig":"142"},{"size":877,"mtime":1627337374560,"results":"182","hashOfConfig":"142"},{"size":9415,"mtime":1637966793213,"results":"183","hashOfConfig":"142"},{"size":260,"mtime":1618351407602,"results":"184","hashOfConfig":"142"},{"size":1552,"mtime":1628969892295,"results":"185","hashOfConfig":"142"},{"size":1241,"mtime":1629207980643,"results":"186","hashOfConfig":"142"},{"size":710,"mtime":1619127777030,"results":"187","hashOfConfig":"142"},{"size":339,"mtime":1618781817829,"results":"188","hashOfConfig":"142"},{"size":423,"mtime":1619127814320,"results":"189","hashOfConfig":"142"},{"size":329,"mtime":1618841678420,"results":"190","hashOfConfig":"142"},{"size":1202,"mtime":1618700160684,"results":"191","hashOfConfig":"142"},{"size":1757,"mtime":1630241316425,"results":"192","hashOfConfig":"142"},{"size":406,"mtime":1618858609526,"results":"193","hashOfConfig":"142"},{"size":2094,"mtime":1631657511251,"results":"194","hashOfConfig":"142"},{"size":443,"mtime":1630359386010,"results":"195","hashOfConfig":"142"},{"size":653,"mtime":1630532036193,"results":"196","hashOfConfig":"142"},{"size":305,"mtime":1630532321801,"results":"197","hashOfConfig":"142"},{"size":348,"mtime":1618921707227,"results":"198","hashOfConfig":"142"},{"size":242,"mtime":1627340159100,"results":"199","hashOfConfig":"142"},{"size":400,"mtime":1618930546389,"results":"200","hashOfConfig":"142"},{"size":590,"mtime":1630532124813,"results":"201","hashOfConfig":"142"},{"size":677,"mtime":1619010460893,"results":"202","hashOfConfig":"142"},{"size":220,"mtime":1619004236020,"results":"203","hashOfConfig":"142"},{"size":234,"mtime":1619005104551,"results":"204","hashOfConfig":"142"},{"size":242,"mtime":1627340159111,"results":"205","hashOfConfig":"142"},{"size":286,"mtime":1619008026042,"results":"206","hashOfConfig":"142"},{"size":230,"mtime":1627340159107,"results":"207","hashOfConfig":"142"},{"size":222,"mtime":1619011020952,"results":"208","hashOfConfig":"142"},{"size":271,"mtime":1619011082457,"results":"209","hashOfConfig":"142"},{"size":652,"mtime":1619015029554,"results":"210","hashOfConfig":"142"},{"size":226,"mtime":1627340159095,"results":"211","hashOfConfig":"142"},{"size":218,"mtime":1619014828121,"results":"212","hashOfConfig":"142"},{"size":266,"mtime":1619014919584,"results":"213","hashOfConfig":"142"},{"size":245,"mtime":1619015252188,"results":"214","hashOfConfig":"142"},{"size":861,"mtime":1630349305290,"results":"215","hashOfConfig":"142"},{"size":347,"mtime":1620421410625,"results":"216","hashOfConfig":"142"},{"size":6237,"mtime":1632856236257,"results":"217","hashOfConfig":"142"},{"size":7894,"mtime":1632668892701,"results":"218","hashOfConfig":"142"},{"size":3184,"mtime":1620423480835,"results":"219","hashOfConfig":"142"},{"size":3710,"mtime":1620423480779,"results":"220","hashOfConfig":"142"},{"size":3032,"mtime":1630532168030,"results":"221","hashOfConfig":"142"},{"size":2402,"mtime":1630275311071,"results":"222","hashOfConfig":"142"},{"size":4401,"mtime":1630532510941,"results":"223","hashOfConfig":"142"},{"size":16762,"mtime":1630532124821,"results":"224","hashOfConfig":"142"},{"size":1954,"mtime":1630530124373,"results":"225","hashOfConfig":"142"},{"size":2893,"mtime":1620423480757,"results":"226","hashOfConfig":"142"},{"size":4663,"mtime":1620423480785,"results":"227","hashOfConfig":"142"},{"size":2419,"mtime":1637684292992,"results":"228","hashOfConfig":"142"},{"size":4039,"mtime":1630532168025,"results":"229","hashOfConfig":"142"},{"size":6948,"mtime":1630532241261,"results":"230","hashOfConfig":"142"},{"size":928,"mtime":1630531903936,"results":"231","hashOfConfig":"142"},{"size":4636,"mtime":1632488752650,"results":"232","hashOfConfig":"142"},{"size":2669,"mtime":1630350225410,"results":"233","hashOfConfig":"142"},{"size":515,"mtime":1629236693243,"results":"234","hashOfConfig":"142"},{"size":301,"mtime":1620503582856,"results":"235","hashOfConfig":"142"},{"size":11557,"mtime":1620506932088,"results":"236","hashOfConfig":"142"},{"size":2462,"mtime":1620577995473,"results":"237","hashOfConfig":"142"},{"size":3767,"mtime":1620509383284,"results":"238","hashOfConfig":"142"},{"size":356,"mtime":1618351407518,"results":"239","hashOfConfig":"142"},{"size":432,"mtime":1629742252317,"results":"240","hashOfConfig":"142"},{"size":200,"mtime":1620857621134,"results":"241","hashOfConfig":"142"},{"size":333,"mtime":1620895052014,"results":"242","hashOfConfig":"142"},{"size":5409,"mtime":1632480877891,"results":"243","hashOfConfig":"142"},{"size":285,"mtime":1626729655716,"results":"244","hashOfConfig":"142"},{"size":195,"mtime":1627340270831,"results":"245","hashOfConfig":"142"},{"size":609,"mtime":1629669537126,"results":"246","hashOfConfig":"142"},{"size":396,"mtime":1626875518057,"results":"247","hashOfConfig":"142"},{"size":209,"mtime":1627340270836,"results":"248","hashOfConfig":"142"},{"size":7008,"mtime":1632829736892,"results":"249","hashOfConfig":"142"},{"size":490,"mtime":1629741539181,"results":"250","hashOfConfig":"142"},{"size":374,"mtime":1628974656100,"results":"251","hashOfConfig":"142"},{"size":261,"mtime":1629065143310,"results":"252","hashOfConfig":"142"},{"size":2901,"mtime":1637677616905,"results":"253","hashOfConfig":"142"},{"size":471,"mtime":1628881233956,"results":"254","hashOfConfig":"142"},{"size":469,"mtime":1628881239189,"results":"255","hashOfConfig":"142"},{"size":232,"mtime":1627221873060,"results":"256","hashOfConfig":"142"},{"size":831,"mtime":1630504553737,"results":"257","hashOfConfig":"142"},{"size":654,"mtime":1633033525817,"results":"258","hashOfConfig":"142"},{"size":421,"mtime":1631713754464,"results":"259","hashOfConfig":"142"},{"size":3203,"mtime":1631368602754,"results":"260","hashOfConfig":"142"},{"size":370,"mtime":1629750327361,"results":"261","hashOfConfig":"142"},{"size":8160,"mtime":1630098425486,"results":"262","hashOfConfig":"142"},{"size":979,"mtime":1630504596915,"results":"263","hashOfConfig":"142"},{"size":697,"mtime":1630048015033,"results":"264","hashOfConfig":"142"},{"size":660,"mtime":1630097289413,"results":"265","hashOfConfig":"142"},{"size":274,"mtime":1630068307958,"results":"266","hashOfConfig":"142"},{"size":849,"mtime":1630275071315,"results":"267","hashOfConfig":"142"},{"size":218,"mtime":1630275295899,"results":"268","hashOfConfig":"142"},{"size":510,"mtime":1630348065196,"results":"269","hashOfConfig":"142"},{"size":2712,"mtime":1631367834480,"results":"270","hashOfConfig":"142"},{"size":1280,"mtime":1632665140792,"results":"271","hashOfConfig":"142"},{"size":282,"mtime":1632482294941,"results":"272","hashOfConfig":"142"},{"size":128,"mtime":1632484168730,"results":"273","hashOfConfig":"142"},{"size":157,"mtime":1632484182515,"results":"274","hashOfConfig":"142"},{"size":1602,"mtime":1632669003534,"results":"275","hashOfConfig":"142"},{"size":1196,"mtime":1632671307491,"results":"276","hashOfConfig":"142"},{"size":1865,"mtime":1632691686512,"results":"277","hashOfConfig":"142"},{"size":1445,"mtime":1632607579645,"results":"278","hashOfConfig":"142"},{"size":391,"mtime":1632673987816,"results":"279","hashOfConfig":"142"},{"size":193,"mtime":1637268341839,"results":"280","hashOfConfig":"142"},{"size":307,"mtime":1637967703535,"results":"281","hashOfConfig":"142"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"285"},"12dhxiy",{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"285"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"285"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"285"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"285"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"285"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"285"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"285"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"285"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"285"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"285"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"285"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"285"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"285"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"285"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"285"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"285"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"285"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"285"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"285"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"285"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"285"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"285"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"285"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"285"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"285"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"285"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"285"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"285"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"285"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"285"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"285"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"509"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"505"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"285"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"285"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"285"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"568"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"285"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"285"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"285"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/index.tsx",["606"],"import 'core-js/es/map';\nimport 'core-js/es/set';\nimport 'raf/polyfill';\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {ApolloProvider} from \"@apollo/client\";\nimport {client} from \"./api/client\";\nimport PopupWindowProvider from \"./components/popupWindow/PopupWindowProvider\";\nimport NotificationProvider from \"./components/notification/NotificationProvider\";\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport ErrorHandler from \"./components/errorHandler/ErrorHandler\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <ApolloProvider client={client}>\n        <PopupWindowProvider>\n          <NotificationProvider>\n            <ErrorHandler>\n              <App/>\n            </ErrorHandler>\n          </NotificationProvider>\n        </PopupWindowProvider>\n      </ApolloProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();",["607","608"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/reportWebVitals.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/client.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/App.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindowProvider.tsx",["609"],"import React, { createContext, useContext, useReducer, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport PopupWindow from \"./PopupWindow\";\nimport {isBlurredVar, isPassedVar} from \"../../api/client\";\n\ninterface PropTypes {}\n\nexport const PopupWindowContext = createContext({});\n\nconst PopupWindowProvider: React.FC<PropTypes> = ({ children }) => {\n  const [state, dispatch] = useReducer((state: any, action: any) => {\n    switch (action.type) {\n      case \"PUSH_POPUP_WINDOW\": {\n        isBlurredVar(true);\n        return [...state, { ...action.payload }];\n      }\n      case \"POP_POPUP_WINDOW\": {\n        if (state.length <= 1) {\n          isBlurredVar(false);\n          isPassedVar(false);\n        }\n        return [...state.slice(0, state.length - 1)];\n      }\n      case \"POP_ALL_POPUP_WINDOW\": {\n          isBlurredVar(false);\n          isPassedVar(false);\n        return [];\n      }\n\n      default:\n        return state;\n    }\n  }, []);\n  return (\n    <PopupWindowContext.Provider value={dispatch}>\n      {state.map((popup: any) => (\n        <PopupWindow\n          key={popup.id}\n          body={popup.body}\n          header={popup.header}\n          footer={popup.footer}\n          isConfirm={popup.isConfirm}\n          dispatch={dispatch}\n        />\n      ))}\n      {children}\n    </PopupWindowContext.Provider>\n  );\n};\n\nexport const usePopupWindow = () => {\n  const dispatch = useContext(PopupWindowContext);\n  return (props: any) => {\n    // @ts-ignore\n    dispatch({\n      type: \"PUSH_POPUP_WINDOW\",\n      payload: {\n        id: v4(),\n        ...props,\n      },\n    });\n  };\n};\n\nexport default PopupWindowProvider;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/NotificationProvider.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/Layout.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/notification/Notification.tsx",["610","611"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"./notification.module.css\";\n\ninterface PropTypes {\n  message: string;\n  header: string;\n  dispatch: (value: any) => void;\n  id: string;\n  type?: \"ok\" | \"alert\";\n}\n\nconst Notification: React.FC<PropTypes> = ({\n  message,\n  type = \"default\",\n  dispatch,\n  id,\n  header,\n}) => {\n  const [exit, setExit] = useState(false);\n  const [opacity, setOpacity] = useState(100);\n  const [intervalId, setIntervalId]: any = useState(null);\n\n  const handleStartTimer = () => {\n    const id = setInterval(() => {\n      setOpacity((prevState) => {\n        if (prevState > 95) {\n          return prevState - 0.02;\n        } else if (prevState > 1) {\n          return prevState - 0.5;\n        } else {\n          handleCloseNotification();\n          return prevState;\n        }\n      });\n    }, 10);\n    setIntervalId(id);\n  };\n\n  const handlePauseTimer = () => {\n    clearInterval(intervalId);\n    setOpacity(100);\n  };\n\n  const handleCloseNotification = () => {\n    clearInterval(intervalId);\n    setExit(true);\n    setTimeout(() => {\n      dispatch({\n        type: \"REMOVE_NOTIFICATION\",\n        id: id,\n      });\n    }, 400);\n  };\n\n  useEffect(() => {\n    if (opacity < 1) {\n      handleCloseNotification();\n    }\n  }, [opacity]);\n\n  useEffect(() => {\n    handleStartTimer();\n  }, []);\n\n  return (\n    <div\n      onMouseEnter={handlePauseTimer}\n      onMouseLeave={handleStartTimer}\n      className={[styles.notification, exit ? styles.exit : \"\"].join(\" \")}\n      style={{ opacity: `${opacity / 100}` }}\n    >\n      <span\n        className={styles.notificationClose}\n        onClick={handleCloseNotification}\n      />\n      <p\n        className={[\n          type === \"ok\"\n            ? styles.ok\n            : type === \"alert\"\n            ? styles.alert\n            : styles.default\n        , styles.header].join(\" \")}\n      >\n        {header}\n      </p>\n      <p className={styles.message}>{message}</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/popupWindow/PopupWindow.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/sidebar/Sidebar.tsx",["612"],"import React, {useEffect, useState} from \"react\";\nimport styles from \"./sidebar.module.css\";\nimport Logo from \"../../logo/Logo\";\nimport {NavLink, Route, Switch} from \"react-router-dom\";\nimport menuIcon from \"../../../assets/images/menu.svg\";\nimport classroomsIcon from \"../../../assets/images/classrooms.svg\";\nimport registryIcon from \"../../../assets/images/registry.svg\";\nimport usersIcon from \"../../../assets/images/users.svg\";\nimport controlIcon from \"../../../assets/images/settings.svg\";\nimport queueIcon from \"../../../assets/images/queue.png\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {StudentAccountStatus, User, UserTypes} from \"../../../models/models\";\nimport Button from \"../../button/Button\";\nimport {usePopupWindow} from \"../../popupWindow/PopupWindowProvider\";\nimport {client} from \"../../../api/client\";\nimport {DISABLE_DISPATCHER} from \"../../../api/operations/mutations/disableDispatcher\";\nimport {useNotification} from \"../../notification/NotificationProvider\";\nimport {DISPATCHER_STATUS} from \"../../../api/operations/queries/dispatcherActive\";\nimport {handleLogout} from \"../../../helpers/logout\";\n\nconst Sidebar = () => {\n  const [collapsed, setCollapsed] = useState(true);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [isDispatcher, setIsDispatcher] = useState(false);\n  const {data} = useQuery(GET_USERS);\n  const [unverifiedCounter, setUnverifiedCounter] = useState(0);\n  const {data: dispatcherActive, loading, error} = useQuery(DISPATCHER_STATUS);\n  const [isActive, setIsActive] = useState(true);\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      setIsDispatcher(user.type === UserTypes.DISPATCHER);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isDispatcher && !loading && !error) {\n      setIsActive(dispatcherActive.dispatcherActive);\n    }\n  }, [data, loading, error, isDispatcher]);\n\n  useEffect(() => {\n    setUnverifiedCounter(0);\n    if (data) {\n      data.users.forEach(({studentInfo}: User) => {\n        studentInfo?.accountStatus === StudentAccountStatus.UNVERIFIED\n        && setUnverifiedCounter(prevState => prevState + 1);\n      });\n    }\n  }, [data]);\n\n  const onMenuClick = () => setCollapsed((prevState) => !prevState);\n\n  const onClick = () => {\n    const screenWidth = window.screen.width;\n\n    setCollapsed((prevState) => {\n      if (screenWidth < 1024) {\n        return !prevState;\n      } else {\n        return prevState;\n      }\n    });\n  }\n\n  const FinishFooter = ({dispatch}: any) => {\n    const handleCancel = () => dispatch({type: \"POP_POPUP_WINDOW\"});\n    const handleOk = async () => {\n      try {\n        const result = await client.mutate({\n          mutation: DISABLE_DISPATCHER\n        });\n        if (result.data.disableDispatcher.userErrors.length) {\n          result.data.disableDispatcher.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Успішно!\",\n            message: `Робочий день закінчено`,\n            type: \"ok\",\n          });\n          dispatch({type: \"POP_POPUP_WINDOW\"});\n          setIsActive(false);\n        }\n      } catch (e: any) {\n        dispatchNotification({\n          header: \"Помилка\",\n          message: JSON.stringify(e),\n          type: \"alert\",\n        });\n      }\n    };\n\n    return (\n      <>\n        <Button\n          color='blue'\n          style={{marginRight: 8, height: 40}}\n          onClick={handleCancel}\n        >\n          Відміна\n        </Button>\n        <Button\n          color='red'\n          onClick={handleOk}\n        >\n          Завершити роботу\n        </Button>\n      </>\n    )\n  }\n\n  const handleFinishClick = () => {\n    dispatchPopupWindow({\n      header: <h1>Бажаєте завершити роботу?</h1>,\n      body: <p>Цю дію неможливо буде відмінити</p>,\n      footer: <FinishFooter/>,\n      isConfirm: true,\n    });\n  }\n\n  return (\n    <div\n      className={[styles[collapsed.toString()], styles.navigation].join(\" \")}\n    >\n      {isDispatcher && !isActive && (\n        <div className={styles.dispatcherInactive}>\n          <h1 className={styles.dayFinishedTitle}>Робочий день закінчено</h1>\n          <Button color='red' onClick={handleLogout}>Вийти з аккаунту</Button>\n        </div>\n      )}\n      <div onClick={onMenuClick} className={styles.logoWrapper}>\n        <Logo\n          title={collapsed ? \"Au\" : \"Auditorium\"}\n          description=\"Система управління видачею аудиторій\"\n          size=\"small\"\n        />\n      </div>\n      <img\n        onClick={onMenuClick}\n        className={styles.menuIcon}\n        src={menuIcon}\n        alt=\"menu\"\n      />\n      <p className={styles.currentPageName}>\n        <Switch>\n          <Route exact path=\"/classrooms\">\n            Аудиторії\n          </Route>\n          <Route exact path=\"/queue\">\n            Черга\n          </Route>\n          <Route exact path=\"/registry\">\n            Журнал\n          </Route>\n          {/*<Route exact path=\"/schedule\">*/}\n          {/*  Розклад*/}\n          {/*</Route>*/}\n          <Route exact path=\"/users\">\n            Користувачі\n          </Route>\n          <Route exact path=\"/profile\">\n            Мій профіль\n          </Route>\n          <Route exact path=\"/admin\">\n            Налаштування\n          </Route>\n        </Switch>\n      </p>\n      <ul>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/classrooms\"\n          >\n            <img className={styles.icon} src={classroomsIcon} alt=\"classrooms\"/>\n            Аудиторії\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/queue\"\n          >\n            {/*TODO change PNG icon to SVG*/}\n            <img className={styles.icon} src={queueIcon} alt=\"queue\"/>\n            Черга\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/registry\"\n          >\n            <img className={styles.icon} src={registryIcon} alt=\"registry\"/>\n            Журнал\n          </NavLink>\n        </li>\n        {/*<li>*/}\n        {/*  <NavLink*/}\n        {/*    activeClassName={styles.linkActive}*/}\n        {/*    className={styles.link}*/}\n        {/*    onClick={onClick}*/}\n        {/*    to=\"/schedule\"*/}\n        {/*  >*/}\n        {/*    <img className={styles.icon} src={scheduleIcon} alt=\"schedule\" />*/}\n        {/*    Розклад*/}\n        {/*  </NavLink>*/}\n        {/*</li>*/}\n        <li>\n          {unverifiedCounter !== 0 && <span className={styles.alert}>!</span>}\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/users\"\n          >\n            <img className={styles.icon} src={usersIcon} alt=\"users\"/>\n            Користувачі\n          </NavLink>\n        </li>\n        {/*<li>*/}\n        {/*  <NavLink*/}\n        {/*    activeClassName={styles.linkActive}*/}\n        {/*    className={styles.link}*/}\n        {/*    onClick={onClick}*/}\n        {/*    to=\"/profile\"*/}\n        {/*  >*/}\n        {/*    <img className={styles.icon} src={profileIcon} alt=\"profile\" />*/}\n        {/*    Мій профіль*/}\n        {/*  </NavLink>*/}\n        {/*</li>*/}\n        <li>\n          <NavLink\n            activeClassName={styles.linkActive}\n            className={styles.link}\n            onClick={onClick}\n            to=\"/admin\"\n          >\n            <img className={[styles.icon, styles.settings].join(' ')} src={controlIcon} alt=\"control\"/>\n            Налаштування\n          </NavLink>\n        </li>\n      </ul>\n      {isDispatcher && (\n        <div\n          className={collapsed ? styles.finishButtonWrapperCollapsed : styles.finishButtonWrapper}\n          title='Закінчити роботу'\n        >\n          <Button onClick={handleFinishClick}>\n            <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" fill='#fff'\n                 x=\"0px\" y=\"0px\"\n                 viewBox=\"0 0 32 32\">\n              <path d=\"M30.9,13.6c-0.1-0.1-0.1-0.2-0.2-0.3l-4-4c-0.4-0.4-1-0.4-1.4,0s-0.4,1,0,1.4l2.3,2.3H22v-3V3c0-0.6-0.4-1-1-1H4\n              c0,0,0,0,0,0C3.9,2,3.7,2,3.6,2.1c0,0,0,0-0.1,0c0,0-0.1,0-0.1,0.1c0,0-0.1,0.1-0.1,0.1c0,0,0,0,0,0C3.2,2.4,3.1,2.5,3.1,2.6\n              c0,0,0,0,0,0.1C3,2.8,3,2.9,3,3v22c0,0.4,0.2,0.8,0.6,0.9l9,4C12.7,30,12.9,30,13,30c0.2,0,0.4-0.1,0.5-0.2c0.3-0.2,0.5-0.5,0.5-0.8\n              v-3h7c0.6,0,1-0.4,1-1V15h5.6l-2.3,2.3c-0.4,0.4-0.4,1,0,1.4c0.2,0.2,0.5,0.3,0.7,0.3s0.5-0.1,0.7-0.3l4-4c0.1-0.1,0.2-0.2,0.2-0.3\n              C31,14.1,31,13.9,30.9,13.6z M10,21c0,0.6-0.4,1-1,1s-1-0.4-1-1v-4c0-0.6,0.4-1,1-1s1,0.4,1,1V21z M20,10v14h-6V7\n              c0-0.4-0.2-0.8-0.6-0.9L8.7,4H20V10z\"/>\n            </svg>\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/layout/content/Content.tsx",["613"],"import React from \"react\";\r\nimport styles from \"./content.module.css\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Registry from \"../../../pages/registry/Registry\";\r\nimport Schedule from \"../../../pages/schedule/Schedule\";\r\nimport Users from \"../../../pages/users/Users\";\r\nimport Profile from \"../../../pages/profile/Profile\";\r\nimport AdminClassrooms from \"../../../pages/admin/classrooms/AdminClassrooms\";\r\nimport AdminUsers from \"../../../pages/admin/users/AdminUsers\";\r\nimport Admin from \"../../../pages/admin/admin/Admin\";\r\nimport Classrooms from \"../../../pages/classrooms/Classrooms\";\r\nimport AdminInstruments from \"../../../pages/admin/instruments/AdminInstruments\";\r\nimport AdminDepartments from \"../../../pages/admin/departments/AdminDepartments\";\r\nimport AdminFaculties from \"../../../pages/admin/faculties/AdminFaculties\";\r\nimport AdminDegrees from \"../../../pages/admin/degrees/AdminDegrees\";\r\nimport Login from \"../../../pages/login/Login\";\r\nimport Dashboard from \"../../../pages/dashboard/Dashboard\";\r\nimport Queue from \"../../../pages/queue/Queue\";\r\nimport {User, UserTypes} from \"../../../models/models\";\r\n\r\ninterface PropTypes {\r\n  isLogged: boolean;\r\n}\r\n\r\nconst Content: React.FC<PropTypes> = ({isLogged}) => {\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n\r\n    return (\r\n      <div className={styles.content}>\r\n        {!isLogged\r\n          ? <Switch>\r\n            <Route path=\"/\" component={Login}/>\r\n          </Switch>\r\n\r\n          : user && (user.type === UserTypes.ADMIN || user.type === UserTypes.DISPATCHER) ? (\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Classrooms}/>\r\n              <Route path=\"/classrooms/:classroomName?\" component={Classrooms}/>\r\n              <Route path=\"/registry/:userId?\" component={Registry}/>\r\n              <Route path=\"/schedule\" component={Schedule}/>\r\n              <Route path=\"/users:userId?\" component={Users}/>\r\n              <Route path=\"/profile\" component={Profile}/>\r\n              <Route path=\"/admin\" component={Admin}/>\r\n              <Route path=\"/adminClassrooms\" component={AdminClassrooms}/>\r\n              <Route path=\"/adminUsers\" component={AdminUsers}/>\r\n              <Route path=\"/adminInstruments\" component={AdminInstruments}/>\r\n              <Route path=\"/adminDepartments\" component={AdminDepartments}/>\r\n              <Route path=\"/adminFaculties\" component={AdminFaculties}/>\r\n              <Route path=\"/adminDegrees\" component={AdminDegrees}/>\r\n              <Route path=\"/dashboard\" component={Dashboard}/>\r\n              <Route path=\"/queue\" component={Queue}/>\r\n            </Switch>\r\n          ) : (\r\n            <Switch>\r\n              <Route path=\"/dashboard\" component={Dashboard}/>\r\n            </Switch>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n;\r\n\r\nexport default Content;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/logo/Logo.tsx",["614"],"import React from \"react\";\nimport styles from \"./logo.module.css\";\n\ninterface PropTypes {\n  title: string;\n  description: string;\n  size?: \"small\" | \"default\";\n}\n\nconst Logo: React.FC<PropTypes> = ({\n  title,\n  description,\n  size = \"default\",\n}) => {\n  const style = {};\n  return (\n    <div className={styles.logoWrapper}>\n      <div\n        className={\n          size === \"default\"\n            ? styles.logo\n            : size === \"small\"\n            ? styles.smallLogo\n            : styles.logo\n        }\n      >\n        <div className={styles.logoText}>\n          <h1\n            className={\n              size === \"default\"\n                ? styles.logoTitle\n                : size === \"small\"\n                ? styles.smallLogoTitle\n                : styles.logoTitle\n            }\n          >\n            {title}\n          </h1>\n          {size !== \"small\" && (\n            <h2 className={styles.logoDescription}>{description}</h2>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/Users.tsx",["615","616"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/Registry.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/schedule/Schedule.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/profile/Profile.tsx",["617","618","619"],"import React, {useState} from \"react\";\r\nimport styles from \"./profile.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport useUsers from \"../../hooks/useUsers\";\r\nimport {StudentAccountStatus, User, UserTypes, UserTypesUa} from \"../../models/models\";\r\nimport {fullName} from \"../../helpers/helpers\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {isLoggedVar} from \"../../api/client\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useMe} from \"../../hooks/useMe\";\r\nimport Edit from \"../../components/icons/edit/Edit\";\r\n\r\nconst Profile = () => {\r\n  const me = useMe();\r\n  const history = useHistory();\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const handleLogout = () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm('Ви бажаете вийти?')) {\r\n      isLoggedVar(false);\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('token');\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <h1>Мій профіль</h1>\r\n        <Button color='red' onClick={handleLogout}>Вийти</Button>\r\n        {!editMode && <Edit onClick={handleEdit}/>}\r\n      </Header>\r\n      <div className={styles.wrapper}>\r\n        {me && <div className={styles.profileData}>\r\n            <div><span>П.І.Б.:</span><span>{fullName(me)}</span></div>\r\n            <div><span>ID:</span><span>{me.id}</span></div>\r\n          {me.studentInfo.accountStatus === StudentAccountStatus.UNVERIFIED && <div><span>Верифіковано:</span><span>Ні</span></div>}\r\n            <div><span>Тип:</span><span>{UserTypesUa[me.type as UserTypes]}</span></div>\r\n          {me.department && <div><span>Кафедра:</span><span>{me.department.name}</span></div>}\r\n            <div><span>Тел.:</span><span>{me.phoneNumber}</span></div>\r\n          {me.extraPhoneNumbers && <div><span>Інші тел.:</span><span>\r\n                <ul>\r\n                  {JSON.parse(me.extraPhoneNumbers as string).map((item: string) => (<li>{item}</li>))}\r\n                </ul>\r\n            </span></div>}\r\n            <div><span>Дата закінчення</span><span>{me.expireDate}</span></div>\r\n            <div><span>Email:</span><span>{me.email}</span></div>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/registry/PDFConfig.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/styles/selectStyles.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/models/models.ts",["620"],"import {bool} from \"yup\";\r\n\r\nexport enum ACCESS_RIGHTS {\r\n  USER,\r\n  DISPATCHER,\r\n  ADMIN\r\n}\r\n\r\nexport enum ErrorCodesUa {\r\n  INVALID_PASSWORD = \"Невірний пароль\",\r\n  USER_NOT_FOUND = \"Користувача не знайдено\",\r\n}\r\n\r\nexport enum ErrorCodes {\r\n  INVALID_PASSWORD = \"INVALID_PASSWORD\",\r\n  USER_NOT_FOUND = \"USER_NOT_FOUND\",\r\n}\r\n\r\nexport enum EmploymentTypes {\r\n  FULL_TIME = 'FULL_TIME',\r\n  PART_TIME = 'PART_TIME',\r\n  HOURLY = 'HOURLY',\r\n}\r\n\r\nexport enum EmploymentTypesUa {\r\n  FULL_TIME = 'Штатний співробітник',\r\n  PART_TIME = 'Часткова',\r\n  HOURLY = 'Погодинна',\r\n}\r\n\r\nexport enum UserTypes {\r\n  STUDENT = \"STUDENT\",\r\n  TEACHER = \"TEACHER\",\r\n  POST_GRADUATE = \"POST_GRADUATE\",\r\n  ADMIN = \"ADMIN\",\r\n  DISPATCHER = \"DISPATCHER\",\r\n  PIANO_TUNER = \"PIANO_TUNER\",\r\n  STAFF = \"STAFF\",\r\n  CONCERTMASTER = \"CONCERTMASTER\",\r\n  ILLUSTRATOR = \"ILLUSTRATOR\",\r\n  OTHER = \"OTHER\",\r\n}\r\n\r\nexport enum UserTypesUa {\r\n  STUDENT = \"Студент\",\r\n  TEACHER = \"Викладач\",\r\n  POST_GRADUATE = \"Асистент/аспірант\",\r\n  ADMIN = \"Адмін\",\r\n  DISPATCHER = \"Диспетчер\",\r\n  PIANO_TUNER = \"Настроювач фортепіано\",\r\n  STAFF = \"Співробітник\",\r\n  CONCERTMASTER = \"Концертмейстер\",\r\n  ILLUSTRATOR = \"Іллюстратор\",\r\n  OTHER = \"Користувач\",\r\n}\r\n\r\nexport enum UserTypeColors {\r\n  STUDENT = \"#1e2c4f\",\r\n  TEACHER = \"#ffa200\",\r\n  POST_GRADUATE = \"#1e2c4f\",\r\n  ADMIN = \"#ffa200\",\r\n  DISPATCHER = \"#ffa200\",\r\n  PIANO_TUNER = \"#ffa200\",\r\n  STAFF = \"#ffa200\",\r\n  CONCERTMASTER = \"#ffa200\",\r\n  ILLUSTRATOR = \"#ffa200\",\r\n  OTHER = \"#ffa200\",\r\n}\r\n\r\nexport enum ActivityTypes {\r\n  LECTURE = '#ffa200',\r\n  INDIVIDUAL_LESSON = '#2b5dff'\r\n}\r\n\r\nexport enum NotificationsTypes {\r\n  OK = \"ok\",\r\n  ALERT = \"alert\",\r\n  DEFAULT = \"default\",\r\n}\r\n\r\nexport type User = {\r\n  id: number;\r\n  createdAt: Date;\r\n  firstName: string;\r\n  patronymic: string | null;\r\n  lastName: string;\r\n  type: string;\r\n  department: Department;\r\n  email: string;\r\n  phoneNumber: string;\r\n  extraPhoneNumbers: string | null;\r\n  nameTemp: string | null;\r\n  startYear: number;\r\n  studentInfo: StudentInfo;\r\n  employeeInfo: EmployeeInfo;\r\n  expireDate: Date | null;\r\n  queue: QueueRecord[];\r\n  queueInfo: UserQueueInfo;\r\n  occupiedClassrooms: OccupiedInfo[];\r\n};\r\n\r\nexport type StudentInfo = {\r\n  degree: Degree;\r\n  startYear: number;\r\n  accountStatus: StudentAccountStatus;\r\n};\r\n\r\nexport type EmployeeInfo = {\r\n  employmentType: EmploymentTypes;\r\n  accountStatus: string;\r\n  isInUsage: boolean;\r\n};\r\n\r\nexport type OccupiedInfo = {\r\n  id: number;\r\n  user: User | null;\r\n  until: string;\r\n  state: OccupiedState;\r\n  classroom: ClassroomType;\r\n  classroomId: number;\r\n};\r\n\r\nexport enum OccupiedState {\r\n  FREE = 'FREE',\r\n  OCCUPIED = 'OCCUPIED',\r\n  PENDING = 'PENDING',\r\n  RESERVED = 'RESERVED'\r\n}\r\n\r\nexport enum OccupiedStateUa {\r\n  FREE = 'Вільно',\r\n  OCCUPIED = 'Зайнято',\r\n  PENDING = 'Очікує підтвердження',\r\n  RESERVED = 'Зарезервовано'\r\n}\r\n\r\nexport type Comment = {\r\n  id: number;\r\n  user: User;\r\n  body: string;\r\n  date: Date;\r\n};\r\n\r\nexport type InstrumentType = {\r\n  id: number;\r\n  type: string;\r\n  name: string;\r\n  rate: number;\r\n  persNumber: string;\r\n  comments: Comment | null;\r\n  classroom: ClassroomType;\r\n};\r\n\r\nexport enum DisabledState {\r\n  DISABLED = 'DISABLED',\r\n  NOT_DISABLED = 'NOT_DISABLED'\r\n}\r\n\r\nexport type DisabledInfo = {\r\n  state: DisabledState;\r\n  comment: string;\r\n  until: Date;\r\n};\r\n\r\nexport type ScheduleUnitType = {\r\n  id: number;\r\n  user: User;\r\n  classroom: ClassroomType;\r\n  dateStart: Date;\r\n  dateEnd: Date;\r\n  dayOfWeek: number;\r\n  from: string;\r\n  to: string;\r\n  activity: string;\r\n};\r\n\r\nexport type ClassroomType = {\r\n  id: number;\r\n  name: string;\r\n  chair: Department | null;\r\n  special: string | null;\r\n  floor: number;\r\n  isWing: boolean;\r\n  isOperaStudio: boolean;\r\n  description: string | null;\r\n  occupied: OccupiedInfo;\r\n  instruments: Array<InstrumentType>;\r\n  disabled: DisabledInfo | null;\r\n  schedule: Array<ScheduleUnitType>;\r\n  isHidden: boolean;\r\n  queueInfo: ClassroomQueueInfo;\r\n  color: string;\r\n};\r\n\r\nexport type ClassroomQueueInfo = {\r\n  classroom: ClassroomType;\r\n  queuePolicy: QueuePolicyInfo;\r\n}\r\n\r\nexport type QueuePolicyInfo = {\r\n  classroomQueueInfo: ClassroomQueueInfo;\r\n  policy: QueuePolicyTypes;\r\n  queueAllowedDepartments: ExclusivelyQueueAllowedDepartmentsInfo[];\r\n}\r\n\r\nexport type ExclusivelyQueueAllowedDepartmentsInfo = {\r\n  department: Department;\r\n  queuePolicyInfo: QueuePolicyInfo;\r\n}\r\n\r\nexport type RegisterUnit = {\r\n  id: number;\r\n  user: User;\r\n  nameTemp: string;\r\n  classroom: {\r\n    id: number;\r\n    name: string;\r\n  };\r\n  start: string;\r\n  end: string;\r\n};\r\n\r\nexport type Degree = {\r\n  id: number\r\n  name: string;\r\n  startMonth: number;\r\n  startDay: number;\r\n  durationMonths: number;\r\n};\r\n\r\nexport type Faculty = {\r\n  id: number;\r\n  name: string;\r\n  departments: Department[];\r\n  users: User[];\r\n}\r\n\r\nexport type Department = {\r\n  id: number;\r\n  name: string;\r\n  faculty: Faculty;\r\n  users: User[];\r\n};\r\n\r\nexport type MenuElement = {\r\n  text: string;\r\n  path: string;\r\n  icon: string;\r\n  exact?: boolean;\r\n  rights: string;\r\n};\r\n\r\nexport enum ClassroomsFilterTypes {\r\n  ALL = 'ALL',\r\n  FREE = 'FREE',\r\n  SPECIAL = 'SPECIAL'\r\n}\r\n\r\nexport enum QueueState {\r\n  ACTIVE = 'ACTIVE',\r\n  RESERVED = 'RESERVED'\r\n}\r\n\r\nexport enum QueueType {\r\n  MINIMAL = 'MINIMAL',\r\n  DESIRED = 'DESIRED'\r\n}\r\n\r\nexport type QueueRecord = {\r\n  id: number;\r\n  user: User;\r\n  date: string;\r\n  classroom: ClassroomType;\r\n  state: QueueState;\r\n  type: QueueType;\r\n}\r\n\r\nexport type LangT = 'ua' | 'en';\r\n\r\nexport enum EnqueuedBy {\r\n  SELF = 'SELF',\r\n  DISPATCHER = 'DISPATCHER'\r\n}\r\n\r\nexport type UserQueueInfo = {\r\n  id: number;\r\n  user: User;\r\n  sanctionedUntil: string;\r\n  currentSession: QueueSession\r\n}\r\n\r\nexport type QueueSession = {\r\n  id: number;\r\n  queueInfo: UserQueueInfo;\r\n  state: UserQueueState;\r\n  enqueuedBy: EnqueuedBy;\r\n  skips: number;\r\n  remainingOccupationTime: string;\r\n}\r\n\r\nexport enum UserQueueState {\r\n  IN_QUEUE_MINIMAL = 'IN_QUEUE_MINIMAL',\r\n  IN_QUEUE_DESIRED_AND_OCCUPYING = 'IN_QUEUE_DESIRED_AND_OCCUPYING',\r\n  QUEUE_RESERVED_NOT_OCCUPYING = 'QUEUE_RESERVED_NOT_OCCUPYING',\r\n  OCCUPYING = 'OCCUPYING',\r\n}\r\n\r\nexport enum StudentAccountStatus {\r\n  UNVERIFIED = 'UNVERIFIED',\r\n  ACTIVE = 'ACTIVE',\r\n  ACADEMIC_LEAVE = 'ACADEMIC_LEAVE'\r\n}\r\n\r\nexport enum EmployeeAccountStatus {\r\n  ACTIVE = 'ACTIVE',\r\n  FROZEN = 'FROZEN'\r\n}\r\n\r\nexport enum QueuePolicyTypes {\r\n  ALL_DEPARTMENTS = 'ALL_DEPARTMENTS',\r\n  SELECTED_DEPARTMENTS = 'SELECTED_DEPARTMENTS'\r\n}\r\n\r\nexport enum SpecialClassroomTypes {\r\n  PIANO = 'PIANO'\r\n}\r\n\r\nexport enum InstrumentTypesE {\r\n  UpRightPiano = 'UpRightPiano',\r\n  GrandPiano = 'GrandPiano'\r\n}\r\n\r\nexport enum InstrumentTypesEUa {\r\n  UpRightPiano = 'Піаніно',\r\n  GrandPiano = 'Рояль'\r\n}","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/helpers.ts",["621"],"import {HOUR, MINUTE, TIME_SNIPPETS, WORKING_DAY_END, WORKING_DAY_START,} from \"./constants\";\nimport {\n  ACCESS_RIGHTS,\n  OccupiedInfo,\n  OccupiedState,\n  ScheduleUnitType,\n  StudentAccountStatus,\n  User,\n  UserTypes,\n} from \"../models/models\";\nimport moment from \"moment\";\nimport {ReactElement} from \"react\";\nimport {accessRightsVar} from \"../api/client\";\n\nexport const getScheduleTimeline = (start: number, end: number): string[] => {\n  let timeSnippets: string[] = [];\n  for (let hour = start; hour <= end; hour++) {\n    if (hour === end) {\n      timeSnippets.push(hour + \":00\");\n    } else {\n      TIME_SNIPPETS.forEach((minutes) => {\n        timeSnippets.push(hour + minutes);\n      });\n    }\n  }\n  return timeSnippets;\n};\n\nconst getScheduleTimeInMilliseconds = (scheduleUnitTime: any) => {\n  return scheduleUnitTime\n    .split(\":\")\n    .map((el: any, index: number) => {\n      return index === 0 ? Number(el) * HOUR : Number(el) * MINUTE;\n    })\n    .reduce((acc: any, curr: any) => acc + curr);\n};\n\nexport const getPossiblyOccupied = (schedule: Array<any>) => {\n  const current =\n    new Date().getHours() * HOUR + new Date().getMinutes() * MINUTE;\n  const timeSnippets = schedule.map((el: any) => {\n    return {\n      from: getScheduleTimeInMilliseconds(el.from),\n      to: getScheduleTimeInMilliseconds(el.to),\n    };\n  });\n  return timeSnippets\n    .map((el: any) => {\n      return current >= el.from && current <= el.to;\n    })\n    .some((el: any) => el === true);\n};\n\nexport const getTimeHHMM = (date: Date) => {\n  return date.getHours() + \":\" + formatMinutesToMM(date.getMinutes());\n};\n\nexport const getScheduleUnitRowLength = (\n  schedule: Array<ScheduleUnitType>,\n  units: string\n) =>\n  schedule\n    .map((scheduleUnit: ScheduleUnitType) => {\n      return parseInt(scheduleUnit.to) - parseInt(scheduleUnit.from) + units;\n    })\n    .join(\" \");\n\nexport const formatMinutesToMM = (value: number) => {\n  if (value <= 9) return `0${value}`;\n  else return value;\n};\n\nexport const fullName = (user: User, withInitials = false) => {\n  if (user) {\n    if (user.nameTemp) return user.nameTemp\n    if (withInitials) {\n      return `${user.lastName} ${user.firstName.charAt(0)}. ${\n        user.patronymic ? user.patronymic.charAt(0) + \".\" : \"\"\n      }`;\n    } else {\n      return `${user.lastName} ${user.firstName} ${\n        user.patronymic ? user.patronymic : \"\"\n      }`;\n    }\n  }\n  return \"\";\n};\n\nexport const typeStyle = (occupied: OccupiedInfo) => {\n  const student = {backgroundColor: \"rgba(46,40,124)\", color: \"#fff\"};\n  const employee = {backgroundColor: \"#ffc000\", color: \"#fff\"};\n  const vacant = {\n    backgroundColor: \"transparent\",\n    color: \"#000\",\n  };\n  if (occupied !== null) {\n    switch (occupied.user?.type) {\n      case UserTypes.STUDENT:\n        return student;\n      case UserTypes.POST_GRADUATE:\n        return student;\n      default:\n        return employee;\n    }\n  }\n  return vacant;\n};\n\n//get int from time unit. ex: \"9:15\" -> 36 where each 15 min == 1; ex: \"00:15\" -> 1, \"10:00\" ->40\nconst simpleIntFromScheduleUnit = (time: string) => {\n  const reducer = (accumulator: any, currentValue: any) =>\n    accumulator + currentValue;\n  return time\n    .split(\":\")\n    .map((el: string, index: number) => {\n      if (index === 0) {\n        return parseInt(el) * 4;\n      } else {\n        switch (parseInt(el)) {\n          case 0:\n            return 0;\n          case 15:\n            return 1;\n          case 30:\n            return 2;\n          case 45:\n            return 3;\n        }\n      }\n    })\n    .reduce(reducer);\n};\n\n//get schedule units size in fr units for grids\nexport const getScheduleUnitSize = (\n  units: Array<ScheduleUnitType>,\n  fillEmpty = true\n) => {\n  const items = [];\n  if (fillEmpty) {\n    items.push(parseInt(units[0].from) - WORKING_DAY_START);\n  }\n  for (let item of units) {\n    const from = simpleIntFromScheduleUnit(item.from);\n    const to = simpleIntFromScheduleUnit(item.to);\n    items.push((to as number) - (from as number));\n  }\n  if (fillEmpty) {\n    items.push(WORKING_DAY_END - parseInt(units[units.length - 1].to));\n  }\n\n  return items.map((item) => `${item}fr`).join(\" \");\n};\n\nexport const ISODateString = (d: Date) => {\n  function pad(n: any) {\n    return n < 10 ? \"0\" + n : n;\n  }\n\n  return (\n    d.getUTCFullYear() +\n    \"-\" +\n    pad(d.getUTCMonth() + 1) +\n    \"-\" +\n    pad(d.getUTCDate())\n    // +\n    // \"T\" +\n    // pad(d.getUTCHours()) +\n    // \":\" +\n    // pad(d.getUTCMinutes()) +\n    // \":\" +\n    // pad(d.getUTCSeconds()) +\n    // \"Z\"\n  );\n};\n\nexport const scheduleUnitToDate = (item: ScheduleUnitType) => {\n  const from = item.from.split(':');\n  const to = item.to.split(':');\n  const fromHours = +from[0];\n  const fromMinutes = +from[1];\n  const toHours = +to[0];\n  const toMinutes = +to[1];\n  const fromDate = moment({hours: fromHours, minutes: fromMinutes, seconds: 0, milliseconds: 0});\n  const toDate = moment({hours: toHours, minutes: toMinutes, seconds: 0, milliseconds: 0});\n\n  return {\n    from: fromDate,\n    to: toDate\n  };\n};\n\nexport const isOccupiedOnSchedule = (scheduleUnits: ScheduleUnitType[]) => {\n  const result: any = [];\n\n  scheduleUnits.forEach(item => result.push(scheduleUnitToDate(item)));\n\n  return result.some((item: { from: Date, to: Date }) => {\n    const current = moment();\n\n    return current.isAfter(item.from) && current.isBefore(item.to);\n  });\n};\n\nexport const showNotification = (dispatcher: any, data: string[] | HTMLElement[] | ReactElement[]) => {\n  dispatcher({\n    header: data[0],\n    message: data[1],\n    type: data[2],\n  });\n};\n\nexport const setAccessRights = (user: User) => {\n  let accessRights = ACCESS_RIGHTS.USER;\n\n  if (user && user?.type) {\n    switch (user.type) {\n      case UserTypes.ADMIN:\n        accessRights = ACCESS_RIGHTS.ADMIN;\n        break;\n      case UserTypes.DISPATCHER:\n        accessRights = ACCESS_RIGHTS.DISPATCHER;\n        break;\n      default:\n        accessRights = ACCESS_RIGHTS.USER;\n    }\n  }\n\n  accessRightsVar(accessRights);\n};\n\n\nexport const isClassroomNotFree = (occupied: OccupiedInfo) => {\n  return occupied.state !== OccupiedState.FREE;\n};\n\nexport const checkVerified = (user: User) => {\n  if (!user.studentInfo) return true;\n  return user.studentInfo.accountStatus !== StudentAccountStatus.UNVERIFIED;\n};\n\nexport const isStudent = (type: UserTypes) => {\n  return type === UserTypes.STUDENT || type === UserTypes.POST_GRADUATE\n}\n\nexport const isTimeout = (time: string, returnDiffInMs = false) => {\n  const outerTime = moment(time);\n  const currentTime = moment();\n  if (returnDiffInMs) return currentTime.diff(outerTime);\n  return currentTime.diff(outerTime) > 0;\n}","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/users.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/register.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/classrooms/Classrooms.tsx",["622","623"],"import React, {useEffect, useRef, useState} from \"react\";\nimport Header from \"../../components/header/Header\";\nimport {ACCESS_RIGHTS, ClassroomsFilterTypes, ClassroomType} from \"../../models/models\";\nimport Classroom from \"../../components/classroom/Classroom\";\nimport styles from \"./classrooms.module.css\";\nimport Caviar from \"../../components/caviar/Caviar\";\nimport {useNotification} from \"../../components/notification/NotificationProvider\";\nimport Edit from \"../../components/icons/edit/Edit\";\nimport useClassrooms from \"../../hooks/useClassrooms\";\nimport {filterClassrooms} from \"../../helpers/filterClassrooms\";\nimport HeaderCheckbox from \"../../components/headerCheckBox/HeaderCheckbox\";\nimport Loader from \"../../components/loader/Loader\";\nimport {useLocal} from \"../../hooks/useLocal\";\nimport {FOLLOW_CLASSROOMS} from \"../../api/operations/subscriptions/classrooms\";\nimport {MINUTE} from \"../../helpers/constants\";\nimport {client} from \"../../api/client\";\nimport {GET_CLASSROOMS} from \"../../api/operations/queries/classrooms\";\nimport {GET_USERS} from \"../../api/operations/queries/users\";\nimport Button from \"../../components/button/Button\";\nimport {DISPATCHER_STATUS} from \"../../api/operations/queries/dispatcherActive\";\nimport {FOLLOW_USERS} from \"../../api/operations/subscriptions/users\";\nimport {FOLLOW_DISPATCHER_STATUS} from \"../../api/operations/subscriptions/dispatcherStatus\";\n\nconst filters = [\n  {value: ClassroomsFilterTypes.ALL, label: 'Всі'},\n  {value: ClassroomsFilterTypes.FREE, label: 'Вільні'},\n  {value: ClassroomsFilterTypes.SPECIAL, label: 'Спеціалізовані'},\n];\n\nconst Classrooms = () => {\n  const [classrooms, subscribeToMore]: [ClassroomType[], any] = useClassrooms();\n  const [filter, setFilter] = useState(filters[0].value);\n  const [isNoWing, setIsNoWing] = useState(false);\n  const [isOperaStudioOnly, setIsOperaStudioOnly] = useState(false);\n  const [isAvailableForStudentOnly, setIsAvailableForStudentOnly] = useState(false);\n  const dispatchNotification = useNotification();\n  const {data: {accessRights}} = useLocal('accessRights');\n  let timer = useRef(null);\n  const [showResumePopup, setShowResumePopup] = useState(false);\n  const getData = async () => {\n    try {\n      await client.query({\n        query: GET_CLASSROOMS,\n        fetchPolicy: 'network-only'\n      });\n      await client.query({\n        query: GET_USERS,\n        fetchPolicy: 'network-only'\n      });\n      await client.query({\n        query: DISPATCHER_STATUS,\n        fetchPolicy: 'network-only'\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleResume = async () => {\n    await getData();\n    setShowResumePopup(false);\n  };\n\n  useEffect(() => {\n    const unsubscribeClassrooms = subscribeToMore({\n      document: FOLLOW_CLASSROOMS,\n    });\n    const unsubscribeUsers = subscribeToMore({\n      document: FOLLOW_USERS,\n    });\n    const unsubscribeDispatcherStatus = subscribeToMore({\n      document: FOLLOW_DISPATCHER_STATUS,\n    });\n\n    window.addEventListener('click', handleGlobalClick);\n    window.addEventListener('focus', handleWindowFocusEvent);\n    window.addEventListener('freeze', handleFreezeEvent);\n    window.addEventListener('resume', handleResumeEvent);\n    window.addEventListener('keydown', handleKeyDownEvent);\n\n    return () => {\n      unsubscribeClassrooms();\n      unsubscribeUsers();\n      unsubscribeDispatcherStatus();\n\n      window.removeEventListener('click', handleGlobalClick);\n      window.removeEventListener('focus', handleWindowFocusEvent);\n      window.removeEventListener('resume', handleResumeEvent);\n      window.removeEventListener('freeze', handleFreezeEvent);\n      window.removeEventListener('freeze', handleKeyDownEvent);\n    }\n  }, []);\n\n  const handleGlobalClick = () => {\n    clearTimeout(timer.current);\n    timer.current = setTimeout(() => {\n      setShowResumePopup(true);\n    }, MINUTE * 15);\n  };\n\n  const handleWindowFocusEvent = () => {\n    getData();\n  };\n\n  const handleResumeEvent = () => {\n    getData();\n  };\n\n  const handleFreezeEvent = () => {\n\n  };\n\n  const handleKeyDownEvent = (e: any) => {\n    // if (e.key?.length === 1) {\n    //   const value = classnameKeys.current + e.key.toLowerCase();\n    //   classnameKeys.current = value;\n    // }\n    // if (e.key === 'Enter') {\n    //   classnameKeys.current = '';\n    // }\n  };\n\n  const handleFilterChange = (event: any) => {\n    setFilter(event.value);\n  };\n\n  const handleToggleWing = () => {\n    setIsNoWing(prevState => !prevState);\n  };\n\n  const handleToggleOperaStudio = () => {\n    setIsOperaStudioOnly(prevState => !prevState);\n  };\n\n  const handleToggleAvailableForStudent = () => {\n    setIsAvailableForStudentOnly(prevState => !prevState);\n  };\n\n  return (\n    <div className={styles.classroomsPage}>\n      {showResumePopup && <div className={styles.updateDataModal}>\n          <div className={styles.popup}>\n              <Button onClick={handleResume}>Продовжити роботу</Button>\n          </div>\n      </div>}\n      <Header>\n        <h1>Аудиторії</h1>\n        {/*<HeaderSelect options={filters} onChange={handleFilterChange}/>*/}\n        <HeaderCheckbox label='Без флігеля' checked={isNoWing} setChecked={handleToggleWing}/>\n        <HeaderCheckbox label='Тільки оперна студія' checked={isOperaStudioOnly}\n                        setChecked={handleToggleOperaStudio}\n        />\n        <HeaderCheckbox label='Доступні для видачі студенту' checked={isOperaStudioOnly}\n                        setChecked={handleToggleAvailableForStudent}\n        />\n        {accessRights === ACCESS_RIGHTS.ADMIN && <Edit path='/adminClassrooms'/>}\n      </Header>\n      {!classrooms.length ? <Loader/> : (\n        <>\n          <Caviar dispatchNotification={dispatchNotification}\n                  classrooms={filterClassrooms(classrooms, filter, isOperaStudioOnly, isNoWing,\n                    isAvailableForStudentOnly)}\n          />\n          <ul className={styles.classroomsList}>\n            {filterClassrooms(classrooms, filter, isOperaStudioOnly, isNoWing,\n              isAvailableForStudentOnly)\n              .map((classroom: ClassroomType, index) => (\n                <Classroom\n                  dispatchNotification={dispatchNotification}\n                  key={classroom.id}\n                  classroom={classroom}\n                  index={index}\n                />\n              ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Classrooms;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/header/Header.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/button/Button.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/userProfile/UserProfile.tsx",["624"],"import React from \"react\";\r\nimport styles from \"./userProfile.module.css\";\r\nimport {useQuery} from \"@apollo/client\";\r\nimport {GET_USER_BY_ID} from \"../../api/operations/queries/users\";\r\nimport Title from \"../title/Title\";\r\nimport {UserTypes, UserTypesUa} from \"../../models/models\";\r\nimport Button from \"../button/Button\";\r\nimport moment from \"moment\";\r\n\r\ninterface PropTypes {\r\n  userId: number;\r\n}\r\n\r\nconst UserProfile: React.FC<PropTypes> = ({userId}) => {\r\n  const {data, loading, error} = useQuery(GET_USER_BY_ID, {\r\n    variables: {\r\n      where: {\r\n        id: userId,\r\n      }\r\n    },\r\n  });\r\n\r\n  if (!loading && !error)\r\n    return (\r\n      <div>\r\n        <Title title=\"Персональний номер\"/>\r\n        <p>{data.user.id}</p>\r\n        <Title title=\"Статус\"/>\r\n        <p>{UserTypesUa[data.user.type as UserTypes]}</p>\r\n        {data.user.department && (\r\n          <>\r\n            <Title title=\"Кафедра\"/>\r\n            <p>{data.user.department.name}</p>\r\n          </>\r\n        )}\r\n        <Title title=\"E-mail\"/>\r\n        <p>\r\n          <Button>\r\n            <a className={styles.link} href={`mailto:${data.user.email}`}>\r\n              {data.user.email}\r\n            </a>\r\n          </Button>\r\n        </p>\r\n        <Title title=\"Телефон\"/>\r\n        <p>\r\n          <Button>\r\n            <a className={styles.link} href={`tel:${data.user.phoneNumber}`}>\r\n              {data.user.phoneNumber}\r\n            </a>\r\n          </Button>\r\n        </p>\r\n      </div>\r\n    );\r\n  return <p>Loading...</p>;\r\n};\r\n\r\nexport default UserProfile;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/scheduleUnit/ScheduleUnit.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/constants.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/schedule.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/departments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/classroom/Classroom.tsx",["625","626","627"],"import React, {useEffect, useRef, useState} from \"react\";\nimport styles from \"./classroom.module.css\";\nimport {\n  ClassroomType,\n  DisabledState,\n  OccupiedInfo,\n  OccupiedState,\n  OccupiedStateUa,\n  QueuePolicyTypes,\n  User,\n  UserTypes,\n  UserTypesUa,\n} from \"../../models/models\";\nimport {fullName, isClassroomNotFree, typeStyle} from \"../../helpers/helpers\";\nimport Instruments from \"../instruments/Instruments\";\nimport {usePopupWindow} from \"../popupWindow/PopupWindowProvider\";\nimport ClassroomInfo from \"../ classroomInfo/ClassroomInfo\";\nimport Tag from \"../tag/Tag\";\nimport Footer from \"../footer/Footer\";\nimport specialPiano from \"../../assets/images/specialPiano.svg\";\nimport moment from \"moment\";\n\ninterface PropTypes {\n  classroom: ClassroomType;\n  dispatchNotification: (value: any) => void;\n  index: number;\n}\n\nconst Classroom: React.FC<PropTypes> = ({classroom, dispatchNotification, index}) => {\n  const {\n    id, name, occupied, instruments, isWing, isOperaStudio, special, schedule, chair,\n    isHidden, disabled, queueInfo: {queuePolicy: {policy, queueAllowedDepartments}}\n  } = classroom;\n  const userFullName = fullName(occupied.user as User, true);\n  const dispatchPopupWindow = usePopupWindow();\n  const [isOverdue, setIsOverDue] = useState(false);\n  // const occupiedOnSchedule = isOccupiedOnSchedule(schedule);\n  let timeout = useRef(null);\n\n  const header = (\n    <>\n      <h1>{`Аудиторія ${name}`}</h1>\n      {isWing && <Tag body=\"Флігель\"/>}\n      {isOperaStudio && <Tag body=\"Оперна студія\"/>}\n    </>\n  );\n\n  useEffect(() => {\n    return () => clearTimeout(timeout.current);\n  }, []);\n\n  useEffect(() => {\n    if (classroom.occupied.state === OccupiedState.RESERVED) {\n      const untilString: string = classroom.occupied.until as unknown as string;\n      const diffInMs = moment(untilString).diff(moment());\n\n      if (diffInMs >= 0 && !timeout.current) {\n        timeout.current = setTimeout(() => setIsOverDue(true), diffInMs);\n      } else if (diffInMs <= 0) {\n        setIsOverDue(true);\n      } else {\n        setIsOverDue(false);\n      }\n    } else {\n      setIsOverDue(false);\n    }\n    if (occupied.state !== OccupiedState.RESERVED && timeout.current) clearTimeout(timeout.current);\n    defineStyle();\n    defineStatus();\n    defineStatusStiles();\n  }, [classroom]);\n\n  const defineStyle = () => {\n    const occupiedStyle = {\n      background: \"#fff\",\n      transition: \"all .3s cubic-bezier(0.25, 0.8, 0.25, 1)\",\n      border: isOverdue ? '4px solid red' : 'none'\n    };\n    const vacantStyle = {\n      background: \"#76e286\",\n      transition: \"all .3s cubic-bezier(0.25, 0.8, 0.25, 1)\",\n    };\n    const disableStyle = {\n      background: \"#b1b1b1\",\n      transition: \"all .3s cubic-bezier(0.25, 0.8, 0.25, 1)\",\n      border: isOverdue ? '4px solid red' : 'none'\n    };\n\n    if (disabled?.state === DisabledState.DISABLED\n      || (classroom.queueInfo.queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS\n        && !classroom.queueInfo.queuePolicy.queueAllowedDepartments.length)) return disableStyle;\n    if (isClassroomNotFree(occupied)) return occupiedStyle;\n    return vacantStyle;\n  };\n\n  const defineStatusStiles = () => {\n    if (isOverdue) return styles.overdue;\n    if (!isOverdue && occupied.state === OccupiedState.RESERVED) return styles.reserved;\n    else return ''\n  };\n\n  const defineStatus = () => {\n    if (classroom.queueInfo.queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS\n      && !classroom.queueInfo.queuePolicy.queueAllowedDepartments.length) {\n      return 'Обмежений доступ';\n    }\n    if (isOverdue) return 'Резервація прострочена!';\n    if (disabled?.state === DisabledState.DISABLED) {\n      return disabled?.comment + ' до ' + moment(disabled.until).format('DD-MM-YYYY HH:mm');\n    }\n    if (isClassroomNotFree(occupied)) return OccupiedStateUa[occupied?.state as OccupiedState];\n    return \"Вільно\";\n  }\n\n  const handleClick = () => {\n    dispatchPopupWindow({\n      header: header,\n      //@ts-ignore\n      body: <ClassroomInfo\n        classroom={classroom}\n        dispatchNotification={dispatchNotification}\n        dispatchPopupWindow={dispatchPopupWindow}\n      />,\n      footer: <Footer\n        classroomName={name}\n        classroomId={id}\n        disabled={disabled}\n        occupied={occupied}\n        dispatchNotification={dispatchNotification}\n        dispatchPopupWindow={dispatchPopupWindow}\n        isOverdue={isOverdue}\n      />,\n    });\n  };\n\n  return (\n    <>\n      <li\n        key={id}\n        className={styles.classroomsListItem}\n        style={{...defineStyle(), opacity: isHidden ? .5 : 1}}\n        onClick={handleClick}\n        tabIndex={index}\n      >\n        <div className={styles.header}>\n          {special === 'PIANO' && <img className={styles.special} src={specialPiano} alt=\"Special Piano\"/>}\n          <h1 className={(policy === QueuePolicyTypes.SELECTED_DEPARTMENTS &&\n            queueAllowedDepartments.length) ? styles.isDepartment : ''}>{name}</h1>\n          {isClassroomNotFree(occupied) && (\n            <div className={styles.occupantInfo}>\n              <p className={styles.occupantName} title={userFullName}>{userFullName}</p>\n              <p style={typeStyle(occupied as OccupiedInfo)} className={styles.occupantType}>\n                {UserTypesUa[occupied.user?.type as UserTypes]}\n              </p>\n            </div>\n          )}\n        </div>\n        <div className={styles.occupationInfo}>\n          <p className={defineStatusStiles()}\n          >\n            {defineStatus()}\n          </p>\n        </div>\n        <Instruments instruments={instruments}/>\n      </li>\n    </>\n  );\n};\n\nexport default Classroom;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/Caviar.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/title/Title.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/instruments/Instruments.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/ClassroomInfo.tsx",["628","629","630"],"import React, {useEffect, useState} from \"react\";\nimport styles from \"./classroomInfo.module.css\";\nimport {ClassroomType, DisabledState, OccupiedState, QueuePolicyTypes, UserTypes} from \"../../models/models\";\nimport Instruments from \"../instruments/Instruments\";\nimport Title from \"../title/Title\";\nimport OccupantInfo from \"./occupantInfo/OccupantInfo\";\nimport OccupantRegistration from \"./occupantRegistration/OccupantRegistration\";\nimport {gql, useQuery} from \"@apollo/client\";\nimport {isClassroomNotFree, isStudent, isTimeout} from \"../../helpers/helpers\";\nimport {client} from \"../../api/client\";\nimport {GET_CLASSROOM} from \"../../api/operations/queries/classroom\";\nimport moment from \"moment\";\nimport {MINUTE, SECOND} from \"../../helpers/constants\";\n\ninterface PropTypes {\n  classroom: ClassroomType;\n  dispatchNotification: (value: string) => void;\n  dispatchPopupWindow: (value: any) => void;\n  dispatch: (value: any) => void;\n}\n\nconst ClassroomInfo: React.FC<PropTypes> = ({\n                                              classroom, dispatchNotification, dispatch,\n                                              dispatchPopupWindow\n                                            }) => {\n  const {name, instruments, description, chair, occupied, id} = classroom;\n  const [queueSize, setQueueSize] = useState(0);\n  const [isOccupiedOverdue, setIsOccupiedOverdue] = useState(false);\n  const {data: {isPassed}} = useQuery(gql`\n    query isPassed {\n      isPassed @client\n    }\n  `);\n\n  useEffect(() => {\n    const isOverdueByStudent = occupied.state === OccupiedState.OCCUPIED &&\n      isStudent(occupied.user.type as UserTypes) && isTimeout(occupied.until);\n    setIsOccupiedOverdue(isOverdueByStudent as boolean);\n  }, [occupied.state, occupied.user, occupied.until]);\n\n  useEffect(() => {\n    try {\n      client.query({\n        query: GET_CLASSROOM,\n        variables: {\n          where: {\n            id\n          }\n        },\n        fetchPolicy: 'network-only'\n      }).then(res => {\n        setQueueSize(res.data.classroom.queue?.length);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }, []);\n\n  const defineStatus = () => {\n    const {isHidden, disabled, queueInfo: {queuePolicy}, occupied} = classroom;\n    if (isOccupiedOverdue) return <span className={styles.overdue}>\n      {`Час занять в аудиторії прострочений на \n    ${((isTimeout(occupied.until, true) as number) / 1000 / 60)\n        .toFixed(0)} хв.`}\n    </span>\n    if (isHidden) return 'Аудиторія прихована';\n    if (disabled.state === DisabledState.DISABLED) {\n      return `Аудиторія відключена від черги до ${\n        moment(disabled.until).format('DD.MM.YYYY HH:mm')}. Причина: ${\n        disabled.comment\n      }`;\n    }\n    if (queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS\n      && queuePolicy.queueAllowedDepartments.length) {\n      return <>\n        <span>Аудиторія доступна для студентів: </span>\n        {queuePolicy.queueAllowedDepartments.map(({department: {name}}) => {\n          return <span className={styles.specialChair}>{name}</span>\n        })}\n      </>\n\n    }\n    if (queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS\n      && !queuePolicy.queueAllowedDepartments.length) {\n      return 'Аудиторія відключена від черги'\n    }\n    if (occupied.state === OccupiedState.FREE) return 'Аудиторія вільна'\n    if (occupied.state === OccupiedState.OCCUPIED) return 'Аудиторія зайнята'\n    if (occupied.state === OccupiedState.PENDING) return 'Аудиторія очікує підтвердження'\n    if (occupied.state === OccupiedState.RESERVED) return 'Аудиторія зарезервована'\n  }\n\n  return (\n    <div>\n      <p className={styles.description}>\n        {chair ? chair.name + \". \" + description : description}\n      </p>\n      <p>Черга за цією аудиторію: {queueSize ? `${queueSize} люд.` : 'відсутня'}</p>\n      <>\n        <Title title=\"Статус аудиторії\"/>\n        {defineStatus()}\n      </>\n      {/*<Title title=\"Розклад на сьогодні\" />*/}\n      {/*<ScheduleUnit classroomName={name} />*/}\n      {instruments?.length > 0 && (\n        <>\n          <Title title=\"Інструменти\"/>\n          <Instruments expanded instruments={instruments}/>\n        </>\n      )}\n      {isClassroomNotFree(occupied) && !isPassed ? (\n        <OccupantInfo occupied={occupied}/>\n      ) : (\n        <>\n          <Title title=\"Запис в аудиторію\"/>\n          <OccupantRegistration\n            dispatchNotification={dispatchNotification}\n            dispatchPopupWindow={dispatchPopupWindow}\n            classroomId={id}\n            classroomName={name}\n            dispatch={dispatch}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ClassroomInfo;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tag/Tag.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/Footer.tsx",["631"],"import React, {useEffect, useState} from \"react\";\nimport Button from \"../button/Button\";\nimport styles from \"../classroom/classroom.module.css\";\nimport {\n  client,\n  disableClassroomBeforeFreeVar,\n  disabledTimeVar,\n  isButtonDisabledVar,\n  isPassedVar\n} from \"../../api/client\";\nimport {gql, useMutation, useQuery} from \"@apollo/client\";\nimport {FREE_CLASSROOM} from \"../../api/operations/mutations/freeClassroom\";\nimport {DisabledInfo, DisabledState, OccupiedInfo, OccupiedState, UserTypes} from \"../../models/models\";\nimport DisableClassroom from \"../DisableClassroom\";\nimport {DISABLE_CLASSROOM} from \"../../api/operations/mutations/disableClassroom\";\nimport {ENABLE_CLASSROOM} from \"../../api/operations/mutations/enableClassroom\";\nimport {fullName, isClassroomNotFree, isStudent, isTimeout} from \"../../helpers/helpers\";\nimport ConfirmFooter from \"./ConfirmFooter\";\nimport moment from \"moment\";\nimport {GIVE_OUT_CLASSROOM_KEY} from \"../../api/operations/mutations/giveOutClassroomKey\";\nimport ConfirmBody from \"./ConfirmBody\";\nimport {useLocal} from \"../../hooks/useLocal\";\nimport {GET_USER_OCCUPIED_CLASSROOMS_BY_USER_ID} from \"../../api/operations/queries/users\";\n\ninterface PropTypes {\n  classroomName: string;\n  occupied: OccupiedInfo;\n  disabled?: DisabledInfo;\n  dispatchNotification: (value: any) => void;\n  dispatchPopupWindow?: (value: any) => void;\n  classroomId?: number;\n  isOverdue?: boolean;\n}\n\nconst Footer: React.FC<PropTypes> = ({\n                                       classroomName, occupied, dispatchNotification,\n                                       dispatchPopupWindow,\n                                       disabled: disabledClassroom,\n                                       classroomId, isOverdue, ...props\n                                     }) => {\n    const [confirmSanctions, setConfirmSanction] = useState(false);\n    const {data: {disabledTime}} = useLocal('disabledTime');\n    const [isOccupiedOverdue, setIsOccupiedOverdue] = useState(false);\n    const [freeClassroom] = useMutation(FREE_CLASSROOM, {\n      variables: {\n        input: {\n          classroomName: String(classroomName),\n          applySanction: isOverdue ? confirmSanctions : false\n        },\n      },\n    });\n    const [enableClassroom] = useMutation(ENABLE_CLASSROOM, {\n      variables: {\n        input: {\n          classroomName: String(classroomName)\n        }\n      }\n    });\n    const [giveOutKey] = useMutation(GIVE_OUT_CLASSROOM_KEY, {\n      variables: {\n        input: {\n          classroomName\n        }\n      }\n    })\n    const {data: {isButtonDisabled: disabled}} = useQuery(gql`\n    query isButtonDisabled {\n      isButtonDisabled @client\n    }\n  `);\n    const {data: {isPassed}} = useQuery(gql`\n    query isPassed {\n      isPassed @client\n    }\n  `);\n\n    useEffect(() => {\n      const isOverdueByStudent = occupied.state === OccupiedState.OCCUPIED &&\n        isStudent(occupied.user.type as UserTypes) && isTimeout(occupied.until);\n      setIsOccupiedOverdue(isOverdueByStudent as boolean);\n    }, [occupied.state, occupied.user, occupied.until]);\n\n    const handleFreeClassroom = async (name: string, freeMutationOnly = true) => {\n      try {\n        if (disableClassroomBeforeFreeVar() && freeMutationOnly) {\n          const result = await client.mutate({\n            mutation: DISABLE_CLASSROOM,\n            variables: {\n              input: {\n                classroomName: String(name),\n                comment: 'За розкладом',\n                until: moment().add(disabledTime, 'minutes').toISOString()\n              }\n            },\n          });\n          if (result.data.disableClassroom.userErrors.length) {\n            result.data.disableClassroom.userErrors.forEach(({message}: any) => {\n              dispatchNotification({\n                header: \"Помилка\",\n                message,\n                type: \"alert\",\n              });\n            })\n          } else {\n            dispatchNotification({\n              header: \"Успішно!\",\n              message: `Аудиторія ${name} заблокована.`,\n              type: \"ok\",\n            });\n          }\n        }\n        const result = await client.mutate({\n          mutation: FREE_CLASSROOM,\n          variables: {\n            input: {\n              classroomName: String(name),\n              applySanction: isOverdue ? confirmSanctions : false\n            },\n          },\n        });\n        if (result.data.freeClassroom.userErrors.length) {\n          result.data.freeClassroom.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Успішно!\",\n            message: `Аудиторія ${name} звільнена.`,\n            type: \"ok\",\n          });\n          isButtonDisabledVar(false);\n          disabledTimeVar(15);\n          disableClassroomBeforeFreeVar(false);\n          // @ts-ignore\n          freeMutationOnly && props.dispatch({\n            type: \"POP_POPUP_WINDOW\",\n          });\n        }\n      } catch (e: any) {\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: e.message,\n          type: \"alert\",\n        });\n        isButtonDisabledVar(false);\n        disabledTimeVar(15);\n        disableClassroomBeforeFreeVar(false);\n      }\n    };\n\n    const handlePassClassroom = () => {\n      isPassedVar(true);\n    };\n\n    const submitDisable = async (comment: string, until: string) => {\n      if (comment && until) {\n        try {\n          const result = await client.mutate({\n            mutation: DISABLE_CLASSROOM,\n            variables: {\n              input: {\n                classroomName: String(classroomName),\n                comment,\n                until: moment(until).toISOString()\n              }\n            },\n          });\n          if (result.data.disableClassroom.userErrors.length) {\n            result.data.disableClassroom.userErrors.forEach(({message}: any) => {\n              dispatchNotification({\n                header: \"Помилка\",\n                message,\n                type: \"alert\",\n              });\n            })\n          } else {\n            dispatchNotification({\n              header: \"Успішно!\",\n              message: `Аудиторія ${classroomName} заблокована.`,\n              type: \"ok\",\n            });\n          }\n          //@ts-ignore\n          props.dispatch({\n            type: \"POP_POPUP_WINDOW\",\n          });\n          //@ts-ignore\n          props.dispatch({\n            type: \"POP_POPUP_WINDOW\",\n          });\n        } catch (e: any) {\n          dispatchNotification({\n            header: \"Помилка!\",\n            message: e.message,\n            type: \"alert\",\n          });\n        }\n      } else {\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: \"Заповніть всі поля.\",\n          type: \"alert\",\n        });\n      }\n    };\n\n    const handleDisableClassroom = () => {\n      dispatchPopupWindow && dispatchPopupWindow({\n        header: <h1>Заблокувати аудиторію</h1>,\n        body: (\n          <DisableClassroom onSubmit={submitDisable}/>\n        ),\n        footer: (\n          <>\n            <Button form='disableClassroomForm' type='submit' color='red'>Заблокувати</Button>\n          </>\n        )\n      });\n    };\n\n    const handleEnableClassroom = async () => {\n      try {\n        const result = await enableClassroom();\n        if (result.data.enableClassroom.userErrors.length) {\n          result.data.enableClassroom.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Успішно!\",\n            message: `Аудиторія ${classroomName} розблокована.`,\n            type: \"ok\",\n          });\n        }\n        //@ts-ignore\n        props.dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e: any) {\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: e.message,\n          type: \"alert\",\n        });\n      }\n    }\n\n    const confirmGiveOutKey = async () => {\n      let occupiedClassroom: any;\n      const result = await client.query({\n        query: GET_USER_OCCUPIED_CLASSROOMS_BY_USER_ID,\n        variables: {\n          where: {\n            id: occupied.user.id\n          }\n        }\n      })\n      if (!result.data.user) {\n        alert('error')\n      } else {\n        occupiedClassroom = result.data.user.occupiedClassrooms.find(({state}: any) => state === OccupiedState.OCCUPIED)\n      }\n      dispatchPopupWindow({\n        header: <h1>Увага!</h1>,\n        body: occupiedClassroom ? (\n            <>\n              <p>{`В даний момент користувач займає аудиторію ${occupiedClassroom.classroom.name}, з якої він буде автоматично виписаний.`}</p>\n              <p>{`Переконайтесь, що ключі від попередньої аудиторії (${occupiedClassroom.classroom.name}) були здані.`}</p>\n            </>\n          ) :\n          (\n            <span>{`Підтвердіть видачу ключа для ${fullName(occupied.user, true)}`}</span>\n          ),\n        footer: <ConfirmFooter onOk={() => handleGiveOutKey(occupiedClassroom)}/>,\n        isConfirm: true\n      });\n    }\n\n    const confirmFreeClassroom = () => {\n      dispatchPopupWindow({\n        header: <h1>Увага!</h1>,\n        body: <ConfirmBody/>,\n        footer: <ConfirmFooter onOk={() => handleFreeClassroom(classroomName)}/>,\n        isConfirm: true\n      });\n    }\n\n    const handleGiveOutKey = async (occupiedClassroom: any) => {\n      isButtonDisabledVar(true);\n      try {\n        if (occupiedClassroom) {\n          await handleFreeClassroom(occupiedClassroom.classroom.name, true);\n        }\n        const result = await giveOutKey();\n        if (result.data.giveOutClassroomKey.userErrors.length) {\n          result.data.giveOutClassroomKey.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Операція успішна!\",\n            message: \"Ключ видано\",\n            type: \"ok\",\n          });\n        }\n        //@ts-ignore\n        props.dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n        isButtonDisabledVar(false);\n      } catch (e: any) {\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: (e as any).message,\n          type: \"alert\",\n        });\n        isButtonDisabledVar(false);\n      }\n    }\n\n    const DisabledButton = () => disabledClassroom?.state === DisabledState.DISABLED ? (\n      <Button color=\"red\" onClick={handleEnableClassroom}>Розблокувати</Button>\n    ) : (\n      <Button color=\"red\" onClick={handleDisableClassroom}>Заблокувати</Button>\n    );\n\n    return (\n      <div className={styles.footer}>\n        {(isOverdue || isOccupiedOverdue) && <span className={styles.sanctions}>\n                <label>З застосуванням санкцій</label>\n                <input type='checkbox' checked={confirmSanctions}\n                       onChange={e => setConfirmSanction(e.target.checked)}\n                />\n            </span>}\n        {isClassroomNotFree(occupied) && !isPassed ? (\n          <>\n            <DisabledButton/>\n            <div>\n              <Button onClick={handlePassClassroom}>\n                Передати\n              </Button>\n              <Button onClick={confirmFreeClassroom} disabled={disabled} color='red'>\n                Звільнити {confirmSanctions ? '(з санкціями)' : ''}\n              </Button>\n              {occupied.state === OccupiedState.RESERVED && (\n                <>\n                  <Button onClick={confirmGiveOutKey} disabled={disabled}\n                          style={{padding: '0 40px', height: '2.5rem'}}>\n                    Видати ключ\n                  </Button>\n\n                </>\n              )}\n            </div>\n          </>\n        ) : (\n          <>\n            <DisabledButton/>\n            <Button type=\"submit\" form=\"userSearchForm\" disabled={disabled}>\n              Записати {confirmSanctions ? '(з санкціями для попереднього користувача)' : ''}\n            </Button>\n          </>\n        )}\n      </div>\n    );\n  }\n;\n\nexport default Footer;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/freeClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantRegistration/OccupantRegistration.tsx",["632","633","634"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/tooltip/Tooltip.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/ classroomInfo/occupantInfo/OccupantInfo.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/occupyClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/edit/Edit.tsx",["635"],"import React from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport editIcon from \"../../../assets/images/edit.svg\";\nimport styles from \"./edit.module.css\";\n\ninterface PropTypes {\n  path?: string;\n  onClick?: (value?: any) => void;\n  dark?: boolean;\n}\n\nconst Edit: React.FC<PropTypes> = ({\n   path,\n   onClick,\n   dark = false\n}) => {\n  const history = useHistory();\n\n  return (\n    <img\n      src={editIcon}\n      className={[styles.editIcon, dark ? styles.dark : styles.light].join(' ')}\n      onClick={path ? (e) => {\n        e.stopPropagation();\n        history.push(path)\n      } : (e) => {\n        e.stopPropagation();\n        onClick && onClick();\n      }}\n    />\n  );\n}\n\nexport default Edit;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/add/Add.tsx",["636"],"import React from 'react';\nimport addIcon from \"../../../assets/images/add.svg\";\nimport styles from \"./add.module.css\";\n\ninterface PropTypes {\n  onClick: (value?: any) => void;\n}\n\nconst Add: React.FC<PropTypes> = ({onClick}) => {\n\n  return (\n    <img src={addIcon} className={styles.addIcon} onClick={onClick}/>\n  );\n}\n\nexport default Add;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/icons/delete/Delete.tsx",["637"],"import React from 'react';\nimport deleteIcon from \"../../../assets/images/delete.svg\";\nimport styles from \"./delete.module.css\";\n\ninterface PropTypes {\n  onClick?: (value?: any) => void;\n}\n\nconst Delete: React.FC<PropTypes> = ({onClick}) => {\n\n  return (\n    <img src={deleteIcon} className={styles.deleteIcon} onClick={(e) => {\n      e.stopPropagation();\n      onClick && onClick();\n    }}/>\n  );\n}\n\nexport default Delete;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/HeaderSelect.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerSelect/selectStyles.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/filterClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/headerCheckBox/HeaderCheckbox.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/dataList/DataList.tsx",["638"],"import React, {useEffect, useState} from 'react';\nimport styles from './dataList.module.css';\nimport Loader from \"../loader/Loader\";\n\ninterface PropTypes {\n  header: string[];\n  data: Array<any>;\n  gridTemplateColumns?: string;\n  handleItemClick?: (id: any) => void;\n  isSearching?: boolean;\n}\n\nconst DataList: React.FC<PropTypes> = ({\n                                         header, data, gridTemplateColumns,\n                                         handleItemClick, isSearching = false\n                                       }) => {\n\n  const [columnIndex, setColumnIndex] = useState(0);\n  const [sortedData, setSortedData] = useState(data);\n  const [columns, setColumns] = useState('repeat(3, 1fr)');\n\n  useEffect(() => {\n    setSortedData(data);\n    if (gridTemplateColumns) {\n      setColumns(gridTemplateColumns);\n    } else {\n      setColumns(`20px 3fr 200px`);\n    }\n  }, [data, gridTemplateColumns]);\n\n  useEffect(() => {\n    setSortedData(data?.slice().sort((a, b) => {\n      const aValue = a.props.children[columnIndex].props.children;\n      const bValue = b.props.children[columnIndex].props.children;\n      if (typeof aValue === 'string') {\n        return aValue\n          .localeCompare(bValue, undefined, {numeric: true, sensitivity: 'base'});\n      }\n      return aValue - bValue;\n    }));\n  }, [columnIndex, data]);\n\n  const handleClick = (index: number) => {\n    setColumnIndex(index);\n  };\n\n  return (\n    <div className={styles.container}>\n      <ul className={styles.list}>\n        <li className={styles.headerRow} style={{gridTemplateColumns: columns}}>\n          {header?.map((item, index) => <span\n            onClick={() => handleClick(index)}>{item}</span>)}\n        </li>\n        {!data.length\n          ? <li className={styles.emptyResult}>Нічого не знайдено</li>\n          : sortedData?.map(item => <li\n            onClick={() => handleItemClick && handleItemClick(item.props.children[0].props.children)}\n            className={styles.row} style={{gridTemplateColumns: columns}}>{item}</li>)}\n      </ul>\n    </div>\n  );\n}\n\nexport default DataList;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useUsers.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useInstruments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/instruments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createInstrument.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteInstrument.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateInstrument.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDepartments.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useFaculties.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/faculties.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDepartment.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDepartment.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDepartment.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteFaculty.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createFaculty.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateFaculty.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useDegrees.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteDegree.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createDegree.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateDegree.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/degrees.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useClassrooms.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/loader/Loader.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/AdminClassrooms.tsx",["639"],"import React, {useEffect, useState} from 'react';\nimport Header from '../../../components/header/Header';\nimport styles from './adminClassrooms.module.css';\nimport {ClassroomType, DisabledState, QueuePolicyTypes} from \"../../../models/models\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport CreateClassroomPopupBody from \"./createClassroomPopupBody/CreateClassroomPopupBody\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {DELETE_CLASSROOM} from \"../../../api/operations/mutations/deleteClassroom\";\nimport Add from \"../../../components/icons/add/Add\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport Button from \"../../../components/button/Button\";\nimport BrowseClassroomPopupBody from \"./browseClassroomPopupBody/BrowseClassroomPopupBody\";\nimport {GET_CLASSROOMS} from \"../../../api/operations/queries/classrooms\";\n\nconst listHeader = ['Назва', 'Кафедра', 'Прихована', 'Відключена', 'Спец.', 'Оп. студія', 'Флігель'];\n\nconst AdminClassrooms = () => {\n  const [classrooms, setClassrooms] = useState<ClassroomType[]>([]);\n  const {data, loading, error} = useQuery(GET_CLASSROOMS);\n  const [listData, setListData] = useState<any>([]);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [deleteClassroom] = useMutation(DELETE_CLASSROOM);\n  const dataItem = (item: ClassroomType) => <>\n    <span className={styles.centerText}\n          style={{\n            backgroundColor: item?.color ? item.color : '#ffffff00', borderRadius: 6,\n            color: item.color === '#000000' || item.color === '#ff0000' ||\n            item.color === '#0000ff' ? '#ffffff' : '#000000',\n            padding: '2px 0'\n          }}\n    >{item.name}</span>\n    <span>{item.chair?.name}</span>\n    <span className={styles.centerText}>{item.isHidden ? 'Так' : 'Ні'}</span>\n    <span className={styles.centerText}>\n      {item.disabled.state === DisabledState.DISABLED ? 'Тимчасово'\n        : (item.queueInfo.queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS\n          && !item.queueInfo.queuePolicy.queueAllowedDepartments.length) ? 'Так' :\n          (item.queueInfo.queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS\n            && item.queueInfo.queuePolicy.queueAllowedDepartments.length) ? 'Частково' : 'Ні'}\n    </span>\n    <span className={styles.centerText}>{item.special ? 'Так' : 'Ні'}</span>\n    <span className={styles.centerText}>{item.isOperaStudio ? 'Так' : 'Ні'}</span>\n    <span className={styles.centerText}>{item.isWing ? 'Так' : 'Ні'}</span>\n    <Edit dark onClick={() => handleCreate(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n\n  useEffect(() => {\n    !loading && !error && setClassrooms(data.classrooms);\n  }, [data, loading, error]);\n\n  useEffect(() => {\n    const data = classrooms.map(item => dataItem(item));\n\n    setListData(data);\n  }, [classrooms]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n        <p>{e.extraInfo}</p>\n        <pre>{e.stack}</pre>\n      </>,\n      footer: ''\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити аудиторію?');\n\n    if (confirm) {\n      try {\n        const result = await deleteClassroom({\n          variables: {where: {id}},\n          update(cache) {\n            cache.modify({\n              fields: {\n                classrooms(existingClassroomsRefs, {readField}) {\n                  return existingClassroomsRefs.filter(\n                    (classroomRef: any) => id !== readField('id', classroomRef),\n                  );\n                },\n              },\n            })\n          }\n        });\n        if (result.data.deleteOneClassroom.userErrors?.length) {\n          result.data.deleteOneClassroom.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Успішно!\",\n            message: `Аудиторія видалена.`,\n            type: \"ok\",\n          });\n        }\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline'}}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleCreate = (item: ClassroomType | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування аудиторії' : 'Створити аудиторію'}</h1>,\n      //@ts-ignore\n      body: <CreateClassroomPopupBody dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createClassroom'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleItemClick = (name: string) => {\n    const classroom = classrooms?.find(item => item.name === name);\n\n    dispatchPopupWindow({\n      header: <h1>{`Аудиторія ${classroom?.name}`}</h1>,\n      body: <BrowseClassroomPopupBody classroom={classroom as ClassroomType}/>,\n      footer: ''\n    });\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Редагування аудиторій</h1>\n        <Add onClick={() => handleCreate()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} handleItemClick={handleItemClick}\n                gridTemplateColumns={'55px 1fr 100px 100px 100px 80px 80px 40px 40px'}/>\n    </div>\n  );\n}\n\nexport default AdminClassrooms;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/AdminUsers.tsx",["640","641"],"import React, {useState} from 'react';\nimport Header from '../../../components/header/Header';\nimport styles from './adminUsers.module.css';\nimport {ACCESS_RIGHTS, StudentAccountStatus, User, UserTypes, UserTypesUa} from \"../../../models/models\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {checkVerified, fullName, showNotification} from \"../../../helpers/helpers\";\nimport mainStyles from \"../../../styles/main.module.css\";\nimport Select from \"react-select\";\nimport {CategoryType, selectStyles} from \"../../../styles/selectStyles\";\nimport Add from \"../../../components/icons/add/Add\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport BrowseUserPopupBody from \"./browseUserPopupBody/BrowseUserPopupBody\";\nimport Button from \"../../../components/button/Button\";\nimport {VERIFY_USER} from \"../../../api/operations/mutations/verifyUser\";\nimport {useLocal} from \"../../../hooks/useLocal\";\nimport EditUserPopupBody from \"./editUserPopupBody/EditUserPopupBody\";\nimport {client} from \"../../../api/client\";\nimport {DELETE_USER} from \"../../../api/operations/mutations/deleteUser\";\nimport VerifyButton from \"./verifyButton/VerifyButton\";\nimport HeaderCheckbox from \"../../../components/headerCheckBox/HeaderCheckbox\";\nimport Loader from \"../../../components/loader/Loader\";\n\nconst categories: CategoryType[] = [\n  {\n    value: 'ALL',\n    label: 'Всі',\n  },\n  {\n    value: UserTypes.TEACHER,\n    label: 'Викладачі'\n  },\n  {\n    value: UserTypes.STUDENT,\n    label: 'Студенти'\n  },\n  {\n    value: UserTypes.POST_GRADUATE,\n    label: 'Аситенти/Аспіранти'\n  },\n  {\n    value: UserTypes.CONCERTMASTER,\n    label: 'Концертмейстери'\n  },\n  {\n    value: UserTypes.ILLUSTRATOR,\n    label: 'Ілюстратори'\n  }\n];\n\nconst listHeader = ['ID', 'П.І.Б.', '', 'Статус']\n\nconst AdminUsers = () => {\n  const {data, loading, error} = useQuery(GET_USERS);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [searchValue, setSearchValue] = useState('');\n  const [categoryFilter, setCategoryFilter] = useState('ALL');\n  const [unverifiedOnly, setUnverifiedOnly] = useState(false);\n  const [verifyUser] = useMutation(VERIFY_USER);\n  const {data: {accessRights}} = useLocal('accessRights');\n  const user = (user: User) => <>\n    <span className={styles.alignText}>{user.id}</span>\n    <span>{fullName(user)}</span>\n    <span>{user.studentInfo?.accountStatus === StudentAccountStatus.UNVERIFIED && (\n      <Button color='red'>Верифікувати</Button>\n    )}\n    </span>\n    <span className={styles.alignText}>{UserTypesUa[user.type as UserTypes]}</span>\n    {accessRights === ACCESS_RIGHTS.ADMIN && <Delete onClick={() => handleDelete(user.id)}/>}\n  </>;\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n        <p>{e.extraInfo}</p>\n        <pre>{e.stack}</pre>\n      </>,\n      footer: ''\n    });\n  };\n\n  const handleDelete = async (userId: number) => {\n    const confirmDelete = window.confirm('Ви дійсно бажаєте видалити всі дані про користувача?')\n    if (confirmDelete) {\n      try {\n        const result = await client.mutate({\n          mutation: DELETE_USER,\n          variables: {\n            where: {\n              id: userId\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Користувача видалено.`,\n          type: \"ok\",\n        });\n      } catch (e: any) {\n        console.log(e);\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline'}}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleCreate = (user: User) => {\n    dispatchPopupWindow({\n      header: <h1>Створити новий аккаунт співробітника</h1>,\n      //@ts-ignore\n      body: <EditUserPopupBody user={user} dispatchNotification={dispatchNotification}\n                               dispatchPopupWindow={dispatchPopupWindow}/>,\n      footer: null\n    });\n  };\n\n  const handleSearch = (e: any) => {\n    setSearchValue(e.target.value);\n  };\n\n  const handleSelectCategory = (e: any) => {\n    setCategoryFilter(e.value);\n  }\n\n  const verify = async (userId: number) => {\n    try {\n      const result = await verifyUser({variables: {input: {userId}}});\n      if (result.data.verifyUser.userErrors.length) {\n        result.data.verifyUser.userErrors.forEach(({message}: any) => {\n          showNotification(dispatchNotification, ['Помилка!', message, 'alert']);\n        })\n      } else {\n        showNotification(dispatchNotification, ['Успішно!', 'Користувача верифіковано', 'ok']);\n        try {\n          await client.query({\n            query: GET_USERS,\n            fetchPolicy: 'network-only'\n          })\n        } catch (e: any) {\n          showNotification(dispatchNotification, ['Помилка!', e.message.slice(0, 100), 'alert']);\n        }\n      }\n\n    } catch (e: any) {\n      showNotification(dispatchNotification, ['Помилка!', e.message.slice(0, 100), 'alert']);\n    }\n  };\n\n  const handleItemClick = (id: number) => {\n    const user = data.users?.find((item: User) => item.id === id);\n\n    dispatchPopupWindow({\n      header: <h1>{fullName(user)}</h1>,\n      body: <BrowseUserPopupBody user={user}/>,\n      footer: !checkVerified(user) && (\n        <VerifyButton\n          verify={() => verify(user.id)}\n          dispatchPopupWindow={dispatchPopupWindow}\n          dispatchNotification={dispatchNotification}\n          userId={user.id}\n        />\n        )\n    });\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління користувачами</h1>\n        <input\n          type=\"text\"\n          value={searchValue}\n          onChange={handleSearch}\n          placeholder=\"Пошук за П.І.Б або ID\"\n          className={mainStyles.headerInput}\n        />\n        <Select\n          options={categories}\n          defaultValue={categories[0]}\n          onChange={handleSelectCategory}\n          styles={selectStyles}\n        />\n        <HeaderCheckbox\n          label='Тільки неверифіковані'\n          checked={unverifiedOnly}\n          setChecked={() => setUnverifiedOnly(prevState => !prevState)}\n        />\n        {accessRights === ACCESS_RIGHTS.ADMIN && <Add onClick={handleCreate}/>}\n      </Header>\n      {loading ? <Loader/> : data?.users.length ? (\n        <DataList header={listHeader}\n                  data={data.users\n                    .filter((user: User) => (fullName(user).toLowerCase() + user.id).includes(searchValue.toLowerCase()))\n                    .filter((user: User) => categoryFilter === 'ALL' ? true : user.type === categoryFilter)\n                    .filter((user: User) => unverifiedOnly ? user.studentInfo?.accountStatus === StudentAccountStatus.UNVERIFIED : true)\n                    .map((item: User) => user(item))}\n                  handleItemClick={handleItemClick}\n                  gridTemplateColumns='40px 1fr 100px 200px 40px 40px'\n        />\n      ) : (\n        <p>Користувачів не знайдено</p>\n      )}\n    </div>\n  );\n}\n\nexport default AdminUsers;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/AdminFaculties.tsx",["642"],"import React, {useEffect, useState} from 'react';\nimport Header from \"../../../components/header/Header\";\nimport Add from \"../../../components/icons/add/Add\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {Faculty} from \"../../../models/models\";\nimport styles from \"../departments/adminDepartments.module.css\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport useFaculties from \"../../../hooks/useFaculties\";\nimport Button from \"../../../components/button/Button\";\nimport CreateFacultyPopupBody from \"./createFacultyPopupBody/CreateFacultyPopupBody\";\nimport {DELETE_FACULTY} from \"../../../api/operations/mutations/deleteFaculty\";\n\nconst listHeader = ['ID', 'Назва'];\n\nconst AdminFaculties = () => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [updateList, setUpdateList] = useState(false);\n  const faculties = useFaculties(updateList);\n  const [deleteFaculty] = useMutation(DELETE_FACULTY);\n  const dispatchNotification = useNotification();\n  const [listData, setListData] = useState<any>([]);\n  const dataItem = (item: Faculty) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span>{item.name}</span>\n    <Edit dark onClick={() => handleAdd(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = faculties.map(item => dataItem(item));\n\n    setListData(data);\n  }, [faculties]);\n\n  const handleAdd = (item: Faculty | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування факультету' : 'Створити факультет'}</h1>,\n      body: <CreateFacultyPopupBody setUpdateList={setUpdateList}\n                                       dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createFaculty'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити факультет?');\n\n    if (confirm) {\n      try {\n        await deleteFaculty({variables: {where: {id}}});\n        setUpdateList(prevState => !prevState);\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Факультет видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління факультетами</h1>\n        <Add onClick={() => handleAdd()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'40px 1fr 40px 40px'}/>\n    </div>\n  );\n};\n\nexport default AdminFaculties;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/AdminDegrees.tsx",["643"],"import React, {useEffect, useState} from 'react';\nimport Header from \"../../../components/header/Header\";\nimport Add from \"../../../components/icons/add/Add\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useMutation} from \"@apollo/client\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport {Degree} from \"../../../models/models\";\nimport styles from \"../departments/adminDepartments.module.css\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport Button from \"../../../components/button/Button\";\nimport CreateDegreePopupBody from \"./createDegreePopupBody/CreateDegreePopupBody\";\nimport useDegrees from \"../../../hooks/useDegrees\";\nimport {DELETE_DEGREE} from \"../../../api/operations/mutations/deleteDegree\";\n\nconst listHeader = ['ID', 'Назва'];\n\nconst AdminDegrees = () => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [updateList, setUpdateList] = useState(false);\n  const degrees = useDegrees(updateList);\n  const [deleteFaculty] = useMutation(DELETE_DEGREE);\n  const dispatchNotification = useNotification();\n  const [listData, setListData] = useState<any>([]);\n  const dataItem = (item: Degree) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span>{item.name}</span>\n    <Edit dark onClick={() => handleAdd(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = degrees.map(item => dataItem(item));\n\n    setListData(data);\n  }, [degrees]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n        <p>{e.extraInfo}</p>\n        <pre>{e.stack}</pre>\n      </>,\n      footer: ''\n    });\n  };\n\n  const handleAdd = (item: Degree | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування учбового ступеню' : 'Створити учбовий ступінь'}</h1>,\n      body: <CreateDegreePopupBody setUpdateList={setUpdateList} handleErrorDetails={handleErrorDetails}\n                                       dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createDegree'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити учбовий ступінь?');\n\n    if (confirm) {\n      try {\n        await deleteFaculty({variables: {where: {id}}});\n        setUpdateList(prevState => !prevState);\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Учбовий ступінь видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління учбовими ступенями</h1>\n        <Add onClick={() => handleAdd()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'40px 1fr 40px 40px'}/>\n    </div>\n  );\n};\n\nexport default AdminDegrees;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/AdminDepartments.tsx",["644"],"import React, {useEffect, useState} from 'react';\nimport Header from \"../../../components/header/Header\";\nimport Add from \"../../../components/icons/add/Add\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport CreateDepartmentPopupBody from \"./createDepartmentPopupBody/CreateDepartmentPopupBody\";\nimport Button from \"../../../components/button/Button\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport useDepartments from \"../../../hooks/useDepartments\";\nimport {Department} from \"../../../models/models\";\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport styles from './adminDepartments.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {DELETE_DEPARTMENT} from \"../../../api/operations/mutations/deleteDepartment\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\n\nconst listHeader = ['ID', 'Назва'];\n\nconst AdminDepartments = () => {\n  const dispatchPopupWindow = usePopupWindow();\n  const departments = useDepartments();\n  const [deleteDepartment] = useMutation(DELETE_DEPARTMENT);\n  const dispatchNotification = useNotification();\n  const [listData, setListData] = useState<any>([]);\n  const dataItem = (item: Department) => <>\n    <span className={styles.centerText}>{item.id}</span>\n    <span>{item.name}</span>\n    <Edit dark onClick={() => handleAdd(item)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    const data = departments.map(item => dataItem(item));\n    setListData(data);\n  }, [departments]);\n\n  const handleAdd = (item: Department | null = null) => {\n    dispatchPopupWindow({\n      header: <h1>{item ? 'Редагування кафедри' : 'Створити кафедру'}</h1>,\n      body: <CreateDepartmentPopupBody\n              dispatchNotification={dispatchNotification} item={item}/>,\n      footer: <Button type='submit' form='createDepartment'>\n        {item ? 'Зберегти зміни' : 'Створити'}\n      </Button>\n    });\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити кафедру?');\n\n    if (confirm) {\n      try {\n        await deleteDepartment({variables: {where: {id}}});\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Кафедру видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління кафедрами</h1>\n        <Add onClick={() => handleAdd()}/>\n      </Header>\n      <DataList header={listHeader} data={listData} gridTemplateColumns={'40px 1fr 40px 40px'}/>\n    </div>\n  );\n}\n\nexport default AdminDepartments;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/admin/Admin.tsx",["645","646","647","648","649"],"import React, {useEffect, useState} from \"react\";\nimport styles from \"./admin.module.css\";\nimport Header from \"../../../components/header/Header\";\nimport {NavLink, useHistory} from \"react-router-dom\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_USERS} from \"../../../api/operations/queries/users\";\nimport {ACCESS_RIGHTS, StudentAccountStatus, User} from \"../../../models/models\";\nimport CountUp from \"react-countup\";\nimport {useLocal} from \"../../../hooks/useLocal\";\nimport Button from \"../../../components/button/Button\";\nimport {client, isLoggedVar} from \"../../../api/client\";\nimport {handleLogout} from \"../../../helpers/logout\";\n\nconst Admin = () => {\n    const {data, loading, error} = useQuery(GET_USERS);\n    const [unverifiedCounter, setUnverifiedCounter] = useState(0);\n    const {data: {accessRights}} = useLocal('accessRights');\n    const history = useHistory();\n\n    useEffect(() => {\n      setUnverifiedCounter(0);\n      if (data) {\n        data.users.forEach(({studentInfo}: User) => {\n          studentInfo?.accountStatus === StudentAccountStatus.UNVERIFIED\n          && setUnverifiedCounter(prevState => prevState + 1);\n        });\n      }\n    }, [data]);\n\n    return (\n      <div>\n        <Header><h1>Налаштування</h1></Header>\n        <ul className={styles.list}>\n          {accessRights === ACCESS_RIGHTS.ADMIN && <li><NavLink to='/adminClassrooms'>Аудиторії</NavLink>\n          </li>}\n          <li><NavLink to='/adminUsers'>Користувачі\n            {unverifiedCounter !== 0 && <span className={styles.unverified} title=\"Неверифіковані\">\n            <CountUp end={unverifiedCounter} duration={1}/></span>}\n          </NavLink></li>\n          {accessRights === ACCESS_RIGHTS.ADMIN && <>\n              <li><NavLink to='/adminInstruments'>Інструменти</NavLink></li>\n              <li><NavLink to='/adminDepartments'>Кафедри</NavLink></li>\n              <li><NavLink to='/adminFaculties'>Факультети</NavLink></li>\n              <li><NavLink to='/adminDegrees'>Навчальні ступені</NavLink></li>\n            {/*<li><NavLink to='/adminSchedule'>Розклад</NavLink></li>*/}\n          </>}\n        </ul>\n        <div className={styles.settings}>\n          <Button onClick={handleLogout}>Вийти з профілю</Button>\n        </div>\n      </div>\n    );\n  }\n;\n\nexport default Admin;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/AdminInstruments.tsx",["650"],"import React, {useEffect, useState} from 'react';\nimport useInstruments from \"../../../hooks/useInstruments\";\nimport Header from \"../../../components/header/Header\";\nimport DataList from \"../../../components/dataList/DataList\";\nimport styles from './adminInstruments.module.css';\nimport Edit from \"../../../components/icons/edit/Edit\";\nimport Delete from \"../../../components/icons/delete/Delete\";\nimport Add from \"../../../components/icons/add/Add\";\nimport {usePopupWindow} from \"../../../components/popupWindow/PopupWindowProvider\";\nimport {useNotification} from \"../../../components/notification/NotificationProvider\";\nimport CreateInstrumentPopupBody from \"./createInstrumentPopupBody/CreateInstrumentPopupBody\";\nimport Button from \"../../../components/button/Button\";\nimport {useMutation} from \"@apollo/client\";\nimport {DELETE_INSTRUMENT} from \"../../../api/operations/mutations/deleteInstrument\";\nimport {InstrumentType, InstrumentTypesE, InstrumentTypesEUa} from \"../../../models/models\";\nimport BrowseInstrumentPopupBody from \"./browseInstrumentPopupBody/BrowseInstrumentPopupBody\";\n\nconst dataHeader = ['ID', 'Назва', 'Тип', 'Рейтинг', 'Ауд.', 'Інв. номер'];\n\nconst AdminInstruments = () => {\n  const instruments = useInstruments();\n  const [listData, setListData] = useState<Array<any>>([]);\n  const dispatchPopupWindow = usePopupWindow();\n  const dispatchNotification = useNotification();\n  const [deleteInstrument] = useMutation(DELETE_INSTRUMENT);\n  const instrument = (item: InstrumentType) => <>\n    <span className={styles.alignText}>{item.id}</span>\n    <span>{item.name}</span>\n    <span  className={styles.alignText}>{InstrumentTypesEUa[item.type as InstrumentTypesE]}</span>\n    <span className={styles.alignText}>{item.rate.toFixed(1)}</span>\n    <span className={styles.alignText}>{item.classroom?.name}</span>\n    <span className={styles.alignText}>{item.persNumber}</span>\n    <Edit dark onClick={() => handleAdd(item, true)}/>\n    <Delete onClick={() => handleDelete(item.id)}/>\n  </>;\n\n  useEffect(() => {\n    setListData(instruments?.map((item) => instrument(item)));\n  }, [instruments]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: <>\n        <p>{e.message}</p>\n      </>,\n      footer: ''\n    })\n  };\n\n  const handleDelete = async (id: number) => {\n    const confirm = window.confirm('Ви дійсно бажаєте видалити інструмент?');\n\n    if (confirm) {\n      try {\n        await deleteInstrument({variables: {where: {id}}});\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Інструмент видалено.`,\n          type: \"ok\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleAdd = (item: InstrumentType | null = null, isEditMode = false) => {\n    dispatchPopupWindow({\n      header: <h1>{isEditMode ? 'Редагувати інструмент' : 'Створити інструмент'}</h1>,\n      body: <CreateInstrumentPopupBody dispatchNotification={dispatchNotification}\n          addInstrument={addInstrument} instrument={item} isEditMode={isEditMode}\n          handleErrorDetails={handleErrorDetails}\n      />,\n      footer: <Button type='submit' form='createInstrument'>\n        {isEditMode ? 'Зберегти зміни' : 'Створити'}\n      </Button>,\n    });\n  };\n\n  const handleItemClick = (id: number) => {\n    const instrument = instruments?.find(item => item.id === id);\n    dispatchPopupWindow({\n      header: <h1>{instrument?.name}</h1>,\n      body: <BrowseInstrumentPopupBody instrument={instrument as InstrumentType}/>,\n      footer: ''\n    });\n  };\n\n  const addInstrument = (item: InstrumentType) => {\n    setListData(prevState => [...prevState, instrument(item)]);\n  };\n\n  return (\n    <div>\n      <Header>\n        <h1>Управління інструментами</h1>\n        <Add onClick={handleAdd}/>\n      </Header>\n      <DataList header={dataHeader} data={listData}\n                gridTemplateColumns={'40px 250px 100px 100px 100px 1fr 30px 30px'}\n                handleItemClick={handleItemClick}\n      />\n    </div>\n  );\n}\n\nexport default AdminInstruments;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/createClassroomPopupBody/CreateClassroomPopupBody.tsx",["651","652","653"],"import React, {Fragment, useEffect, useRef, useState} from 'react';\nimport styles from './createClassroomPopupBody.module.css';\nimport Select, {components} from \"react-select\";\nimport {useMutation} from \"@apollo/client\";\nimport {\n  ClassroomType,\n  Department,\n  ExclusivelyQueueAllowedDepartmentsInfo,\n  InstrumentType, InstrumentTypesE, InstrumentTypesEUa,\n  QueuePolicyTypes,\n  SpecialClassroomTypes\n} from \"../../../../models/models\";\nimport {useForm} from \"react-hook-form\";\nimport {CREATE_CLASSROOM} from \"../../../../api/operations/mutations/createClassroom\";\nimport {GET_CLASSROOMS} from \"../../../../api/operations/queries/classrooms\";\nimport {client} from \"../../../../api/client\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport useInstruments from \"../../../../hooks/useInstruments\";\nimport mainStyles from \"../../../../styles/main.module.css\";\nimport useDepartments from \"../../../../hooks/useDepartments\";\nimport addIcon from '../../../../assets/images/addLined.svg';\nimport moment from \"moment\";\nimport {UPDATE_CLASSROOM} from \"../../../../api/operations/mutations/updateClassroom\";\n\ninterface PropTypes {\n  dispatch: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  item?: ClassroomType;\n}\n\nconst colors = [\n  {value: '#ffffff00', label: 'Немає'},\n  {value: '#000000', label: 'Чорний'},\n  {value: '#ff0000', label: 'Червоний'},\n  {value: '#00ff00', label: 'Зелений'},\n  {value: '#0000ff', label: 'Синій'},\n]\n\nconst CreateClassroomPopupBody: React.FC<PropTypes> = ({\n                                                         item,\n                                                         dispatchNotification, ...props\n                                                       }) => {\n  const departmentsData = useDepartments();\n  const instrumentsData = useInstruments();\n  const [createClassroom] = useMutation(CREATE_CLASSROOM);\n  const [departments, setDepartments] = useState<any>([]);\n  const [selectedDepartment, setSelectedDepartment] = useState<any>();\n  const [selectedColor, setSelectedColor] = useState<any>(colors[0]);\n  const [selectedAllowedDepartments, setSelectedAllowedDepartments] = useState([]);\n  const [allowedForSelectedDepartments, setAllowedForSelectedDepartments] = useState(false);\n  const [instruments, setInstruments] = useState<any>([]);\n  const [selectedInstruments, setSelectedInstruments] = useState<any>([]);\n  const [freeInstrumentsOnly, setFreeInstrumentsOnly] = useState(true);\n  const {register, handleSubmit, setValue, watch, formState: {errors}} = useForm();\n  const firstFieldRef = useRef(null);\n\n  useEffect(() => {\n    firstFieldRef.current && firstFieldRef.current.focus();\n  }, [firstFieldRef]);\n\n  useEffect(() => {\n    setDepartments(departmentsData.map((dep: Department) => ({value: dep.id, label: dep.name})));\n    if (item && item.chair) {\n      setSelectedDepartment({value: item.chair.id, label: item.chair.name});\n    }\n  }, [departmentsData]);\n\n  useEffect(() => {\n    if (freeInstrumentsOnly && instrumentsData) {\n      const filteredInstruments = instrumentsData.filter(item => !item.classroom);\n\n      setMappedInstruments(filteredInstruments);\n    } else {\n      setMappedInstruments(instrumentsData);\n    }\n  }, [freeInstrumentsOnly, instrumentsData]);\n\n  useEffect(() => {\n    if (item && item.color) {\n      const color = colors.find(({value}) => value === item.color);\n      setSelectedColor(color ? color : colors[0]);\n    }\n    if (item && item.instruments) {\n      const itemInstruments = item.instruments\n        .map(({id, name, type, persNumber}) => ({\n          value: id, label: name + ' ('\n            + InstrumentTypesEUa[type as InstrumentTypesE].toLowerCase() + ') '\n            + (persNumber ? ', ' + persNumber : '')\n        }));\n      setSelectedInstruments(itemInstruments);\n    }\n    if (item && item.queueInfo.queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS) {\n      setAllowedForSelectedDepartments(true);\n      setMappedSelectedAllowedDepartments(item.queueInfo.queuePolicy.queueAllowedDepartments)\n    }\n  }, [])\n\n  const setMappedInstruments = (data: InstrumentType[]) => {\n    setInstruments(data.map((item) => ({\n      value: item.id, label: item.name + ' ('\n        + InstrumentTypesEUa[item.type as InstrumentTypesE].toLowerCase()\n        + ') ' + item.persNumber\n    })));\n  };\n\n  const setMappedSelectedAllowedDepartments = (data: ExclusivelyQueueAllowedDepartmentsInfo[]) => {\n    setSelectedAllowedDepartments(data.map(({department}) => ({\n      value: department.id, label: department.name\n    })));\n  };\n\n  const onSubmit = async (data: any) => {\n    if (item) {\n      const newInstruments = item.instruments ? selectedInstruments.filter(({value}: any) => {\n        return !(item.instruments.some(instrument => instrument.id === value))\n      }).map(({value}: any) => ({id: value})) : selectedInstruments\n        .map(({value}: any) => ({id: value}));\n\n      const removedInstruments = item.instruments ? item.instruments.filter(instrument => {\n        return !(selectedInstruments.some(({value}: any) => value === instrument.id))\n      }).map(({id}: any) => ({id})) : [];\n\n      const newQueueAllowedDepartments = item.queueInfo.queuePolicy.queueAllowedDepartments ?\n        selectedAllowedDepartments.filter(({value}: any) => {\n          return !(item.queueInfo.queuePolicy.queueAllowedDepartments\n            .some(allowedDep => allowedDep.department.id === value))\n        }).map(({value}: any) => ({departmentId: value})) : selectedAllowedDepartments\n          .map(({value}: any) => ({departmentId: value}));\n\n      const removedQueueAllowedDepartments = item.queueInfo.queuePolicy.queueAllowedDepartments ?\n        item.queueInfo.queuePolicy.queueAllowedDepartments.filter(({department}) => {\n          return !(selectedAllowedDepartments.some(({value}: any) => value === department.id))\n        }).map(({id}: any) => ({departmentId: id})) : [];\n\n      try {\n        const result = await client.mutate({\n          mutation: UPDATE_CLASSROOM,\n          variables: {\n            data: {\n              name: data.name ? {\n                set: data.name\n              } : undefined,\n              special: data.special ? {\n                set: SpecialClassroomTypes.PIANO\n              } : undefined,\n              floor: data.floor ? {\n                set: Number(data.floor)\n              } : undefined,\n              isWing: {\n                set: data.isWing\n              },\n              isOperaStudio: {\n                set: data.isOperaStudio\n              },\n              description: data.description !== null ? {\n                set: data.description\n              } : undefined,\n              isHidden: {\n                set: data.isHidden\n              },\n              chair: item.chair && !selectedDepartment ? {\n                disconnect: true\n              } : selectedDepartment?.value !== item.chair?.id ? {\n                connect: {\n                  id: selectedDepartment.value\n                }\n              } : undefined,\n              instruments: {\n                connect: newInstruments,\n                disconnect: removedInstruments\n              },\n              color: {\n                set: selectedColor.value\n              },\n              queueInfo: {\n                update: {\n                  queuePolicy: {\n                    update: {\n                      policy: {\n                        set: allowedForSelectedDepartments ? QueuePolicyTypes.SELECTED_DEPARTMENTS\n                          : QueuePolicyTypes.ALL_DEPARTMENTS\n                      },\n                      queueAllowedDepartments:\n                        allowedForSelectedDepartments ? {\n                          deleteMany: removedQueueAllowedDepartments,\n                          createMany: {\n                            data: newQueueAllowedDepartments\n                          }\n                        } : {\n                          deleteMany: removedQueueAllowedDepartments\n                        }\n                    }\n                  }\n                }\n              },\n            },\n            where: {\n              id: item.id\n            }\n          }\n        })\n        if (result.data.updateOneClassroom.userErrors?.length) {\n          result.data.updateOneClassroom.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Успішно!\",\n            message: `Аудиторія ${item.name} змінена.`,\n            type: \"ok\",\n          });\n          props.dispatch({\n            type: \"POP_POPUP_WINDOW\",\n          });\n        }\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка\",\n          message: JSON.stringify(e),\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        const result = await createClassroom({\n          variables: {\n            data: {\n              name: data.name,\n              special: data.special ? SpecialClassroomTypes.PIANO : undefined,\n              floor: Number(data.floor),\n              isWing: data.isWing,\n              isOperaStudio: data.isOperaStudio,\n              description: data.description,\n              chair: selectedDepartment ? {connect: {id: selectedDepartment.value}} : undefined,\n              instruments: selectedInstruments.length > 0\n                ? {connect: selectedInstruments.map((item: any) => ({id: item.value}))} : undefined,\n              orderIndex: 0,\n              isHidden: data.isHidden,\n              color: selectedColor.value,\n              queueInfo: {\n                create: {\n                  queuePolicy: {\n                    create: {\n                      policy: allowedForSelectedDepartments ? QueuePolicyTypes.SELECTED_DEPARTMENTS\n                        : QueuePolicyTypes.ALL_DEPARTMENTS,\n                      queueAllowedDepartments: allowedForSelectedDepartments ? {\n                        createMany: {\n                          data: selectedAllowedDepartments.map(({value}: any) => ({departmentId: value}))\n                        }\n                      } : undefined\n                    }\n                  }\n                }\n              }\n            }\n          }\n        });\n        if (result.data.createOneClassroom.userErrors?.length) {\n          result.data.createOneClassroom.userErrors.forEach(({message}: any) => {\n            dispatchNotification({\n              header: \"Помилка\",\n              message,\n              type: \"alert\",\n            });\n          })\n        } else {\n          dispatchNotification({\n            header: \"Успішно!\",\n            message: `Аудиторія ${data.name} створена.`,\n            type: \"ok\",\n          });\n        }\n      } catch (e) {\n        dispatchNotification({\n          header: \"Помилка\",\n          message: JSON.stringify(e),\n          type: \"alert\",\n        });\n      }\n      await client.query({\n        query: GET_CLASSROOMS,\n        variables: {date: moment().toISOString()},\n        fetchPolicy: 'network-only',\n      });\n      props.dispatch({\n        type: \"POP_POPUP_WINDOW\",\n      });\n    }\n  };\n\n  const handleSelectDepartment = (e: any) => {\n    setSelectedDepartment(e);\n  };\n\n  const handleSelectInstrument = (e: any) => {\n    setSelectedInstruments([...e]);\n  };\n\n  const handleSelectColor = (e: any) => {\n    setSelectedColor(e);\n  };\n\n  const handleSelectAllowedDepartment = (e: any) => {\n    setSelectedAllowedDepartments([...e]);\n  };\n\n  const handleFreeInstruments = () => {\n    setFreeInstrumentsOnly(prevState => !prevState);\n  };\n\n  const DropdownIndicator = () => {\n    return <img src={addIcon} alt=\"Додати\" className={styles.addInstrumentIcon}/>\n  };\n\n  const MenuList = (props: any) => {\n    return (\n      <>\n        <div>\n          <span className={styles.instrumentsCheckbox}>\n          <input type=\"checkbox\" checked={freeInstrumentsOnly} onChange={handleFreeInstruments}/>\n          Вибирати серед інструментів без аудиторій\n        </span>\n        </div>\n        <components.MenuList {...props}>{props.children}</components.MenuList>\n      </>\n    );\n  };\n\n  return <div className={styles.wrapper}>\n    <form className={styles.container} onSubmit={handleSubmit(onSubmit)} id='createClassroom'>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>Назва\n        <input\n          placeholder=\"Не більше 5 символів\"\n          maxLength={5}\n          onChange={(e) => setValue('name', e.target.value)}\n          defaultValue={item ? item.name : undefined}\n          {...register(\"name\", {required: true})}\n          ref={ref => firstFieldRef.current = ref}\n        />\n      </label>\n      <label>Опис\n        <input\n          maxLength={100}\n          onChange={(e) => setValue('description', e.target.value)}\n          placeholder=\"Не більше 100 символів\"\n          {...register(\"description\")}\n          defaultValue={item ? item.description as string : undefined}\n        />\n      </label>\n      {departmentsData &&\n      <label>Кафедра\n          <Select\n              value={selectedDepartment}\n              onChange={handleSelectDepartment}\n              options={departments}\n            //@ts-ignore\n              styles={selectLightStyles}\n              menuPortalTarget={document.body}\n              isClearable\n              isSearchable\n              placeholder='Виберіть кафедру'\n              noOptionsMessage={() => 'Кафедри відсутні'}\n          />\n      </label>}\n      <label>Спеціалізована\n        <input {...register(\"special\")} type=\"checkbox\"\n               defaultChecked={item ? Boolean(item.special) : false}/>\n      </label>\n      <label>Флігель\n        <input {...register(\"isWing\")} type=\"checkbox\"\n               defaultChecked={item ? item.isWing : false}/>\n      </label>\n      <label>Оперна студія\n        <input {...register(\"isOperaStudio\")} type=\"checkbox\"\n               defaultChecked={item ? item.isOperaStudio : false}/>\n      </label>\n      <label>Поверх\n        <input {...register(\"floor\")} type=\"number\" min={1} max={4}\n               defaultValue={item ? item.floor as number : 1}/>\n      </label>\n      <label>Прихована\n        <input {...register(\"isHidden\")} type=\"checkbox\"\n               defaultChecked={item ? item.isHidden : false}/>\n      </label>\n      <label>Доступна тільки для вибраних кафедр\n        <input {...register(\"allowedForSelectedDepartments\")}\n               type=\"checkbox\" checked={allowedForSelectedDepartments}\n               onChange={() => setAllowedForSelectedDepartments(prevState => !prevState)}\n        />\n      </label>\n      {allowedForSelectedDepartments && (\n        <label>Кафедри, яким аудиторія буде доступна\n          <Select options={departments}\n            //@ts-ignore\n                  styles={selectLightStyles}\n                  menuPortalTarget={document.body}\n                  value={selectedAllowedDepartments}\n                  onChange={handleSelectAllowedDepartment}\n                  components={{DropdownIndicator, MenuList}}\n                  isSearchable\n                  isClearable={false}\n                  isMulti\n                  placeholder='Додати кафедру'\n                  noOptionsMessage={() => 'Кафедри відсутні'}\n          />\n        </label>\n      )}\n      <label>Інструменти\n        <Select options={instruments}\n          //@ts-ignore\n                styles={selectLightStyles}\n                menuPortalTarget={document.body}\n                value={selectedInstruments}\n                onChange={handleSelectInstrument}\n                components={{DropdownIndicator, MenuList}}\n                isSearchable\n                isClearable={false}\n                isMulti\n                placeholder='Додати інструмент'\n                noOptionsMessage={() => 'Інструменти відсутні'}\n        />\n      </label>\n      <label>Колір\n        <Select options={colors}\n          //@ts-ignore\n                styles={selectLightStyles}\n                menuPortalTarget={document.body}\n                value={selectedColor}\n                onChange={handleSelectColor}\n                placeholder='Виберіть колір'\n        />\n      </label>\n    </form>\n  </div>\n};\n\nexport default CreateClassroomPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/classrooms/browseClassroomPopupBody/BrowseClassroomPopupBody.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/faculties/createFacultyPopupBody/CreateFacultyPopupBody.tsx",["654"],"import React from 'react';\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {useForm} from \"react-hook-form\";\nimport {FormData} from \"../../instruments/models\";\nimport {Faculty} from \"../../../../models/models\";\nimport {CREATE_FACULTY} from \"../../../../api/operations/mutations/createFaculty\";\nimport {UPDATE_FACULTY} from \"../../../../api/operations/mutations/updateFaculty\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Faculty | null\n}\n\nconst CreateFacultyPopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n                                                          item}) => {\n  const [createFaculty] = useMutation(CREATE_FACULTY);\n  const [updateFaculty] = useMutation(UPDATE_FACULTY);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateFaculty({\n          variables: {\n            data: {\n              name: {set: e.name},\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createFaculty({\n          variables: {\n            data: {\n              name: e.name,\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Факультет створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <form id='createFaculty' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n    </form>\n  );\n}\n\nexport default CreateFacultyPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/degrees/createDegreePopupBody/CreateDegreePopupBody.tsx",["655"],"import React from 'react';\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {useForm} from \"react-hook-form\";\nimport {Degree} from \"../../../../models/models\";\nimport {CREATE_DEGREE} from \"../../../../api/operations/mutations/createDegree\";\nimport {UPDATE_DEGREE} from \"../../../../api/operations/mutations/updateDegree\";\n\ninterface PropTypes {\n  setUpdateList: (value: any) => void;\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Degree | null;\n  handleErrorDetails?: (error: any) => void;\n}\n\nconst CreateDegreePopupBody: React.FC<PropTypes> = ({setUpdateList, dispatchNotification, dispatch,\n    handleErrorDetails, item}) => {\n  const [createDegree] = useMutation(CREATE_DEGREE);\n  const [updateDegree] = useMutation(UPDATE_DEGREE);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<any>();\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateDegree({\n          variables: {\n            data: {\n              name: {set: e.name},\n              startMonth: {set: Number(e.startMonth)},\n              startDay: {set: Number(e.startDay)},\n              durationMonths: {set: Number(e.durationMonths)},\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createDegree({\n          variables: {\n            data: {\n              name: e.name,\n              startMonth: Number(e.startMonth),\n              startDay: Number(e.startDay),\n              durationMonths: Number(e.durationMonths),\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Учбовий ступінь створено.`,\n          type: \"ok\",\n        });\n        setUpdateList((prevState: any) => !prevState);\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message:  <><span>Щось пішло не так.</span><br/>\n            <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline' }}\n                  onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  return (\n    <form id='createDegree' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Місяць початку\n        <input className={mainStyles.input} type=\"number\" min={1} max={12}\n               defaultValue={item ? item?.startMonth : 9}\n               {...register(\"startMonth\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        День початку\n        <input className={mainStyles.input} type=\"number\" min={1} max={31}\n               defaultValue={item ? item?.startDay : 1}\n               {...register(\"startDay\", {required: true})}/>\n      </label>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Триваліть (міс.)\n        <input className={mainStyles.input} type=\"number\" min={1}\n               defaultValue={item ? item?.durationMonths : 12}\n               {...register(\"durationMonths\", {required: true})}/>\n      </label>\n    </form>\n  );\n}\n\nexport default CreateDegreePopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/browseUserPopupBody/BrowseUserPopupBody.tsx",["656"],"import React from 'react';\nimport styles from \"./browseUserPopupBody.module.css\";\nimport {\n  EmploymentTypes,\n  EmploymentTypesUa,\n  StudentAccountStatus,\n  User,\n  UserTypes,\n  UserTypesUa\n} from \"../../../../models/models\";\nimport {fullName} from \"../../../../helpers/helpers\";\nimport Title from \"../../../../components/title/Title\";\nimport moment from \"moment\";\n\ninterface PropTypes {\n  user: User;\n};\n\nconst BrowseUserPopupBody: React.FC<PropTypes> = ({user}) => {\n  return (\n    <div>\n      {user.studentInfo?.accountStatus === StudentAccountStatus.UNVERIFIED && <div className={styles.verification}>\n          <h2>Користувача не верифіковано!</h2>\n          <p>Перед верифікацією користувача звірте правильність даних з офіційном документом.</p>\n      </div>}\n      <div className={styles.list}>\n        {!!user.queueInfo.sanctionedUntil && (\n          <p className={styles.sanctioned}>\n            Під санкціями до {moment(user.queueInfo.sanctionedUntil).format('DD-MM-YYYY HH:mm')}\n          </p>\n        )}\n        <div><span>ID: </span><span>{user.id}</span></div>\n        <div><span>П.І.Б.: </span><span>{fullName(user)}</span></div>\n        <div><span>Статус: </span><span>{UserTypesUa[user.type as UserTypes]}</span></div>\n        {user.expireDate && (\n          <div>\n            <span>\n              Термін дії аккаунту:\n            </span>\n            <span>\n              {moment(user.expireDate).format('DD.MM.YYYY')}\n            </span>\n          </div>\n        )}\n        {user.studentInfo && <div><span>Ступінь: </span><span>{user.studentInfo.degree.name}</span></div>}\n        {user.employeeInfo && <div><span>Зайнятість: </span>\n            <span>{EmploymentTypesUa[user.employeeInfo.employmentType as EmploymentTypes]}</span></div>}\n        <div><span>Кафедра: </span><span>{user.department ? user.department.name : 'Немає'}</span></div>\n        <div><span>E-mail: </span><span>{user.email}</span></div>\n        <div><span>Тел.: </span><span>{user.phoneNumber}</span></div>\n        {user?.extraPhoneNumbers && <div><span>Інші тел.: </span>\n            <ul>{JSON.parse(user.extraPhoneNumbers).map((item: string) => <li>{item}</li>)}</ul>\n        </div>}\n      </div>\n    </div>\n  );\n}\n\nexport default BrowseUserPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/departments/createDepartmentPopupBody/CreateDepartmentPopupBody.tsx",["657","658"],"import React, {useEffect, useState} from 'react';\nimport Select from \"react-select\";\nimport useFaculties from \"../../../../hooks/useFaculties\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport mainStyles from '../../../../styles/main.module.css';\nimport {useMutation} from \"@apollo/client\";\nimport {CREATE_DEPARTMENT} from \"../../../../api/operations/mutations/createDepartment\";\nimport {useForm} from \"react-hook-form\";\nimport {FormData} from \"../../instruments/models\";\nimport {UPDATE_DEPARTMENT} from \"../../../../api/operations/mutations/updateDepartment\";\nimport {Department, Faculty} from \"../../../../models/models\";\n\ninterface PropTypes {\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  item: Department | null\n}\n\nconst CreateDepartmentPopupBody: React.FC<PropTypes> = ({dispatchNotification, dispatch,\n        item}) => {\n  const faculties = useFaculties();\n  const [createDepartment] = useMutation(CREATE_DEPARTMENT);\n  const [updateDepartment] = useMutation(UPDATE_DEPARTMENT);\n  const [selectValue, setSelectValue] = useState({value: -1, label: ''});\n  const [options, setOptions] = useState<any>(selectValue);\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n\n  useEffect(() => {\n    const data = faculties.map(item => ({value: item.id, label: item.name}));\n    if (item) {\n      const faculty: Faculty | undefined = faculties.find(f => f.id === item?.faculty.id);\n\n      setSelectValue({value: faculty?.id as number, label: faculty?.name as string});\n    } else {\n      setSelectValue(data[0]);\n    }\n    setOptions(data);\n  }, [faculties]);\n\n  const onSubmit = async (e: any) => {\n    if (item) {\n      try {\n        await updateDepartment({\n          variables: {\n            data: {\n              name: {set: e.name},\n              faculty: item ? {connect: {id: selectValue.value}} : undefined\n            },\n            where: {\n              id: Number(item?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані збережено.`,\n          type: \"ok\",\n        });\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    } else {\n      try {\n        await createDepartment({\n          variables: {\n            data: {\n              name: e.name,\n              faculty: {\n                connect: {id: selectValue.value}\n              }\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Кафедру створено.`,\n          type: \"ok\",\n        });\n        dispatch && dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      } catch (e) {\n        console.log(e)\n        dispatchNotification({\n          header: \"Помилка!\",\n          message: `Щось пішло не так.`,\n          type: \"alert\",\n        });\n      }\n    }\n  };\n\n  const handleSelect = (e: any) => {\n    setSelectValue(e);\n  };\n\n  return (\n    <form id='createDepartment' onSubmit={handleSubmit(onSubmit)}>\n      {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n      <label>\n        Назва\n        <input className={mainStyles.input} type=\"text\"\n               defaultValue={item ? item?.name : undefined}\n               {...register(\"name\", {required: true})}/>\n      </label>\n      <label>\n        Факультет\n        {/*@ts-ignore*/}\n        <Select options={options} styles={selectLightStyles} menuPortalTarget={document.body}\n                placeholder='Виберіть факультет' defaultValue={selectValue} value={selectValue}\n                onChange={handleSelect}\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default CreateDepartmentPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/createInstrumentPopupBody/CreateInstrumentPopupBody.tsx",["659","660","661","662"],"import React, {useEffect, useState} from 'react';\nimport {useMutation} from \"@apollo/client\";\nimport {CREATE_INSTRUMENT} from \"../../../../api/operations/mutations/createInstrument\";\nimport {UPDATE_INSTRUMENT} from \"../../../../api/operations/mutations/updateInstrument\";\nimport {useForm} from \"react-hook-form\";\nimport styles from './createInstrumentPopupBody.module.css';\nimport mainStyles from '../../../../styles/main.module.css';\nimport useClassrooms from \"../../../../hooks/useClassrooms\";\nimport {FormData} from '../models';\nimport {SelectData} from '../models';\nimport Select from \"react-select\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport {ClassroomType, InstrumentType} from \"../../../../models/models\";\n\nconst instrumentTypes = [\n  {value: 'UpRightPiano', label: 'Фортепіано'},\n  {value: 'GrandPiano', label: 'Рояль'}\n];\n\ninterface PropTypes {\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  handleErrorDetails?: (error: any) => void;\n  addInstrument: (item: InstrumentType) => void;\n  instrument: InstrumentType | null;\n  isEditMode: boolean;\n}\n\nconst CreateInstrumentPopupBody: React.FC<PropTypes> = ({\n                                                          dispatchNotification, isEditMode,\n                                                          dispatch,\n                                                          addInstrument, instrument,\n                                                          handleErrorDetails\n                                                        }) => {\n  const {register, handleSubmit, watch, formState: {errors}} = useForm<FormData>();\n  const [classrooms, subscribeToMore]: [ClassroomType[], any] = useClassrooms();\n  const [classroomsData, setClassroomsData] = useState<SelectData[]>([{\n    value: instrument?.classroom ? String(instrument?.classroom?.id) : '',\n    label: instrument?.classroom ? String(instrument?.classroom?.name) : ''\n  }]);\n  const [createInstrument] = useMutation(CREATE_INSTRUMENT);\n  const [updateInstrument] = useMutation(UPDATE_INSTRUMENT);\n  const [classroomValue, setClassroomValue] = useState(classroomsData[0]);\n  const [selectedInstrumentType, setSelectedInstrumentType] = useState(instrumentTypes[0]);\n\n  useEffect(() => {\n    const data = classrooms.map(item => ({value: item.id, label: item.name}));\n    const emptyItem = ({value: '', label: 'Немає'});\n    setClassroomsData([emptyItem, ...data as unknown as SelectData[]]);\n  }, [classrooms]);\n\n  useEffect(() => {\n    if (isEditMode) {\n      const item = classroomsData.find(item => Number(item.value) === instrument?.classroom?.id);\n      if (item) setClassroomValue(item as SelectData);\n    } else {\n      setClassroomValue(classroomsData[0]);\n    }\n  }, [classroomsData, instrument]);\n\n  const handleSelect = (e: any) => {\n    setClassroomValue(e);\n  };\n\n  const onSubmit = async (data: FormData) => {\n    const {name, type, persNumber, rate} = data;\n    const classroomId = classroomValue?.value;\n    const classroomName = classroomValue ? classroomValue.label : instrument?.classroom.name;\n\n    try {\n      if (isEditMode) {\n        await updateInstrument({\n          variables: {\n            data: {\n              name: {set: name},\n              type: {set: selectedInstrumentType.value},\n              persNumber: {set: persNumber},\n              rate: {set: Number(rate)},\n              classroom: classroomId ? {connect: {id: classroomId}} : undefined\n            },\n            where: {\n              id: Number(instrument?.id)\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Дані змінені.`,\n          type: \"ok\",\n        });\n      } else {\n        const result = await createInstrument({\n          variables: {\n            data: {\n              name, type: selectedInstrumentType.value, persNumber, rate: Number(rate),\n              classroom: classroomId ? {connect: {id: classroomId}} : undefined\n            }\n          }\n        });\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Інструмент ${name}  створений.`,\n          type: \"ok\",\n        });\n        addInstrument({\n          ...result.data.createOneInstrument,\n          classroom: {name: classroomId ? classroomName : ''}\n        });\n      }\n\n      dispatch && dispatch({\n        type: \"POP_POPUP_WINDOW\",\n      });\n    } catch (e) {\n      console.log(e)\n      dispatchNotification({\n        header: \"Помилка!\",\n        message: <><span>Щось пішло не так.</span><br/>\n          <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline'}}\n                onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n        type: \"alert\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)} className={styles.container} id='createInstrument'>\n        {errors.name && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>\n          Назва\n          <input className={mainStyles.input} type='text' placeholder='Наприклад: \"Україна\"'\n                 defaultValue={isEditMode ? instrument?.name : undefined}\n                 {...register(\"name\", {required: true})}/>\n        </label>\n        {errors.type && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>Тип\n          <Select\n            value={selectedInstrumentType}\n            onChange={(e) => setSelectedInstrumentType(e)}\n            options={instrumentTypes}\n            //@ts-ignore\n            styles={selectLightStyles}\n            menuPortalTarget={document.body}\n            placeholder='Виберіть тип інструменту'\n          />\n        </label>\n        {errors.persNumber && <span className={mainStyles.required}>Обов'язкове поле</span>}\n        <label>\n          Інв. номер\n          <input className={mainStyles.input}\n                 type='text' placeholder='Наприклад: \"3242234\"'\n                 defaultValue={isEditMode ? instrument?.persNumber : undefined}\n                 {...register(\"persNumber\", {required: true})}/>\n        </label>\n        <label>\n          Рейтинг\n          <input className={mainStyles.input}\n                 defaultValue={isEditMode && instrument ? instrument.rate : 1} step='.1'\n                 type='number' min='1' max='10' placeholder='Рейтинг' {...register(\"rate\")}/>\n        </label>\n        <label>\n          Аудиторія\n          <Select options={classroomsData} styles={selectLightStyles} menuPortalTarget={document.body}\n                  placeholder='Аудиторія' value={classroomValue} onChange={handleSelect}/>\n        </label>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateInstrumentPopupBody;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/instruments/browseInstrumentPopupBody/BrowseInstrumentPopupBody.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/login/Login.tsx",["663"],"import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./login.module.css\";\r\nimport Logo from \"../../components/logo/Logo\";\r\nimport CustomInput from \"../../components/customInput/CustomInput\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {useNotification} from \"../../components/notification/NotificationProvider\";\r\nimport {useMutation} from \"@apollo/client\";\r\nimport {LOGIN} from \"../../api/operations/mutations/login\";\r\nimport {ErrorCodes, ErrorCodesUa, UserTypes} from \"../../models/models\";\r\nimport {isLoggedVar} from \"../../api/client\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {setAccessRights} from \"../../helpers/helpers\";\r\n\r\nconst Login = () => {\r\n  const dispatchNotification = useNotification();\r\n  const [login] = useMutation(LOGIN);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [loginValue, setLoginValue] = useState('');\r\n  const [passwordValue, setPasswordValue] = useState('');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (loginValue.length && passwordValue.length) {\r\n      setDisabled(false);\r\n    } else {\r\n      setDisabled(true);\r\n    }\r\n  }, [loginValue, passwordValue]);\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    let result: any;\r\n\r\n    if (e.target.login.value && e.target.password.value) {\r\n      try {\r\n        result = await login({\r\n          variables: {\r\n            input: {\r\n              email: e.target.login.value,\r\n              password: e.target.password.value\r\n            }\r\n          }\r\n        });\r\n        if (result?.data.login.userErrors?.length) {\r\n          localStorage.removeItem('token')\r\n          dispatchNotification({\r\n            header: 'Помилка!',\r\n            message: ErrorCodesUa[result?.data.login.userErrors[0].code as ErrorCodes],\r\n            type: 'alert'\r\n          });\r\n        } else {\r\n          const user = result?.data.login.user;\r\n          const token = result?.data.login.token;\r\n\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n          localStorage.setItem('token', token);\r\n          dispatchNotification({\r\n            header: 'Вітаємо!',\r\n            message: 'Авторизація успішна!',\r\n            type: 'ok'\r\n          });\r\n          isLoggedVar(true);\r\n          setAccessRights(user);\r\n          if (user.type === UserTypes.ADMIN || user.type === UserTypes.DISPATCHER) {\r\n            history.push('/classrooms');\r\n          }\r\n          else {\r\n            history.push('/dashboard')\r\n          }\r\n        }\r\n      } catch (e: any) {\r\n        dispatchNotification({\r\n          header: 'Помилка!',\r\n          message: e.message,\r\n          type: 'alert'\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.name === 'login') {\r\n      setLoginValue(e.target.value);\r\n    } else {\r\n      setPasswordValue(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.loginContainer}>\r\n        <Logo\r\n          title=\"Auditorium\"\r\n          description=\"Система управління видачею аудиторій\"\r\n        />\r\n        <div>\r\n          <p className={styles.loginTip}>\r\n            Увійдіть в систему або зареєструйтесь\r\n          </p>\r\n          <form className={styles.loginForm} onSubmit={handleSubmit} id=\"loginForm\">\r\n            <CustomInput\r\n              label=\"Логін:\"\r\n              name=\"login\"\r\n              id=\"login\"\r\n              placeholder=\"Наприклад: aud1@knmau.ua\"\r\n              value={loginValue}\r\n              onChange={handleChange}\r\n            />\r\n            <CustomInput\r\n              label=\"Пароль:\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              withEyeSwitcher\r\n              value={passwordValue}\r\n              onChange={handleChange}\r\n            />\r\n            <Button type={\"submit\"} disabled={disabled} form='loginForm' color=\"blue\"\r\n                    style={{marginTop: 32, height: 42}}\r\n            >\r\n              Увійти\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <footer className={styles.loginFooter}>\r\n          <a href=\"#\">\r\n            Національна Музична Академія України ім. П. і. Чайковського\r\n          </a>\r\n          <p>\r\n            Auditorium &copy; 2021 | v 1.4.2 Ivan Piatovolenko & Vladislav\r\n            Nazarenko\r\n          </p>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/customInput/CustomInput.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/login.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useMe.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/mail.js",[],["664","665"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/conjugate.ts",["666"],"import {mailNames} from \"../assets/mail\";\nimport {femaleNames} from \"../assets/femail\";\n\nexport const conjugate = (name: string) => {\n    const lowerName = name.toLowerCase();\n    const mail = mailNames;\n    const female = femaleNames;\n    const vowels = ['а', 'о', 'у', 'и', 'і', 'є', 'е', 'ї', 'я', 'ю'];\n    const hissings = ['щ', 'ж', 'ч'];\n    const GGKH = ['г', 'ґ', 'к', 'х'];\n\n    const isLastYa = name.charAt(name.length-1) === 'я';\n    const isLastA = name.charAt(name.length-1) === 'а';\n    const isLastYe = name.charAt(name.length-1) === 'й';\n    const isLastSoftSign = name.charAt(name.length-1) === 'ь';\n    const isVowelBeforeLast = vowels.includes(lowerName.charAt(lowerName.length-2));\n    const isLastO = name.charAt(name.length-1) === 'о';\n    const isLastGGKH = GGKH.includes(lowerName.charAt(lowerName.length-1));\n    const isApostropheBeforeLast = lowerName.charAt(lowerName.length-2) === \"'\"\n      || lowerName.charAt(lowerName.length-2) === \"`\";\n    let sex = undefined;\n\n    if (mail.find(name => name.toLowerCase() === lowerName)) {\n        sex = 'MAIL';\n    }\n    if (female.find(name => name.toLowerCase() === lowerName)) {\n        sex = 'FEMALE';\n    }\n\n    if (sex === 'MAIL' || sex === 'FEMALE') {\n        if (lowerName === 'олег') return 'Олеже';\n\n        if (isLastYa && (isVowelBeforeLast || isApostropheBeforeLast)) {\n                return name.slice(0, lowerName.length - 2) + 'іє';\n        }\n        if (isLastYa && (!isVowelBeforeLast || !isApostropheBeforeLast)) {\n            return name.slice(0, lowerName.length - 1) + 'е';\n        }\n\n        if (sex === 'MAIL' && isLastGGKH) {\n            return name.slice(0, lowerName.length - 1) + 'у';\n        }\n        if (sex === 'MAIL' && (isLastYe || isLastSoftSign) && (!isVowelBeforeLast && !isApostropheBeforeLast)) {\n            return name.slice(0, lowerName.length - 1) + 'ю';\n        }\n\n        if (sex === 'MAIL' && isLastYe && (isVowelBeforeLast || isApostropheBeforeLast)) {\n            return name.slice(0, lowerName.length - 1) + 'є';\n        }\n\n        if (sex === 'MAIL' && !isLastYe && !isLastGGKH && !isLastYa && !isLastA) {\n            return name + 'e';\n        }\n        if (sex === 'FEMALE' && isLastA) {\n            return name.slice(0, name.length-1) + 'o';\n        }\n        if (sex === 'MAIL' && isLastO) {\n            return name.slice(0, name.length - 1) + 'e';\n        }\n    } else {\n        return name;\n    }\n}",["667","668"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/assets/femail.js",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signUp.ts",[],["669","670"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/verifyUser.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/hooks/useLocal.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/helpers/helpers.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/dashboard/Dashboard.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/queueRecords.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/generalQueue.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/localize/localize.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/pendingClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/freeClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/queue/Queue.tsx",["671"],"import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./queue.module.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  ClassroomType,\r\n  DisabledState,\r\n  EnqueuedBy,\r\n  QueueType,\r\n  StudentAccountStatus,\r\n  User,\r\n  UserTypes\r\n} from \"../../models/models\";\r\nimport {fullName} from \"../../helpers/helpers\";\r\nimport Button from \"../../components/button/Button\";\r\nimport {client} from \"../../api/client\";\r\nimport {GET_USERS_FOR_QUEUE} from \"../../api/operations/queries/usersQueue\";\r\nimport {REMOVE_USER_FROM_QUEUE} from \"../../api/operations/mutations/removeUserFromQueue\";\r\nimport {useNotification} from \"../../components/notification/NotificationProvider\";\r\nimport useClassrooms from \"../../hooks/useClassrooms\";\r\nimport {ADD_USER_TO_QUEUE} from \"../../api/operations/mutations/addUserToQueue\";\r\nimport moment from \"moment\";\r\n\r\nconst Queue = () => {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [classrooms, subscribeToMore]: [ClassroomType[], any] = useClassrooms();\r\n  const [withInstrument, setWithInstrument] = useState(false);\r\n  const [chosenUser, setChosenUser] = useState({label: '', value: -1, queueLength: -1});\r\n  const dispatchNotification = useNotification();\r\n\r\n  useEffect(() => {\r\n    client.query({\r\n      query: GET_USERS_FOR_QUEUE\r\n    }).then(data => {\r\n      setUsers(data.data.users);\r\n    });\r\n  }, []);\r\n\r\n  const handleChose = (e: any) => {\r\n    const chosenUser = (users as unknown as Array<User>)?.find(user => user.id === e.value);\r\n\r\n    setChosenUser({\r\n      label: chosenUser?.id as number + \": \" + fullName(chosenUser),\r\n      value: chosenUser?.id as number,\r\n      queueLength: chosenUser?.queue.length as number\r\n    });\r\n  };\r\n\r\n  const removeFromLine = async () => {\r\n    setDisabled(true);\r\n    try {\r\n      await client.mutate({\r\n        mutation: REMOVE_USER_FROM_QUEUE,\r\n        variables: {\r\n          input: {\r\n            userId: chosenUser.value\r\n          }\r\n        }\r\n      });\r\n      dispatchNotification({\r\n        header: \"Успішно!\",\r\n        message: `Користувача видалено з черги.`,\r\n        type: \"ok\",\r\n      });\r\n      client.query({\r\n        query: GET_USERS_FOR_QUEUE,\r\n        fetchPolicy: 'network-only'\r\n      }).then(data => {\r\n        setUsers(data.data.users);\r\n        setChosenUser(prevState => ({...prevState, queueLength: 0}));\r\n        setDisabled(false);\r\n      });\r\n    } catch (e) {\r\n      dispatchNotification({\r\n        header: \"Помилка\",\r\n        message: `Користувача не видалено з черги.`,\r\n        type: \"alert\",\r\n      });\r\n      setDisabled(false);\r\n    }\r\n  };\r\n\r\n  const getInLine = async () => {\r\n    setDisabled(true);\r\n    const data = classrooms\r\n      .filter(classroom => !classroom.isHidden && classroom.disabled.state === DisabledState.NOT_DISABLED)\r\n      .filter(classroom => withInstrument ? classroom.instruments.length : true)\r\n      .map(({id}) => ({\r\n        classroomId: id,\r\n        type: QueueType.MINIMAL,\r\n      }));\r\n\r\n    try {\r\n      const result = await client.mutate({\r\n        mutation: ADD_USER_TO_QUEUE, variables: {\r\n          input: {\r\n            userId: chosenUser.value,\r\n            data,\r\n            enqueuedBy: EnqueuedBy.DISPATCHER\r\n          }\r\n        }\r\n      });\r\n      if (result.data.addUserToQueue.userErrors.length) {\r\n        result.data.addUserToQueue.userErrors.forEach(({message}: any) => {\r\n          dispatchNotification({\r\n            header: \"Помилка\",\r\n            message,\r\n            type: \"alert\",\r\n          });\r\n        })\r\n      } else {\r\n        dispatchNotification({\r\n          header: \"Успішно!\",\r\n          message: `Користувача записано в чергу.`,\r\n          type: \"ok\",\r\n        });\r\n      }\r\n      client.query({\r\n        query: GET_USERS_FOR_QUEUE,\r\n        fetchPolicy: 'network-only'\r\n      }).then(data => {\r\n        setUsers(data.data.users);\r\n        setChosenUser(prevState => ({...prevState, queueLength: 1}));\r\n        setDisabled(false);\r\n      });\r\n    } catch (e) {\r\n      dispatchNotification({\r\n        header: \"Помилка\",\r\n        message: `Користувача не записано в чергу.`,\r\n        type: \"alert\",\r\n      });\r\n      setDisabled(false);\r\n    }\r\n  };\r\n\r\n  const sanctions = chosenUser.value !== -1 && users\r\n    .find(({id}) => chosenUser.value === id).queueInfo.sanctionedUntil;\r\n\r\n  const renderSanction = () => {\r\n    if (sanctions) return (\r\n      <>\r\n        <p className={styles.sanctions}>\r\n          {`Неможливо поставити в чергу. Користувач знаходиться під санкціями до ${\r\n            moment(sanctions).format('DD-MM-YYYY HH:mm')}`}\r\n        </p>\r\n      </>\r\n    );\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <h1>Черга</h1>\r\n      </Header>\r\n      <div className={styles.wrapper}>\r\n        <form\r\n          id=\"userQueueForm\"\r\n          className={styles.userSearch}\r\n        >\r\n          <p>Виберіть студента, щоб додати або видалити з черги:</p>\r\n          <Select\r\n            placeholder=\"Користувачі\"\r\n            options={users.filter(user => {\r\n              return !user.occupiedClassrooms.length\r\n                && (user.type === UserTypes.POST_GRADUATE || user.type === UserTypes.STUDENT) &&\r\n                user?.studentInfo?.accountStatus === StudentAccountStatus.ACTIVE\r\n            }).map((user: User) => ({\r\n                label: user.id + \": \" + fullName(user),\r\n                value: user.id as number,\r\n                queueLength: user?.queue.length as number\r\n              })\r\n            )}\r\n            value={chosenUser}\r\n            styles={{menuPortal: base => ({...base, zIndex: 9999})}}\r\n            menuPortalTarget={document.body}\r\n            onChange={handleChose}\r\n            isDisabled={disabled}\r\n          />\r\n          {chosenUser.queueLength === 0 && (\r\n            <label htmlFor=\"instrumentCheckbox\" className={styles.checkboxInstrument}>\r\n              <input type='checkbox' name='instrument' id='instrumentCheckbox' checked={withInstrument}\r\n                     onChange={(e) => setWithInstrument(e.target.checked)}\r\n                     disabled={disabled}\r\n              />\r\n              З фортепіано\r\n            </label>)\r\n          }\r\n          {chosenUser.queueLength !== -1 && (\r\n            <Button onClick={chosenUser.queueLength > 0 ? removeFromLine : getInLine}\r\n                    disabled={disabled || (chosenUser.queueLength === 0 && !!sanctions)}\r\n            >\r\n              {chosenUser.queueLength > 0 ? 'Видалити з черги' : 'Поставити в чергу'}\r\n            </Button>\r\n          )}\r\n        </form>\r\n        {renderSanction()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Queue;\r\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/usersQueue.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/addUserToQueue.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/removeUserFromQueue.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/DisableClassroom.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/disableClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/enableClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/disabledClassrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/classroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/ConfirmFooter.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/classrooms.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/caviar/CaviarItem.tsx",["672"],"import React, {CSSProperties, useEffect, useRef, useState} from 'react';\nimport {ClassroomType, DisabledState, OccupiedState, QueuePolicyTypes, UserTypes} from \"../../models/models\";\nimport Tag from \"../tag/Tag\";\nimport ClassroomInfo from \"../ classroomInfo/ClassroomInfo\";\nimport Footer from \"../footer/Footer\";\nimport {usePopupWindow} from \"../popupWindow/PopupWindowProvider\";\nimport moment from \"moment\";\n\ntype PropTypes = {\n  classroom: ClassroomType;\n  dispatchNotification: (value: string) => void;\n}\n\nconst CaviarItem: React.FC<PropTypes> = ({classroom, dispatchNotification}) => {\n  const dispatchPopupWindow = usePopupWindow();\n  const [isOverdue, setIsOverDue] = useState(false);\n  let timeout = useRef(null);\n\n  useEffect(() => {\n    return () => clearTimeout(timeout.current);\n  }, []);\n\n  useEffect(() => {\n    if (classroom.occupied.state === OccupiedState.RESERVED) {\n      const untilString: string = classroom.occupied.until as unknown as string;\n      const diffInMs = moment(untilString).diff(moment());\n\n      if (diffInMs >= 0 && !timeout.current) {\n        timeout.current = setTimeout(() => setIsOverDue(true), diffInMs);\n      } else if (diffInMs <= 0) {\n        setIsOverDue(true);\n      } else {\n        setIsOverDue(false);\n      }\n    } else {\n      setIsOverDue(false);\n    }\n    if (classroom.occupied.state !== OccupiedState.RESERVED && timeout.current) {\n      clearTimeout(timeout.current);\n    }\n  }, [classroom]);\n\n  const calcStyle = (classroom: ClassroomType) => {\n    const resStyles: CSSProperties = {};\n    if (classroom.isHidden) resStyles.opacity = .5;\n    if (classroom.disabled.state === DisabledState.DISABLED\n      || (classroom.queueInfo.queuePolicy.policy === QueuePolicyTypes.SELECTED_DEPARTMENTS\n        && !classroom.queueInfo.queuePolicy.queueAllowedDepartments.length)) {\n      resStyles.background = '#b1b1b1';\n    } else {\n      classroom.occupied.state === OccupiedState.FREE ?\n        resStyles.background = '#76e286' : resStyles.background = '#fff';\n      if (isOverdue) {\n        resStyles.background = '#f91354';\n        resStyles.color = '#fff';\n      }\n    }\n    return resStyles\n  };\n\n  function handleClick(classroom: ClassroomType) {\n    const {name, occupied, id, disabled} = classroom;\n    dispatchPopupWindow({\n      header: (\n        <>\n          <h1>{`Аудиторія ${classroom.name}`}</h1>\n          {classroom.isWing && <Tag body=\"Флігель\"/>}\n          {classroom.isOperaStudio && <Tag body=\"Оперна студія\"/>}\n        </>\n      ),\n      body: (\n        //@ts-ignore\n        <ClassroomInfo\n          dispatchNotification={dispatchNotification}\n          classroom={classroom}\n          dispatchPopupWindow={dispatchPopupWindow}\n        />\n      ),\n      footer: <Footer\n        classroomName={name}\n        classroomId={id}\n        disabled={disabled}\n        occupied={occupied}\n        dispatchNotification={dispatchNotification}\n        dispatchPopupWindow={dispatchPopupWindow}\n        isOverdue={isOverdue}\n      />,\n    });\n  }\n\n  return (\n    <li\n      onClick={() => handleClick(classroom)}\n      style={calcStyle(classroom)}\n    >\n      {classroom.name}\n    </li>\n  );\n}\n\nexport default CaviarItem;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/giveOutClassroomKey.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/editUserPopupBody/EditUserPopupBody.tsx",["673"],"import React, {useEffect, useState} from 'react';\nimport {\n  Department,\n  EmployeeAccountStatus,\n  EmploymentTypes,\n  EmploymentTypesUa,\n  User,\n  UserTypes,\n  UserTypesUa\n} from \"../../../../models/models\";\nimport styles from './../../classrooms/createClassroomPopupBody/createClassroomPopupBody.module.css';\nimport {client} from \"../../../../api/client\";\nimport {SIGNUP_EMPLOYEE} from \"../../../../api/operations/mutations/signupEmployee\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport {selectLightStyles} from \"../../../../styles/selectStyles\";\nimport Button from \"../../../../components/button/Button\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_DEPARTMENTS} from \"../../../../api/operations/queries/departments\";\nimport {GET_USERS} from \"../../../../api/operations/queries/users\";\n\ninterface PropTypes {\n  user: User;\n}\n\nconst userTypesData = [\n  {value: UserTypes.STAFF, label: UserTypesUa.STAFF},\n  {value: UserTypes.ILLUSTRATOR, label: UserTypesUa.ILLUSTRATOR},\n  {value: UserTypes.CONCERTMASTER, label: UserTypesUa.CONCERTMASTER},\n  {value: UserTypes.TEACHER, label: UserTypesUa.TEACHER},\n  {value: UserTypes.PIANO_TUNER, label: UserTypesUa.PIANO_TUNER},\n  {value: UserTypes.OTHER, label: UserTypesUa.OTHER},\n  {value: UserTypes.ADMIN, label: UserTypesUa.ADMIN},\n];\n\nconst employmentTypesData = [\n  {value: EmploymentTypes.FULL_TIME, label: EmploymentTypesUa.FULL_TIME},\n  {value: EmploymentTypes.PART_TIME, label: EmploymentTypesUa.PART_TIME},\n  {value: EmploymentTypes.HOURLY, label: EmploymentTypesUa.HOURLY},\n];\n\nconst EditUserPopupBody: React.FC<PropTypes> = ({\n                                                  user, dispatch, dispatchNotification,\n                                                  dispatchPopupWindow\n                                                }: any) => {\n  const {data, loading, error} = useQuery(GET_DEPARTMENTS);\n  const [departmentsData, setDepartmentsData] = useState([{value: -1, label: ''}]);\n  const [selectedDepartment, setSelectedDepartment] = useState(departmentsData[0]);\n  const [selectedUserType, setSelectedUserType] = useState(userTypesData[0]);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [patronymic, setPatronymic] = useState('');\n  const [withDateLimit, setWithDateLimit] = useState(true);\n  const [expireDate, setExpireDate] = useState('');\n  const [selectedEmploymentType, setSelectedEmploymentType] = useState(employmentTypesData[0]);\n\n  useEffect(() => {\n    if (!loading && !error) {\n      const mappedDepartments = data.departments.map((department: Department) => {\n        return ({value: department.id, label: department.name});\n      });\n      setDepartmentsData(mappedDepartments);\n      setSelectedDepartment(mappedDepartments[0]);\n    }\n  }, [data]);\n\n  const handleErrorDetails = (e: any) => {\n    dispatchPopupWindow({\n      header: <h1>{e.name}</h1>,\n      body: (\n        <>\n          <p>{e.message}</p>\n          <p>{e.extraInfo}</p>\n          <pre>{e.stack}</pre>\n        </>\n      ),\n      footer: ''\n    });\n  };\n\n  const handleSignUpEmployee = async (e: any) => {\n    e.preventDefault();\n    try {\n      const result = await client.mutate({\n        mutation: SIGNUP_EMPLOYEE,\n        variables: {\n          input: {\n            firstName,\n            patronymic,\n            lastName,\n            type: selectedUserType.value,\n            department: (\n              selectedUserType.value === UserTypes.TEACHER\n              || selectedUserType.value === UserTypes.CONCERTMASTER\n              || selectedUserType.value === UserTypes.ILLUSTRATOR\n            ) ? {\n              connect: {\n                id: selectedDepartment.value\n              }\n            } : undefined,\n            employeeInfo: {\n              create: {\n                employmentType: selectedEmploymentType.value,\n                accountStatus: EmployeeAccountStatus.ACTIVE\n              }\n            },\n            expireDate: !withDateLimit ? moment(expireDate).toISOString() : undefined\n          }\n        }\n      });\n      if (result.data.signupEmployee.userErrors?.length) {\n        result.data.signupEmployee.userErrors.forEach(({message}: any) => {\n          dispatchNotification({\n            header: \"Помилка\",\n            message,\n            type: \"alert\",\n          });\n        })\n      } else {\n        await client.query({\n          query: GET_USERS,\n          fetchPolicy: 'network-only'\n        })\n        dispatchNotification({\n          header: \"Успішно!\",\n          message: `Новий аккаунт співробітника створено.`,\n          type: \"ok\",\n        });\n        dispatch({\n          type: \"POP_POPUP_WINDOW\",\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      dispatchNotification({\n        header: \"Помилка!\",\n        message: <><span>Щось пішло не так.</span><br/>\n          <span style={{color: '#2b5dff', cursor: 'pointer', textDecoration: 'underline'}}\n                onClick={() => handleErrorDetails && handleErrorDetails(e)}>Деталі</span></>,\n        type: \"alert\",\n      });\n    }\n  };\n\n  return (\n    <div>\n      <div className={styles.wrapper}>\n        <form className={styles.container}>\n          <label>Прізвище\n            <input\n              placeholder=\"Прізвище\"\n              onChange={(e) => setLastName(e.target.value)}\n            />\n          </label>\n          <label>Ім'я\n            <input\n              placeholder=\"Ім'я\"\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n          </label>\n          <label>По-батькові\n            <input\n              placeholder=\"По-батькові\"\n              onChange={(e) => setPatronymic(e.target.value)}\n            />\n          </label>\n          <label>Тип аккаунту\n            <Select\n              value={selectedUserType}\n              onChange={e => setSelectedUserType(e)}\n              options={userTypesData}\n              //@ts-ignore\n              styles={selectLightStyles}\n              menuPortalTarget={document.body}\n              isSearchable\n              placeholder='Виберіть тип'\n            />\n          </label>\n          <label>Тип занятості\n            <Select\n              value={selectedEmploymentType}\n              onChange={e => setSelectedEmploymentType(e)}\n              options={employmentTypesData}\n              //@ts-ignore\n              styles={selectLightStyles}\n              menuPortalTarget={document.body}\n              isSearchable\n              placeholder='Виберіть тип зайнятість'\n            />\n          </label>\n          <label>Безстроковий термін дії\n            <input type=\"checkbox\" checked={withDateLimit}\n                   onChange={() => setWithDateLimit(prevState => !prevState)}\n            />\n          </label>\n          {!withDateLimit && (\n            <label>Термін дії\n              <input type=\"date\" value={expireDate}\n                     onChange={e => setExpireDate(e.target.value)}\n              />\n            </label>\n          )}\n          {(selectedUserType.value === UserTypes.TEACHER\n            || selectedUserType.value === UserTypes.CONCERTMASTER\n            || selectedUserType.value === UserTypes.ILLUSTRATOR\n          ) && (\n            <label>Кафедра\n              <Select\n                value={selectedDepartment}\n                onChange={e => setSelectedDepartment(e)}\n                options={departmentsData}\n                //@ts-ignore\n                styles={selectLightStyles}\n                menuPortalTarget={document.body}\n                isSearchable\n                placeholder='Виберіть кафедру'\n              />\n            </label>\n          )}\n          <Button onClick={handleSignUpEmployee} style={{marginTop: 16, height: 40}}\n                  disabled={!firstName || !lastName || !patronymic}>\n            Створити новий аккаунт\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default EditUserPopupBody;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateClassroom.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/createUser.ts",[],["674","675"],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/signupEmployee.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/deleteUser.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/errorHandler/ErrorHandler.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/logout.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/users.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/components/footer/ConfirmBody.tsx",["676","677"],"import React, {useEffect} from \"react\";\nimport Button from \"../button/Button\";\nimport styles from \"../classroom/classroom.module.css\";\nimport {disableClassroomBeforeFreeVar, disabledTimeVar} from \"../../api/client\";\nimport {useLocal} from \"../../hooks/useLocal\";\n\nconst ConfirmBody = () => {\n    const {data: {disabledTime}} = useLocal('disabledTime');\n    const {data: {disableClassroomBeforeFree}} = useLocal('disableClassroomBeforeFree');\n\n    return (\n      <div>\n        <p className={styles.confirmText}>Підтвердіть звільнення аудиторії</p>\n        <div>\n          <input type=\"checkbox\" checked={disableClassroomBeforeFree}\n                 onChange={(e) => disableClassroomBeforeFreeVar(e.target.checked)}/>\n          Заблокувати аудиторію {disableClassroomBeforeFree && (\n            <span>на {disabledTime} хв.</span>\n        )}\n        </div>\n        {disableClassroomBeforeFree && (\n          <div className={styles.disableOptions}>\n            <button onClick={() => disabledTimeVar(15)}\n                    className={disabledTime === 15 ? styles.timeButtonActive : styles.timeButton}>\n              15 хв.\n            </button>\n            <button onClick={() => disabledTimeVar(30)}\n                    className={disabledTime === 30 ? styles.timeButtonActive : styles.timeButton}>\n              30 хв.\n            </button>\n            <button onClick={() => disabledTimeVar(45)}\n                    className={disabledTime === 45 ? styles.timeButtonActive : styles.timeButton}>\n              45 хв.\n            </button>\n            <button onClick={() => disabledTimeVar(60)}\n                    className={disabledTime === 60 ? styles.timeButtonActive : styles.timeButton}>\n              1 год.\n            </button>\n            <button onClick={() => disabledTimeVar(90)}\n                    className={disabledTime === 90 ? styles.timeButtonActive : styles.timeButton}>\n              1 год. 30 хв.\n            </button>\n            <button onClick={() => disabledTimeVar(120)}\n                    className={disabledTime === 120 ? styles.timeButtonActive : styles.timeButton}>\n              2 год.\n            </button>\n            <div className={[15, 30, 45, 60, 90, 120].includes(disabledTime) ? styles.customTimeInput :\n              styles.customTimeInputActive}>\n              <input type=\"number\" value={disabledTime} min={5} max={180} step={5}\n                     onChange={(e) => {\n                       disabledTimeVar(parseInt(e.target.value));\n                     }}/>\n              <span>хв.</span>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n;\n\nexport default ConfirmBody;\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/admin/users/verifyButton/VerifyButton.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/disableDispatcher.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/queries/dispatcherActive.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/subscriptions/dispatcherStatus.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/approveFooter/DeleteUserConfirmPopup.tsx",["678","679"],"import React from \"react\";\nimport {client} from \"../../../api/client\";\nimport {DELETE_USER} from \"../../../api/operations/mutations/deleteUser\";\nimport {ErrorCodes, ErrorCodesUa} from \"../../../models/models\";\nimport Button from \"../../../components/button/Button\";\nimport handleOperation from \"../../../helpers/handleOperation\";\n\n\ntype PropTypes = {\n  dispatchNotification: (value: any) => void;\n  dispatch?: (value: any) => void;\n  userId: number;\n}\n\nconst DeleteUserConfirmPopup: React.FC<PropTypes> = ({dispatch, dispatchNotification, userId}) => {\n  const handleCancel = () => dispatch({type: \"POP_POPUP_WINDOW\"});\n  const handleOk = async () => {\n    const operation = client.mutate({\n      mutation: DELETE_USER,\n      variables: {\n        where: {\n          id: userId\n        }\n      },\n      update(cache) {\n        cache.modify({\n          fields: {\n            users(existingUsersRefs, {readField}) {\n              return existingUsersRefs.filter(\n                (userRef: any) => userId !== readField('id', userRef),\n              );\n            },\n          },\n        })\n      }\n    })\n    await handleOperation(operation, 'deleteOneUser', dispatchNotification, dispatch, 'Користувача видалено.');\n  };\n\n  return (\n    <>\n      <Button\n        color='blue'\n        style={{marginRight: 8, height: 40}}\n        onClick={handleCancel}\n      >\n        Відміна\n      </Button>\n      <Button\n        color='red'\n        onClick={handleOk}\n      >\n        Видалити користувача\n      </Button>\n    </>\n  )\n};\n\nexport default DeleteUserConfirmPopup;","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/handleOperation.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/pages/users/completeEmployeeAccount/CompleteEmployeeAccountPopupBody.tsx",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/validators.ts",["680","681","682","683"],"export const PASSWORD_SOFT_VALID = /^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})/;\nexport const PASSWORD_STRONG_VALID = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\nexport const PHONE_VALID = /\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/;\nexport const ONLY_DIGITS = /^[0-9]*$/;\nexport const EMAIL_VALID = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\nexport const ONLY_CYRILLIC = /[\\u0400-\\u04FF-’]/;\n\nexport const validationErrors = {\n  REQUIRED_FIELD: \"Обов'язкове поле\",\n  INVALID_FORMAT: \"Невірний формат\",\n  PASSWORDS_NOT_SAME: 'Паролі не співпадають',\n  INVALID_PASSWORD: 'Не меньше 6 символів і має містити букви та цифри.',\n  ONLY_CYRILLIC: \"Тільки символи кирилиці\",\n  NO_START_YEAR: \"Рік вступу не вибрано\",\n  NO_DEPARTMENT: \"Кафедру не вибрано\",\n  NO_DEGREE: \"Навчальний ступінь не вибрано\",\n}\n\n","/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/completeEmployeeAccountRequestEmail.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/helpers/getMinutsWithZero.ts",[],"/Users/test/Desktop/react-projects/auditorium_1_4_2/src/api/operations/mutations/updateUser.ts",[],{"ruleId":"684","severity":1,"message":"685","line":14,"column":9,"nodeType":"686","messageId":"687","endLine":14,"endColumn":22},{"ruleId":"688","replacedBy":"689"},{"ruleId":"690","replacedBy":"691"},{"ruleId":"684","severity":1,"message":"692","line":1,"column":56,"nodeType":"686","messageId":"687","endLine":1,"endColumn":64},{"ruleId":"693","severity":1,"message":"694","line":59,"column":6,"nodeType":"695","endLine":59,"endColumn":15,"suggestions":"696"},{"ruleId":"693","severity":1,"message":"697","line":63,"column":6,"nodeType":"695","endLine":63,"endColumn":8,"suggestions":"698"},{"ruleId":"693","severity":1,"message":"699","line":43,"column":6,"nodeType":"695","endLine":43,"endColumn":42,"suggestions":"700"},{"ruleId":"684","severity":1,"message":"701","line":3,"column":9,"nodeType":"686","messageId":"687","endLine":3,"endColumn":17},{"ruleId":"684","severity":1,"message":"702","line":15,"column":9,"nodeType":"686","messageId":"687","endLine":15,"endColumn":14},{"ruleId":"684","severity":1,"message":"703","line":59,"column":25,"nodeType":"686","messageId":"687","endLine":59,"endColumn":30},{"ruleId":"684","severity":1,"message":"704","line":65,"column":23,"nodeType":"686","messageId":"687","endLine":65,"endColumn":37},{"ruleId":"684","severity":1,"message":"705","line":4,"column":8,"nodeType":"686","messageId":"687","endLine":4,"endColumn":16},{"ruleId":"684","severity":1,"message":"706","line":5,"column":31,"nodeType":"686","messageId":"687","endLine":5,"endColumn":35},{"ruleId":"684","severity":1,"message":"707","line":16,"column":20,"nodeType":"686","messageId":"687","endLine":16,"endColumn":31},{"ruleId":"684","severity":1,"message":"708","line":1,"column":9,"nodeType":"686","messageId":"687","endLine":1,"endColumn":13},{"ruleId":"709","severity":1,"message":"710","line":115,"column":38,"nodeType":"711","messageId":"712","endLine":115,"endColumn":40},{"ruleId":"693","severity":1,"message":"713","line":92,"column":6,"nodeType":"695","endLine":92,"endColumn":8,"suggestions":"714"},{"ruleId":"684","severity":1,"message":"715","line":123,"column":9,"nodeType":"686","messageId":"687","endLine":123,"endColumn":27},{"ruleId":"684","severity":1,"message":"716","line":8,"column":8,"nodeType":"686","messageId":"687","endLine":8,"endColumn":14},{"ruleId":"684","severity":1,"message":"717","line":31,"column":70,"nodeType":"686","messageId":"687","endLine":31,"endColumn":78},{"ruleId":"684","severity":1,"message":"718","line":31,"column":80,"nodeType":"686","messageId":"687","endLine":31,"endColumn":85},{"ruleId":"693","severity":1,"message":"719","line":71,"column":6,"nodeType":"695","endLine":71,"endColumn":17,"suggestions":"720"},{"ruleId":"684","severity":1,"message":"721","line":13,"column":9,"nodeType":"686","messageId":"687","endLine":13,"endColumn":15},{"ruleId":"684","severity":1,"message":"722","line":13,"column":17,"nodeType":"686","messageId":"687","endLine":13,"endColumn":23},{"ruleId":"693","severity":1,"message":"723","line":57,"column":6,"nodeType":"695","endLine":57,"endColumn":8,"suggestions":"724"},{"ruleId":"684","severity":1,"message":"725","line":44,"column":12,"nodeType":"686","messageId":"687","endLine":44,"endColumn":25},{"ruleId":"693","severity":1,"message":"726","line":75,"column":6,"nodeType":"695","endLine":75,"endColumn":8,"suggestions":"727"},{"ruleId":"728","severity":1,"message":"729","line":82,"column":93,"nodeType":"730","messageId":"731","endLine":82,"endColumn":95},{"ruleId":"728","severity":1,"message":"729","line":83,"column":91,"nodeType":"730","messageId":"731","endLine":83,"endColumn":93},{"ruleId":"732","severity":1,"message":"733","line":20,"column":5,"nodeType":"734","endLine":30,"endColumn":7},{"ruleId":"732","severity":1,"message":"733","line":12,"column":5,"nodeType":"734","endLine":12,"endColumn":70},{"ruleId":"732","severity":1,"message":"733","line":12,"column":5,"nodeType":"734","endLine":15,"endColumn":9},{"ruleId":"684","severity":1,"message":"735","line":3,"column":8,"nodeType":"686","messageId":"687","endLine":3,"endColumn":14},{"ruleId":"693","severity":1,"message":"736","line":61,"column":6,"nodeType":"695","endLine":61,"endColumn":18,"suggestions":"737"},{"ruleId":"684","severity":1,"message":"703","line":57,"column":25,"nodeType":"686","messageId":"687","endLine":57,"endColumn":30},{"ruleId":"684","severity":1,"message":"738","line":92,"column":15,"nodeType":"686","messageId":"687","endLine":92,"endColumn":21},{"ruleId":"693","severity":1,"message":"736","line":37,"column":6,"nodeType":"695","endLine":37,"endColumn":17,"suggestions":"739"},{"ruleId":"693","severity":1,"message":"736","line":37,"column":6,"nodeType":"695","endLine":37,"endColumn":15,"suggestions":"740"},{"ruleId":"693","severity":1,"message":"736","line":35,"column":6,"nodeType":"695","endLine":35,"endColumn":19,"suggestions":"741"},{"ruleId":"684","severity":1,"message":"742","line":11,"column":9,"nodeType":"686","messageId":"687","endLine":11,"endColumn":15},{"ruleId":"684","severity":1,"message":"743","line":11,"column":17,"nodeType":"686","messageId":"687","endLine":11,"endColumn":28},{"ruleId":"684","severity":1,"message":"744","line":15,"column":18,"nodeType":"686","messageId":"687","endLine":15,"endColumn":25},{"ruleId":"684","severity":1,"message":"703","line":15,"column":27,"nodeType":"686","messageId":"687","endLine":15,"endColumn":32},{"ruleId":"684","severity":1,"message":"745","line":18,"column":11,"nodeType":"686","messageId":"687","endLine":18,"endColumn":18},{"ruleId":"693","severity":1,"message":"746","line":39,"column":6,"nodeType":"695","endLine":39,"endColumn":19,"suggestions":"747"},{"ruleId":"684","severity":1,"message":"748","line":54,"column":44,"nodeType":"686","messageId":"687","endLine":54,"endColumn":49},{"ruleId":"693","severity":1,"message":"749","line":66,"column":6,"nodeType":"695","endLine":66,"endColumn":23,"suggestions":"750"},{"ruleId":"693","severity":1,"message":"749","line":96,"column":6,"nodeType":"695","endLine":96,"endColumn":8,"suggestions":"751"},{"ruleId":"684","severity":1,"message":"748","line":21,"column":34,"nodeType":"686","messageId":"687","endLine":21,"endColumn":39},{"ruleId":"684","severity":1,"message":"748","line":21,"column":34,"nodeType":"686","messageId":"687","endLine":21,"endColumn":39},{"ruleId":"684","severity":1,"message":"752","line":12,"column":8,"nodeType":"686","messageId":"687","endLine":12,"endColumn":13},{"ruleId":"684","severity":1,"message":"748","line":26,"column":34,"nodeType":"686","messageId":"687","endLine":26,"endColumn":39},{"ruleId":"693","severity":1,"message":"749","line":38,"column":6,"nodeType":"695","endLine":38,"endColumn":17,"suggestions":"753"},{"ruleId":"684","severity":1,"message":"748","line":35,"column":34,"nodeType":"686","messageId":"687","endLine":35,"endColumn":39},{"ruleId":"684","severity":1,"message":"754","line":36,"column":22,"nodeType":"686","messageId":"687","endLine":36,"endColumn":37},{"ruleId":"693","severity":1,"message":"755","line":59,"column":6,"nodeType":"695","endLine":59,"endColumn":34,"suggestions":"756"},{"ruleId":"684","severity":1,"message":"757","line":66,"column":18,"nodeType":"686","messageId":"687","endLine":66,"endColumn":22},{"ruleId":"758","severity":1,"message":"759","line":126,"column":11,"nodeType":"734","endLine":126,"endColumn":23},{"ruleId":"688","replacedBy":"760"},{"ruleId":"690","replacedBy":"761"},{"ruleId":"684","severity":1,"message":"762","line":9,"column":11,"nodeType":"686","messageId":"687","endLine":9,"endColumn":19},{"ruleId":"688","replacedBy":"760"},{"ruleId":"690","replacedBy":"761"},{"ruleId":"688","replacedBy":"763"},{"ruleId":"690","replacedBy":"764"},{"ruleId":"684","severity":1,"message":"754","line":27,"column":22,"nodeType":"686","messageId":"687","endLine":27,"endColumn":37},{"ruleId":"684","severity":1,"message":"765","line":2,"column":72,"nodeType":"686","messageId":"687","endLine":2,"endColumn":81},{"ruleId":"693","severity":1,"message":"766","line":65,"column":6,"nodeType":"695","endLine":65,"endColumn":12,"suggestions":"767"},{"ruleId":"688","replacedBy":"768"},{"ruleId":"690","replacedBy":"769"},{"ruleId":"684","severity":1,"message":"770","line":1,"column":16,"nodeType":"686","messageId":"687","endLine":1,"endColumn":25},{"ruleId":"684","severity":1,"message":"771","line":2,"column":8,"nodeType":"686","messageId":"687","endLine":2,"endColumn":14},{"ruleId":"684","severity":1,"message":"772","line":4,"column":9,"nodeType":"686","messageId":"687","endLine":4,"endColumn":19},{"ruleId":"684","severity":1,"message":"773","line":4,"column":21,"nodeType":"686","messageId":"687","endLine":4,"endColumn":33},{"ruleId":"774","severity":1,"message":"775","line":2,"column":82,"nodeType":"776","messageId":"777","endLine":2,"endColumn":83,"suggestions":"778"},{"ruleId":"774","severity":1,"message":"779","line":2,"column":85,"nodeType":"776","messageId":"777","endLine":2,"endColumn":86,"suggestions":"780"},{"ruleId":"774","severity":1,"message":"781","line":2,"column":88,"nodeType":"776","messageId":"777","endLine":2,"endColumn":89,"suggestions":"782"},{"ruleId":"783","severity":1,"message":"784","line":5,"column":28,"nodeType":"776","messageId":"785","endLine":5,"endColumn":476},"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["786"],"no-negated-in-lhs",["787"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCloseNotification'. Either include it or remove the dependency array.","ArrayExpression",["788"],"React Hook useEffect has a missing dependency: 'handleStartTimer'. Either include it or remove the dependency array.",["789"],"React Hook useEffect has a missing dependency: 'dispatcherActive.dispatcherActive'. Either include it or remove the dependency array.",["790"],"'Redirect' is defined but never used.","'style' is assigned a value but never used.","'error' is assigned a value but never used.","'setIsSearching' is assigned a value but never used.","'useUsers' is defined but never used.","'User' is defined but never used.","'setEditMode' is assigned a value but never used.","'bool' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'handleResumeEvent', 'handleWindowFocusEvent', and 'subscribeToMore'. Either include them or remove the dependency array.",["791"],"'handleFilterChange' is assigned a value but never used.","'moment' is defined but never used.","'schedule' is assigned a value but never used.","'chair' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'defineStatus', 'defineStatusStiles', 'defineStyle', and 'occupied.state'. Either include them or remove the dependency array.",["792"],"'MINUTE' is defined but never used.","'SECOND' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["793"],"'freeClassroom' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'classroomName'. Either include it or remove the dependency array.",["794"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Loader' is defined but never used.","React Hook useEffect has a missing dependency: 'dataItem'. Either include it or remove the dependency array.",["795"],"'result' is assigned a value but never used.",["796"],["797"],["798"],"'client' is defined but never used.","'isLoggedVar' is defined but never used.","'loading' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'instrument'. Either include it or remove the dependency array.",["799"],"'watch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["800"],["801"],"'Title' is defined but never used.",["802"],"'subscribeToMore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'isEditMode'. Either include it or remove the dependency array.",["803"],"'type' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["786"],["787"],"'hissings' is assigned a value but never used.",["786"],["787"],"'UserTypes' is defined but never used.","React Hook useEffect has missing dependencies: 'error' and 'loading'. Either include them or remove the dependency array.",["804"],["786"],["787"],"'useEffect' is defined but never used.","'Button' is defined but never used.","'ErrorCodes' is defined but never used.","'ErrorCodesUa' is defined but never used.","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["805","806"],"Unnecessary escape character: \\^.",["807","808"],"Unnecessary escape character: \\*.",["809","810"],"no-control-regex","Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e, \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e.","unexpected","no-global-assign","no-unsafe-negation",{"desc":"811","fix":"812"},{"desc":"813","fix":"814"},{"desc":"815","fix":"816"},{"desc":"817","fix":"818"},{"desc":"819","fix":"820"},{"desc":"821","fix":"822"},{"desc":"823","fix":"824"},{"desc":"825","fix":"826"},{"desc":"827","fix":"828"},{"desc":"829","fix":"830"},{"desc":"831","fix":"832"},{"desc":"833","fix":"834"},{"desc":"835","fix":"836"},{"desc":"837","fix":"838"},{"desc":"839","fix":"840"},{"desc":"841","fix":"842"},{"desc":"843","fix":"844"},{"messageId":"845","fix":"846","desc":"847"},{"messageId":"848","fix":"849","desc":"850"},{"messageId":"845","fix":"851","desc":"847"},{"messageId":"848","fix":"852","desc":"850"},{"messageId":"845","fix":"853","desc":"847"},{"messageId":"848","fix":"854","desc":"850"},"Update the dependencies array to be: [handleCloseNotification, opacity]",{"range":"855","text":"856"},"Update the dependencies array to be: [handleStartTimer]",{"range":"857","text":"858"},"Update the dependencies array to be: [data, loading, error, isDispatcher, dispatcherActive.dispatcherActive]",{"range":"859","text":"860"},"Update the dependencies array to be: [handleResumeEvent, handleWindowFocusEvent, subscribeToMore]",{"range":"861","text":"862"},"Update the dependencies array to be: [classroom, defineStatus, defineStatusStiles, defineStyle, occupied.state]",{"range":"863","text":"864"},"Update the dependencies array to be: [id]",{"range":"865","text":"866"},"Update the dependencies array to be: [classroomName]",{"range":"867","text":"868"},"Update the dependencies array to be: [classrooms, dataItem]",{"range":"869","text":"870"},"Update the dependencies array to be: [dataItem, faculties]",{"range":"871","text":"872"},"Update the dependencies array to be: [dataItem, degrees]",{"range":"873","text":"874"},"Update the dependencies array to be: [dataItem, departments]",{"range":"875","text":"876"},"Update the dependencies array to be: [instrument, instruments]",{"range":"877","text":"878"},"Update the dependencies array to be: [departmentsData, item]",{"range":"879","text":"880"},"Update the dependencies array to be: [item]",{"range":"881","text":"882"},"Update the dependencies array to be: [faculties, item]",{"range":"883","text":"884"},"Update the dependencies array to be: [classroomsData, instrument, isEditMode]",{"range":"885","text":"886"},"Update the dependencies array to be: [data, error, loading]",{"range":"887","text":"888"},"removeEscape",{"range":"889","text":"890"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"891","text":"892"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"893","text":"890"},{"range":"894","text":"892"},{"range":"895","text":"890"},{"range":"896","text":"892"},[1274,1283],"[handleCloseNotification, opacity]",[1336,1338],"[handleStartTimer]",[1962,1998],"[data, loading, error, isDispatcher, dispatcherActive.dispatcherActive]",[3716,3718],"[handleResumeEvent, handleWindowFocusEvent, subscribeToMore]",[2292,2303],"[classroom, defineStatus, defineStatusStiles, defineStyle, occupied.state]",[2108,2110],"[id]",[3147,3149],"[classroomName]",[3121,3133],"[classrooms, dataItem]",[1662,1673],"[dataItem, faculties]",[1642,1651],"[dataItem, degrees]",[1622,1635],"[dataItem, departments]",[2100,2113],"[instrument, instruments]",[2936,2953],"[departmentsData, item]",[4063,4065],"[item]",[1637,1648],"[faculties, item]",[2761,2789],"[classroomsData, instrument, isEditMode]",[2811,2817],"[data, error, loading]",[206,207],"",[206,206],"\\",[209,210],[209,209],[212,213],[212,212]]